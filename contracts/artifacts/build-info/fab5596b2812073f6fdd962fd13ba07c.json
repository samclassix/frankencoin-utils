{
	"id": "fab5596b2812073f6fdd962fd13ba07c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '@openzeppelin/contracts/access/AccessControl.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\ncontract LiquidityController is IERC721Receiver, AccessControl {\n\tbytes32 public constant ADMIN_ROLE = keccak256('ADMIN_ROLE');\n\tbytes32 public constant EXECUTOR_ROLE = keccak256('EXECUTOR_ROLE');\n\n\tINonfungiblePositionManager public immutable nonfungiblePositionManager;\n\tISwapRouter public immutable swapRouter;\n\n\t// Represents the \"Liquidity Position\" (ERC721, NFT, Deposit, ...) at Uniswap\n\tstruct Deposit {\n\t\taddress token0;\n\t\taddress token1;\n\t\tuint24 fee;\n\t\tint24 tickLower;\n\t\tint24 tickUpper;\n\t}\n\n\t// @dev: for storing the NFTs, deposits[tokenId] => Deposit\n\tmapping(uint256 => Deposit) public deposits;\n\n\t// ---------------------------------------------------------------------------------------\n\tevent NewDeposit(uint256 tokenId, address token0, address token1, uint24 fee);\n\tevent CollectedFees(uint256 tokenId, uint256 amount0, uint256 amount1, bool withdrawal);\n\tevent LiquidityIncreased(uint256 tokenId, uint256 amount0, uint256 amount1, uint256 liquidity);\n\tevent LiquidityDecreased(uint256 tokenId, uint256 amount0, uint256 amount1, uint256 liquidity);\n\tevent TokenSwap(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\n\n\t// ---------------------------------------------------------------------------------------\n\tmodifier onlyAdmins() {\n\t\trequire(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin');\n\t\t_;\n\t}\n\tmodifier onlyAdminsOrExecutors() {\n\t\trequire(\n\t\t\thasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true,\n\t\t\t'Not AdminOrExecutor'\n\t\t);\n\t\t_;\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tconstructor(\n\t\tINonfungiblePositionManager _nonfungiblePositionManager,\n\t\tISwapRouter _swapRouter,\n\t\taddress _admin,\n\t\taddress _exec\n\t) {\n\t\tnonfungiblePositionManager = _nonfungiblePositionManager;\n\t\tswapRouter = _swapRouter;\n\n\t\t_setRoleAdmin(ADMIN_ROLE, ADMIN_ROLE);\n\t\t_setRoleAdmin(EXECUTOR_ROLE, ADMIN_ROLE);\n\n\t\t_setupRole(ADMIN_ROLE, _admin);\n\t\t_setupRole(EXECUTOR_ROLE, _exec);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\t// Implementing `onERC721Received` so this contract can receive custody of erc721 tokens\n\tfunction onERC721Received(address, address, uint256 tokenId, bytes calldata) external override returns (bytes4) {\n\t\t_createDeposit(tokenId);\n\t\treturn this.onERC721Received.selector;\n\t}\n\n\tfunction _createDeposit(uint256 tokenId) internal {\n\t\t(\n\t\t\t,\n\t\t\taddress operator,\n\t\t\taddress token0,\n\t\t\taddress token1,\n\t\t\tuint24 fee,\n\t\t\tint24 tickLower,\n\t\t\tint24 tickUpper,\n\t\t\t,\n\t\t\t,\n\t\t\t,\n\t\t\t,\n\n\t\t) = nonfungiblePositionManager.positions(tokenId);\n\t\trequire(operator == address(this), 'Not Owned');\n\t\tdeposits[tokenId] = Deposit({\n\t\t\ttoken0: token0,\n\t\t\ttoken1: token1,\n\t\t\tfee: fee,\n\t\t\ttickLower: tickLower,\n\t\t\ttickUpper: tickUpper\n\t\t});\n\t\temit NewDeposit(tokenId, token0, token1, fee);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\t// Safety functions, ownership, erc20, erc721 // don't be stupid. :)\n\tfunction redeemOwnership(address toTransfer, address to) external onlyAdmins {\n\t\tOwnable(toTransfer).transferOwnership(to);\n\t}\n\n\tfunction redeemToken(address token, address to, uint256 value) external onlyAdmins {\n\t\tTransferHelper.safeTransfer(token, to, value);\n\t}\n\n\tfunction redeemNFT(uint256 tokenId, address to) external onlyAdmins {\n\t\tnonfungiblePositionManager.safeTransferFrom(address(this), to, tokenId);\n\t\tdelete deposits[tokenId];\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\t// transfer helfer from msg.sender for a specific deposit type, -> needs allowance\n\tfunction transferForDeposit(uint256 tokenId, uint256 amount0, uint256 amount1) external onlyAdmins {\n\t\ttransferForTokens(deposits[tokenId].token0, deposits[tokenId].token1, amount0, amount1);\n\t}\n\n\tfunction transferForTokens(address token0, address token1, uint256 amount0, uint256 amount1) public onlyAdmins {\n\t\tTransferHelper.safeTransferFrom(token0, msg.sender, address(this), amount0);\n\t\tTransferHelper.safeTransferFrom(token1, msg.sender, address(this), amount1);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\t// approve for any two tokens to the manager\n\tfunction approveInfinity(address token0, address token1) external onlyAdmins {\n\t\tTransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 1 << 255);\n\t\tTransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 1 << 255);\n\t\tTransferHelper.safeApprove(token0, address(swapRouter), 1 << 255);\n\t\tTransferHelper.safeApprove(token1, address(swapRouter), 1 << 255);\n\t}\n\n\tfunction approveManager(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {\n\t\tTransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amount0);\n\t\tTransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amount1);\n\t}\n\n\tfunction approveRouter(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {\n\t\tTransferHelper.safeApprove(token0, address(swapRouter), amount0);\n\t\tTransferHelper.safeApprove(token1, address(swapRouter), amount1);\n\t}\n\n\t// approve, native proxy\n\tfunction approve(address token, address to, uint256 amount) external onlyAdmins {\n\t\tTransferHelper.safeApprove(token, to, amount);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction mintNewPosition(\n\t\taddress token0,\n\t\taddress token1,\n\t\tuint24 fee,\n\t\tint24 tickLower,\n\t\tint24 tickUpper,\n\t\tuint256 amount0Desired,\n\t\tuint256 amount1Desired,\n\t\tuint256 amount0Min,\n\t\tuint256 amount1Min\n\t) external onlyAdminsOrExecutors returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1) {\n\t\tINonfungiblePositionManager.MintParams memory params = INonfungiblePositionManager.MintParams({\n\t\t\ttoken0: token0,\n\t\t\ttoken1: token1,\n\t\t\tfee: fee,\n\t\t\ttickLower: tickLower,\n\t\t\ttickUpper: tickUpper,\n\t\t\tamount0Desired: amount0Desired,\n\t\t\tamount1Desired: amount1Desired,\n\t\t\tamount0Min: amount0Min,\n\t\t\tamount1Min: amount1Min,\n\t\t\trecipient: address(this),\n\t\t\tdeadline: block.timestamp + 100\n\t\t});\n\n\t\t// @dev: needs allowance, see \"approveManager\"\n\t\t// @dev: pool needs to exist already, incl fee diff.\n\t\t(tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);\n\n\t\t// Create a deposit\n\t\t_createDeposit(tokenId);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction collectFees(\n\t\tuint256 tokenId,\n\t\tbool withdraw\n\t) external onlyAdminsOrExecutors returns (uint256 amount0, uint256 amount1) {\n\t\tif (withdraw == true) {\n\t\t\t// check if you have the rights to withdraw\n\t\t\trequire(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin');\n\t\t}\n\n\t\t// set amount0Max and amount1Max to uint256.max to collect all fees\n\t\tINonfungiblePositionManager.CollectParams memory params = INonfungiblePositionManager.CollectParams({\n\t\t\ttokenId: tokenId,\n\t\t\trecipient: withdraw ? msg.sender : address(this), // give admin the write to withdraw, otherwise to SC\n\t\t\tamount0Max: type(uint128).max,\n\t\t\tamount1Max: type(uint128).max\n\t\t});\n\n\t\t(amount0, amount1) = nonfungiblePositionManager.collect(params);\n\t\temit CollectedFees(tokenId, amount0, amount1, withdraw);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction increaseLiquidity(\n\t\tuint256 tokenId,\n\t\tuint256 amount0Desired,\n\t\tuint256 amount1Desired,\n\t\tuint256 amount0Min,\n\t\tuint256 amount1Min\n\t) external onlyAdminsOrExecutors returns (uint128 liquidity, uint256 amount0, uint256 amount1) {\n\t\tINonfungiblePositionManager.IncreaseLiquidityParams memory params = INonfungiblePositionManager\n\t\t\t.IncreaseLiquidityParams({\n\t\t\t\ttokenId: tokenId,\n\t\t\t\tamount0Desired: amount0Desired,\n\t\t\t\tamount1Desired: amount1Desired,\n\t\t\t\tamount0Min: amount0Min,\n\t\t\t\tamount1Min: amount1Min,\n\t\t\t\tdeadline: block.timestamp\n\t\t\t});\n\n\t\t// @dev: needs allowance, see \"approveManager\"\n\t\t(liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params);\n\t\temit LiquidityIncreased(tokenId, amount0, amount1, liquidity);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction decreaseLiquidity(\n\t\tuint256 tokenId,\n\t\tuint128 liquidity,\n\t\tuint256 amount0Min,\n\t\tuint256 amount1Min\n\t) external onlyAdminsOrExecutors returns (uint256 amount0, uint256 amount1) {\n\t\t// @dev: amount0Min and amount1Min are price slippage checks\n\t\t// @dev: if the amount received after burning is not greater than these minimums, transaction will fail\n\t\tINonfungiblePositionManager.DecreaseLiquidityParams memory params = INonfungiblePositionManager\n\t\t\t.DecreaseLiquidityParams({\n\t\t\t\ttokenId: tokenId,\n\t\t\t\tliquidity: liquidity,\n\t\t\t\tamount0Min: amount0Min,\n\t\t\t\tamount1Min: amount1Min,\n\t\t\t\tdeadline: block.timestamp\n\t\t\t});\n\n\t\t(amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);\n\t\temit LiquidityDecreased(tokenId, amount0, amount1, liquidity);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction swapExactInputSingle(\n\t\taddress tkn0,\n\t\taddress tkn1,\n\t\tuint24 fee,\n\t\tuint256 amountIn,\n\t\tuint256 amountOutMinimum,\n\t\tuint160 sqrtPriceLimitX96\n\t) external onlyAdminsOrExecutors returns (uint256 amountOut) {\n\t\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n\t\t\ttokenIn: tkn0,\n\t\t\ttokenOut: tkn1,\n\t\t\tfee: fee,\n\t\t\trecipient: address(this),\n\t\t\tdeadline: block.timestamp,\n\t\t\tamountIn: amountIn,\n\t\t\tamountOutMinimum: amountOutMinimum,\n\t\t\tsqrtPriceLimitX96: sqrtPriceLimitX96\n\t\t});\n\n\t\t// @dev: needs allowance, see \"approveRouter\"\n\t\tamountOut = swapRouter.exactInputSingle(params);\n\t\temit TokenSwap(tkn0, tkn1, amountIn, amountOut);\n\t}\n\n\t// ---------------------------------------------------------------------------------------\n\tfunction swapExactOutputSingle(\n\t\taddress tkn0,\n\t\taddress tkn1,\n\t\tuint24 fee,\n\t\tuint256 amountOut,\n\t\tuint256 amountInMaximum,\n\t\tuint160 sqrtPriceLimitX96\n\t) external onlyAdminsOrExecutors returns (uint256 amountIn) {\n\t\tISwapRouter.ExactOutputSingleParams memory params = ISwapRouter.ExactOutputSingleParams({\n\t\t\ttokenIn: tkn0,\n\t\t\ttokenOut: tkn1,\n\t\t\tfee: fee,\n\t\t\trecipient: address(this),\n\t\t\tdeadline: block.timestamp,\n\t\t\tamountOut: amountOut,\n\t\t\tamountInMaximum: amountInMaximum,\n\t\t\tsqrtPriceLimitX96: sqrtPriceLimitX96\n\t\t});\n\n\t\t// @dev: needs allowance, see \"approveRouter\"\n\t\tamountIn = swapRouter.exactOutputSingle(params);\n\t\temit TokenSwap(tkn0, tkn1, amountIn, amountOut);\n\t}\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\nimport '../libraries/PoolAddress.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"
			},
			"@openzeppelin/contracts/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)18_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)18_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)18_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1269_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1268,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1004_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)18_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 15,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1269_storage"
									},
									{
										"astId": 17,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1004_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 999,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1003,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 290,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB JUMPDEST 0xB9 0xDE 0xBE 0xA9 0xBD DUP10 PUSH3 0xC622D1 0x4C 0xE3 0xAA EXTCODESIZE LOG0 ADDMOD 0x4F 0xD9 PUSH23 0xB1D98F62700C8D45BBFBD664736F6C6343000706003300 ",
							"sourceMap": "134:7684:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB JUMPDEST 0xB9 0xDE 0xBE 0xA9 0xBD DUP10 PUSH3 0xC622D1 0x4C 0xE3 0xAA EXTCODESIZE LOG0 ADDMOD 0x4F 0xD9 PUSH23 0xB1D98F62700C8D45BBFBD664736F6C6343000706003300 ",
							"sourceMap": "134:7684:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204514d8810a43ca89c3fe74d6dd2c3b26df40aad978723c3ebbc2d407c9a31f8a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204514d8810a43ca89c3fe74d6dd2c3b26df40aad978723c3ebbc2d407c9a31f8a64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT EQ 0xD8 DUP2 EXP NUMBER 0xCA DUP10 0xC3 INVALID PUSH21 0xD6DD2C3B26DF40AAD978723C3EBBC2D407C9A31F8A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "753:8634:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204514d8810a43ca89c3fe74d6dd2c3b26df40aad978723c3ebbc2d407c9a31f8a64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT EQ 0xD8 DUP2 EXP NUMBER 0xCA DUP10 0xC3 INVALID PUSH21 0xD6DD2C3B26DF40AAD978723C3EBBC2D407C9A31F8A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "753:8634:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204514d8810a43ca89c3fe74d6dd2c3b26df40aad978723c3ebbc2d407c9a31f8a64736f6c63430007060033",
									".code": [
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1819  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1819  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208494186d9b86692f9012618b083d9033d4069170a641f385d1c43fe681ac315364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208494186d9b86692f9012618b083d9033d4069170a641f385d1c43fe681ac315364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP5 XOR PUSH14 0x9B86692F9012618B083D9033D406 SWAP2 PUSH17 0xA641F385D1C43FE681AC315364736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "167:1652:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208494186d9b86692f9012618b083d9033d4069170a641f385d1c43fe681ac315364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP5 XOR PUSH14 0x9B86692F9012618B083D9033D406 SWAP2 PUSH17 0xA641F385D1C43FE681AC315364736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "167:1652:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208494186d9b86692f9012618b083d9033d4069170a641f385d1c43fe681ac315364736f6c63430007060033",
									".code": [
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049b67799bceda6a2a4a649f2088c3ba8f4267a3a28beb3dc0da3f909bdb358fa64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049b67799bceda6a2a4a649f2088c3ba8f4267a3a28beb3dc0da3f909bdb358fa64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xB6 PUSH24 0x99BCEDA6A2A4A649F2088C3BA8F4267A3A28BEB3DC0DA3F9 MULMOD 0xBD 0xB3 PC STATICCALL PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "129:2408:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049b67799bceda6a2a4a649f2088c3ba8f4267a3a28beb3dc0da3f909bdb358fa64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xB6 PUSH24 0x99BCEDA6A2A4A649F2088C3BA8F4267A3A28BEB3DC0DA3F9 MULMOD 0xBD 0xB3 PC STATICCALL PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "129:2408:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "INVALID",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049b67799bceda6a2a4a649f2088c3ba8f4267a3a28beb3dc0da3f909bdb358fa64736f6c63430007060033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityController.sol": {
				"LiquidityController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "_nonfungiblePositionManager",
									"type": "address"
								},
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_exec",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "withdrawal",
									"type": "bool"
								}
							],
							"name": "CollectedFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityDecreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityIncreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "NewDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "TokenSwap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EXECUTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "approveInfinity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "approveManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "approveRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "withdraw",
									"type": "bool"
								}
							],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Min",
									"type": "uint256"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Min",
									"type": "uint256"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "amount0Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Min",
									"type": "uint256"
								}
							],
							"name": "mintNewPosition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonfungiblePositionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "redeemNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toTransfer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "redeemOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "redeemToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tkn0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tkn1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tkn0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tkn1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "transferForDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "transferForTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityController.sol\":482:11034  contract LiquidityController is IERC721Receiver, AccessControl {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/LiquidityController.sol\":2100:2485  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/LiquidityController.sol\":2240:2296  nonfungiblePositionManager = _nonfungiblePositionManager */\n  0x60\n  dup6\n  dup2\n  shl\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/LiquidityController.sol\":2300:2324  swapRouter = _swapRouter */\n  dup5\n  swap1\n  shl\n  and\n  0xa0\n  mstore\n    /* \"contracts/LiquidityController.sol\":2329:2366  _setRoleAdmin(ADMIN_ROLE, ADMIN_ROLE) */\n  tag_6\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/LiquidityController.sol\":585:608  keccak256('ADMIN_ROLE') */\n  dup1\n    /* \"contracts/LiquidityController.sol\":2329:2342  _setRoleAdmin */\n  tag_7\n    /* \"contracts/LiquidityController.sol\":2329:2366  _setRoleAdmin(ADMIN_ROLE, ADMIN_ROLE) */\n  jump\t// in\ntag_6:\n    /* \"contracts/LiquidityController.sol\":2370:2410  _setRoleAdmin(EXECUTOR_ROLE, ADMIN_ROLE) */\n  tag_8\n  0x00\n  dup1\n  mload\n  0x20\n  data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/LiquidityController.sol\":2370:2383  _setRoleAdmin */\n  tag_7\n    /* \"contracts/LiquidityController.sol\":2370:2410  _setRoleAdmin(EXECUTOR_ROLE, ADMIN_ROLE) */\n  jump\t// in\ntag_8:\n    /* \"contracts/LiquidityController.sol\":2415:2445  _setupRole(ADMIN_ROLE, _admin) */\n  tag_9\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/LiquidityController.sol\":2438:2444  _admin */\n  dup4\n    /* \"contracts/LiquidityController.sol\":2415:2425  _setupRole */\n  tag_10\n    /* \"contracts/LiquidityController.sol\":2415:2445  _setupRole(ADMIN_ROLE, _admin) */\n  jump\t// in\ntag_9:\n    /* \"contracts/LiquidityController.sol\":2449:2481  _setupRole(EXECUTOR_ROLE, _exec) */\n  tag_11\n  0x00\n  dup1\n  mload\n  0x20\n  data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/LiquidityController.sol\":2475:2480  _exec */\n  dup3\n    /* \"contracts/LiquidityController.sol\":2449:2459  _setupRole */\n  tag_10\n    /* \"contracts/LiquidityController.sol\":2449:2481  _setupRole(EXECUTOR_ROLE, _exec) */\n  jump\t// in\ntag_11:\n    /* \"contracts/LiquidityController.sol\":2100:2485  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/LiquidityController.sol\":482:11034  contract LiquidityController is IERC721Receiver, AccessControl {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6823:7019  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6940  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6946  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6956  _roles[role].adminRole */\n  0x02\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6911:6968  RoleAdminChanged(role, _roles[role].adminRole, adminRole) */\n  swap1\n  mload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6958:6967  adminRole */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6941:6945  role */\n  dup6\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6911:6968  RoleAdminChanged(role, _roles[role].adminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6940  _roles */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6911:6968  RoleAdminChanged(role, _roles[role].adminRole, adminRole) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6984  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6990  _roles[role] */\n  swap2\n  dup3\n  mstore\n  0x20\n  dup3\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:7000  _roles[role].adminRole */\n  0x02\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:7012  _roles[role].adminRole = adminRole */\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6823:7019  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6677:6681  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6683:6690  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6666:6676  _grantRole */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7104  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  tag_18\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7123:7130  account */\n  dup4\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n  tag_0_164\n  tag_19\n  dup3\n  shl\n  or\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  jump\t// in\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7170:7177  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7164:7168  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n  tag_25\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_23:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n  tag_29\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n  tag_30\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n  dup5\n  sload\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\ntag_30:\n  pop\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  jump\t// out\n    /* \"#utility.yul\":14:742   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"#utility.yul\":244:247   */\n  0x80\n    /* \"#utility.yul\":232:241   */\n  dup6\n    /* \"#utility.yul\":223:230   */\n  dup8\n    /* \"#utility.yul\":219:242   */\n  sub\n    /* \"#utility.yul\":215:248   */\n  slt\n    /* \"#utility.yul\":212:214   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":266:272   */\n  dup4\n    /* \"#utility.yul\":258:264   */\n  dup5\n    /* \"#utility.yul\":251:273   */\n  revert\n    /* \"#utility.yul\":212:214   */\ntag_36:\n    /* \"#utility.yul\":303:312   */\n  dup5\n    /* \"#utility.yul\":297:313   */\n  mload\n    /* \"#utility.yul\":322:355   */\n  tag_37\n    /* \"#utility.yul\":349:354   */\n  dup2\n    /* \"#utility.yul\":322:355   */\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":424:426   */\n  0x20\n    /* \"#utility.yul\":409:427   */\n  dup7\n  add\n    /* \"#utility.yul\":403:428   */\n  mload\n    /* \"#utility.yul\":374:379   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":437:472   */\n  tag_39\n    /* \"#utility.yul\":403:428   */\n  dup2\n    /* \"#utility.yul\":437:472   */\n  tag_38\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":543:545   */\n  0x40\n    /* \"#utility.yul\":528:546   */\n  dup7\n  add\n    /* \"#utility.yul\":522:547   */\n  mload\n    /* \"#utility.yul\":491:498   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":556:591   */\n  tag_40\n    /* \"#utility.yul\":522:547   */\n  dup2\n    /* \"#utility.yul\":556:591   */\n  tag_38\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":662:664   */\n  0x60\n    /* \"#utility.yul\":647:665   */\n  dup7\n  add\n    /* \"#utility.yul\":641:666   */\n  mload\n    /* \"#utility.yul\":610:617   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":675:710   */\n  tag_41\n    /* \"#utility.yul\":641:666   */\n  dup2\n    /* \"#utility.yul\":675:710   */\n  tag_38\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":202:742   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":747:880   */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":824:855   */\n  dup2\n  and\n    /* \"#utility.yul\":814:856   */\n  dup2\n  eq\n    /* \"#utility.yul\":804:806   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":870:871   */\n  0x00\n    /* \"#utility.yul\":867:868   */\n  dup1\n    /* \"#utility.yul\":860:872   */\n  revert\n    /* \"#utility.yul\":804:806   */\ntag_43:\n    /* \"#utility.yul\":794:880   */\n  pop\n  jump\t// out\ntag_34:\n    /* \"contracts/LiquidityController.sol\":482:11034  contract LiquidityController is IERC721Receiver, AccessControl {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n  assignImmutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63\ndata_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\nsub_0: assembly {\n        /* \"contracts/LiquidityController.sol\":482:11034  contract LiquidityController is IERC721Receiver, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e5f5977\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb4580507\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdce008af\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd37019d\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe1f21c67\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xb4580507\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc691b0a1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa217fddf\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa8243558\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb02c43d0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb44a2722\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8e5f5977\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x36568abe\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4c8c7314\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4c8c7314\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x57706e74\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d42c461\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3a483cb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3ef4c3d4\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1c8c9980\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1c8c9980\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x25eb6e6f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x07bd0265\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0d71bdc3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityController.sol\":611:677  bytes32 public constant EXECUTOR_ROLE = keccak256('EXECUTOR_ROLE') */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityController.sol\":3640:3776  function redeemToken(address token, address to, uint256 value) external onlyAdmins {... */\n    tag_4:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/LiquidityController.sol\":2670:2854  function onERC721Received(address, address, uint256 tokenId, bytes calldata) external override returns (bytes4) {... */\n    tag_5:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":3511:3637  function redeemOwnership(address toTransfer, address to) external onlyAdmins {... */\n    tag_6:\n      tag_43\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_7:\n      tag_39\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":5136:5418  function approveManager(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_8:\n      tag_43\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_9:\n      tag_43\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_10:\n      tag_43\n      tag_71\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":6980:7763  function collectFees(... */\n    tag_11:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":3779:3954  function redeemNFT(uint256 tokenId, address to) external onlyAdmins {... */\n    tag_12:\n      tag_43\n      tag_80\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":10353:11032  function swapExactOutputSingle(... */\n    tag_13:\n      tag_39\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":5421:5670  function approveRouter(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_14:\n      tag_43\n      tag_90\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":548:608  bytes32 public constant ADMIN_ROLE = keccak256('ADMIN_ROLE') */\n    tag_15:\n      tag_39\n      tag_93\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":4133:4327  function transferForDeposit(uint256 tokenId, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_16:\n      tag_43\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":8713:9486  function decreaseLiquidity(... */\n    tag_17:\n      tag_73\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_18:\n      tag_104\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_19:\n      tag_110\n      tag_111\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_39\n      tag_116\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":4744:5133  function approveInfinity(address token0, address token1) external onlyAdmins {... */\n    tag_21:\n      tag_43\n      tag_119\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":1048:1091  mapping(uint256 => Deposit) public deposits */\n    tag_22:\n      tag_121\n      tag_122\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_41\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":681:752  INonfungiblePositionManager public immutable nonfungiblePositionManager */\n    tag_23:\n      tag_104\n      tag_128\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":9581:10258  function swapExactInputSingle(... */\n    tag_24:\n      tag_39\n      tag_132\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":755:794  ISwapRouter public immutable swapRouter */\n    tag_25:\n      tag_104\n      tag_136\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":7858:8618  function increaseLiquidity(... */\n    tag_26:\n      tag_139\n      tag_140\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_27:\n      tag_39\n      tag_146\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_28:\n      tag_43\n      tag_150\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":4330:4603  function transferForTokens(address token0, address token1, uint256 amount0, uint256 amount1) public onlyAdmins {... */\n    tag_29:\n      tag_43\n      tag_153\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":5927:6885  function mintNewPosition(... */\n    tag_30:\n      tag_155\n      tag_156\n      calldatasize\n      0x04\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_41\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":5699:5832  function approve(address token, address to, uint256 amount) external onlyAdmins {... */\n    tag_31:\n      tag_43\n      tag_162\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":611:677  bytes32 public constant EXECUTOR_ROLE = keccak256('EXECUTOR_ROLE') */\n    tag_40:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":3640:3776  function redeemToken(address token, address to, uint256 value) external onlyAdmins {... */\n    tag_46:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_166\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/LiquidityController.sol\":3727:3772  TransferHelper.safeTransfer(token, to, value) */\n      tag_171\n        /* \"contracts/LiquidityController.sol\":3755:3760  token */\n      dup4\n        /* \"contracts/LiquidityController.sol\":3762:3764  to */\n      dup4\n        /* \"contracts/LiquidityController.sol\":3766:3771  value */\n      dup4\n        /* \"contracts/LiquidityController.sol\":3727:3754  TransferHelper.safeTransfer */\n      tag_172\n        /* \"contracts/LiquidityController.sol\":3727:3772  TransferHelper.safeTransfer(token, to, value) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/LiquidityController.sol\":3640:3776  function redeemToken(address token, address to, uint256 value) external onlyAdmins {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":2670:2854  function onERC721Received(address, address, uint256 tokenId, bytes calldata) external override returns (bytes4) {... */\n    tag_50:\n        /* \"contracts/LiquidityController.sol\":2774:2780  bytes4 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":2786:2809  _createDeposit(tokenId) */\n      tag_174\n        /* \"contracts/LiquidityController.sol\":2801:2808  tokenId */\n      dup5\n        /* \"contracts/LiquidityController.sol\":2786:2800  _createDeposit */\n      tag_175\n        /* \"contracts/LiquidityController.sol\":2786:2809  _createDeposit(tokenId) */\n      jump\t// in\n    tag_174:\n      pop\n      shl(0xe1, 0x0a85bd01)\n        /* \"contracts/LiquidityController.sol\":2670:2854  function onERC721Received(address, address, uint256 tokenId, bytes calldata) external override returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":3511:3637  function redeemOwnership(address toTransfer, address to) external onlyAdmins {... */\n    tag_56:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_177\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_178:\n        /* \"contracts/LiquidityController.sol\":3592:3633  Ownable(toTransfer).transferOwnership(to) */\n      mload(0x40)\n      shl(0xe0, 0xf2fde38b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3592:3629  Ownable(toTransfer).transferOwnership */\n      dup4\n      and\n      swap1\n      0xf2fde38b\n      swap1\n        /* \"contracts/LiquidityController.sol\":3592:3633  Ownable(toTransfer).transferOwnership(to) */\n      tag_181\n      swap1\n        /* \"contracts/LiquidityController.sol\":3630:3632  to */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":3592:3633  Ownable(toTransfer).transferOwnership(to) */\n      0x04\n      add\n      tag_109\n      jump\t// in\n    tag_181:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityController.sol\":3511:3637  function redeemOwnership(address toTransfer, address to) external onlyAdmins {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4339:4346  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4365:4377  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4365:4387  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_185:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":5136:5418  function approveManager(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_65:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_187\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_188:\n        /* \"contracts/LiquidityController.sol\":5250:5330  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amount0) */\n      tag_191\n        /* \"contracts/LiquidityController.sol\":5277:5283  token0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":5293:5319  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":5322:5329  amount0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":5250:5276  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5250:5330  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amount0) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/LiquidityController.sol\":5334:5414  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amount1) */\n      tag_193\n        /* \"contracts/LiquidityController.sol\":5361:5367  token1 */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5377:5403  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":5406:5413  amount1 */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5334:5360  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5334:5414  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amount1) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/LiquidityController.sol\":5136:5418  function approveManager(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4741  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4757  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_195\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4769  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4719:4824  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4846:4850  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4852:4859  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4835:4845  _grantRole */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5915:5925  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5904:5911  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5896:5979  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6002:6006  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6008:6015  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5990:6001  _revokeRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":6980:7763  function collectFees(... */\n    tag_76:\n        /* \"contracts/LiquidityController.sol\":7080:7095  uint256 amount0 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":7097:7112  uint256 amount1 */\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_207\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_208\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_209\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_208:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_210:\n        /* \"contracts/LiquidityController.sol\":7134:7138  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":7122:7138  withdraw == true */\n      dup4\n      iszero\n      iszero\n      eq\n        /* \"contracts/LiquidityController.sol\":7118:7258  if (withdraw == true) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"contracts/LiquidityController.sol\":7200:7231  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_215\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":7220:7230  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":7200:7207  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":7200:7231  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/LiquidityController.sol\":7200:7239  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":7235:7239  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":7200:7239  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":7192:7253  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_216:\n        /* \"contracts/LiquidityController.sol\":7332:7387  INonfungiblePositionManager.CollectParams memory params */\n      0x00\n        /* \"contracts/LiquidityController.sol\":7390:7632  INonfungiblePositionManager.CollectParams({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LiquidityController.sol\":7446:7453  tokenId */\n      dup7\n        /* \"contracts/LiquidityController.sol\":7390:7632  INonfungiblePositionManager.CollectParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":7469:7477  withdraw */\n      dup6\n        /* \"contracts/LiquidityController.sol\":7469:7506  withdraw ? msg.sender : address(this) */\n      tag_218\n      jumpi\n        /* \"contracts/LiquidityController.sol\":7501:7505  this */\n      address\n        /* \"contracts/LiquidityController.sol\":7469:7506  withdraw ? msg.sender : address(this) */\n      jump(tag_219)\n    tag_218:\n        /* \"contracts/LiquidityController.sol\":7480:7490  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":7469:7506  withdraw ? msg.sender : address(this) */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":7390:7632  INonfungiblePositionManager.CollectParams({... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      0x20\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x40\n      swap3\n      dup4\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":7658:7700  nonfungiblePositionManager.collect(params) */\n      swap1\n      mload\n      shl(0xe0, 0xfc6f7865)\n      dup2\n      mstore\n        /* \"contracts/LiquidityController.sol\":7332:7632  INonfungiblePositionManager.CollectParams memory params = INonfungiblePositionManager.CollectParams({... */\n      swap2\n      swap3\n      pop\n        /* \"contracts/LiquidityController.sol\":7658:7684  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":7658:7692  nonfungiblePositionManager.collect */\n      and\n      swap1\n      0xfc6f7865\n      swap1\n        /* \"contracts/LiquidityController.sol\":7658:7700  nonfungiblePositionManager.collect(params) */\n      tag_220\n      swap1\n        /* \"contracts/LiquidityController.sol\":7332:7632  INonfungiblePositionManager.CollectParams memory params = INonfungiblePositionManager.CollectParams({... */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":7658:7700  nonfungiblePositionManager.collect(params) */\n      0x04\n      add\n      tag_221\n      jump\t// in\n    tag_220:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"contracts/LiquidityController.sol\":7709:7759  CollectedFees(tokenId, amount0, amount1, withdraw) */\n      mload(0x40)\n        /* \"contracts/LiquidityController.sol\":7637:7700  (amount0, amount1) = nonfungiblePositionManager.collect(params) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n        /* \"contracts/LiquidityController.sol\":7709:7759  CollectedFees(tokenId, amount0, amount1, withdraw) */\n      0xeaa34316c1ac0ac2b8445632fef75dad91f846cc69c40a558ccfd6e5700bb79a\n      swap1\n      tag_227\n      swap1\n        /* \"contracts/LiquidityController.sol\":7723:7730  tokenId */\n      dup8\n      swap1\n        /* \"contracts/LiquidityController.sol\":7637:7700  (amount0, amount1) = nonfungiblePositionManager.collect(params) */\n      dup7\n      swap1\n      dup7\n      swap1\n        /* \"contracts/LiquidityController.sol\":7750:7758  withdraw */\n      dup10\n      swap1\n        /* \"contracts/LiquidityController.sol\":7709:7759  CollectedFees(tokenId, amount0, amount1, withdraw) */\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityController.sol\":2000:2001  _ */\n      pop\n        /* \"contracts/LiquidityController.sol\":6980:7763  function collectFees(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":3779:3954  function redeemNFT(uint256 tokenId, address to) external onlyAdmins {... */\n    tag_82:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_230\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_231:\n        /* \"contracts/LiquidityController.sol\":3851:3922  nonfungiblePositionManager.safeTransferFrom(address(this), to, tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3851:3877  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":3851:3894  nonfungiblePositionManager.safeTransferFrom */\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"contracts/LiquidityController.sol\":3851:3922  nonfungiblePositionManager.safeTransferFrom(address(this), to, tokenId) */\n      tag_234\n      swap1\n        /* \"contracts/LiquidityController.sol\":3903:3907  this */\n      address\n      swap1\n        /* \"contracts/LiquidityController.sol\":3910:3912  to */\n      dup6\n      swap1\n        /* \"contracts/LiquidityController.sol\":3914:3921  tokenId */\n      dup8\n      swap1\n        /* \"contracts/LiquidityController.sol\":3851:3922  nonfungiblePositionManager.safeTransferFrom(address(this), to, tokenId) */\n      0x04\n      add\n      tag_235\n      jump\t// in\n    tag_234:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityController.sol\":3933:3950  deposits[tokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"contracts/LiquidityController.sol\":3933:3941  deposits */\n      0x01\n        /* \"contracts/LiquidityController.sol\":3933:3950  deposits[tokenId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/LiquidityController.sol\":3926:3950  delete deposits[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n      add\n      dup1\n      sload\n      not(sub(shl(0xe8, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/LiquidityController.sol\":3779:3954  function redeemNFT(uint256 tokenId, address to) external onlyAdmins {... */\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":10353:11032  function swapExactOutputSingle(... */\n    tag_86:\n        /* \"contracts/LiquidityController.sol\":10550:10566  uint256 amountIn */\n      0x00\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_240\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_241\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_242\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_241:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_243:\n        /* \"contracts/LiquidityController.sol\":10624:10877  ISwapRouter.ExactOutputSingleParams({... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      dup3\n      mstore\n      dup9\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffff\n      dup9\n      and\n      dup3\n      dup5\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":10734:10738  this */\n      address\n        /* \"contracts/LiquidityController.sol\":10624:10877  ISwapRouter.ExactOutputSingleParams({... */\n      0x60\n      dup4\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":10754:10769  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityController.sol\":10624:10877  ISwapRouter.ExactOutputSingleParams({... */\n      0x80\n      dup4\n      add\n      mstore\n      0xa0\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      0xc0\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      dup2\n      and\n      0xe0\n      dup4\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":10941:10977  swapRouter.exactOutputSingle(params) */\n      swap2\n      mload\n      shl(0xe3, 0x1b67c433)\n      dup2\n      mstore\n        /* \"contracts/LiquidityController.sol\":10624:10877  ISwapRouter.ExactOutputSingleParams({... */\n      swap1\n      swap2\n        /* \"contracts/LiquidityController.sol\":10941:10951  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n        /* \"contracts/LiquidityController.sol\":10941:10969  swapRouter.exactOutputSingle */\n      and\n      swap1\n      0xdb3e2198\n      swap1\n        /* \"contracts/LiquidityController.sol\":10941:10977  swapRouter.exactOutputSingle(params) */\n      tag_246\n      swap1\n        /* \"contracts/LiquidityController.sol\":10624:10877  ISwapRouter.ExactOutputSingleParams({... */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":10941:10977  swapRouter.exactOutputSingle(params) */\n      0x04\n      add\n      tag_306\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts/LiquidityController.sol\":10930:10977  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/LiquidityController.sol\":10986:11028  TokenSwap(tkn0, tkn1, amountIn, amountOut) */\n      0x1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f\n        /* \"contracts/LiquidityController.sol\":10996:11000  tkn0 */\n      dup9\n        /* \"contracts/LiquidityController.sol\":11002:11006  tkn1 */\n      dup9\n        /* \"contracts/LiquidityController.sol\":11008:11016  amountIn */\n      dup5\n        /* \"contracts/LiquidityController.sol\":11018:11027  amountOut */\n      dup9\n        /* \"contracts/LiquidityController.sol\":10986:11028  TokenSwap(tkn0, tkn1, amountIn, amountOut) */\n      mload(0x40)\n      tag_253\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityController.sol\":2000:2001  _ */\n      pop\n        /* \"contracts/LiquidityController.sol\":10353:11032  function swapExactOutputSingle(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":5421:5670  function approveRouter(address token0, address token1, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_91:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_256\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_257:\n        /* \"contracts/LiquidityController.sol\":5534:5598  TransferHelper.safeApprove(token0, address(swapRouter), amount0) */\n      tag_260\n        /* \"contracts/LiquidityController.sol\":5561:5567  token0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":5577:5587  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n        /* \"contracts/LiquidityController.sol\":5590:5597  amount0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":5534:5560  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5534:5598  TransferHelper.safeApprove(token0, address(swapRouter), amount0) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/LiquidityController.sol\":5602:5666  TransferHelper.safeApprove(token1, address(swapRouter), amount1) */\n      tag_193\n        /* \"contracts/LiquidityController.sol\":5629:5635  token1 */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5645:5655  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n        /* \"contracts/LiquidityController.sol\":5658:5665  amount1 */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5602:5628  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5602:5666  TransferHelper.safeApprove(token1, address(swapRouter), amount1) */\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":548:608  bytes32 public constant ADMIN_ROLE = keccak256('ADMIN_ROLE') */\n    tag_93:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":4133:4327  function transferForDeposit(uint256 tokenId, uint256 amount0, uint256 amount1) external onlyAdmins {... */\n    tag_98:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_263\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_264:\n        /* \"contracts/LiquidityController.sol\":4254:4271  deposits[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/LiquidityController.sol\":4254:4262  deposits */\n      0x01\n        /* \"contracts/LiquidityController.sol\":4254:4271  deposits[tokenId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/LiquidityController.sol\":4254:4278  deposits[tokenId].token0 */\n      dup1\n      sload\n        /* \"contracts/LiquidityController.sol\":4280:4304  deposits[tokenId].token1 */\n      swap2\n      add\n      sload\n        /* \"contracts/LiquidityController.sol\":4236:4323  transferForTokens(deposits[tokenId].token0, deposits[tokenId].token1, amount0, amount1) */\n      tag_171\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":4254:4278  deposits[tokenId].token0 */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/LiquidityController.sol\":4280:4304  deposits[tokenId].token1 */\n      and\n        /* \"contracts/LiquidityController.sol\":4306:4313  amount0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":4315:4322  amount1 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":4236:4253  transferForTokens */\n      tag_154\n        /* \"contracts/LiquidityController.sol\":4236:4323  transferForTokens(deposits[tokenId].token0, deposits[tokenId].token1, amount0, amount1) */\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":8713:9486  function decreaseLiquidity(... */\n    tag_102:\n        /* \"contracts/LiquidityController.sol\":8867:8882  uint256 amount0 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":8884:8899  uint256 amount1 */\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_269\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_270\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_271\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_270:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_272:\n        /* \"contracts/LiquidityController.sol\":9142:9339  INonfungiblePositionManager... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup8\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      dup8\n      and\n      0x20\n      dup3\n      add\n      mstore\n      dup1\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/LiquidityController.sol\":9318:9333  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityController.sol\":9142:9339  INonfungiblePositionManager... */\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":9365:9417  nonfungiblePositionManager.decreaseLiquidity(params) */\n      swap1\n      mload\n      shl(0xe1, 0x0624e65f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":9365:9391  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":9365:9409  nonfungiblePositionManager.decreaseLiquidity */\n      and\n      swap1\n      0x0c49ccbe\n      swap1\n        /* \"contracts/LiquidityController.sol\":9365:9417  nonfungiblePositionManager.decreaseLiquidity(params) */\n      tag_275\n      swap1\n        /* \"contracts/LiquidityController.sol\":9142:9339  INonfungiblePositionManager... */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":9365:9417  nonfungiblePositionManager.decreaseLiquidity(params) */\n      0x04\n      add\n      tag_276\n      jump\t// in\n    tag_275:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_280\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"contracts/LiquidityController.sol\":9426:9482  LiquidityDecreased(tokenId, amount0, amount1, liquidity) */\n      mload(0x40)\n        /* \"contracts/LiquidityController.sol\":9344:9417  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n        /* \"contracts/LiquidityController.sol\":9426:9482  LiquidityDecreased(tokenId, amount0, amount1, liquidity) */\n      0xc79cb6614f7bcc31f0121c4db623a782836f42b2d8e5290a19340bdbc25032f7\n      swap1\n      tag_281\n      swap1\n        /* \"contracts/LiquidityController.sol\":9445:9452  tokenId */\n      dup10\n      swap1\n        /* \"contracts/LiquidityController.sol\":9344:9417  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params) */\n      dup7\n      swap1\n      dup7\n      swap1\n        /* \"contracts/LiquidityController.sol\":9472:9481  liquidity */\n      dup12\n      swap1\n        /* \"contracts/LiquidityController.sol\":9426:9482  LiquidityDecreased(tokenId, amount0, amount1, liquidity) */\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityController.sol\":2000:2001  _ */\n      pop\n        /* \"contracts/LiquidityController.sol\":8713:9486  function decreaseLiquidity(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4038:4045  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      tag_284\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4093  index */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4064:4087  _roles[role].members.at */\n      tag_285\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4057:4094  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_283:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3019:3023  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      tag_284\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3072:3079  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3042:3071  _roles[role].members.contains */\n      tag_288\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":4744:5133  function approveInfinity(address token0, address token1) external onlyAdmins {... */\n    tag_120:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_290\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_291:\n        /* \"contracts/LiquidityController.sol\":4825:4906  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 1 << 255) */\n      tag_294\n        /* \"contracts/LiquidityController.sol\":4852:4858  token0 */\n      dup3\n        /* \"contracts/LiquidityController.sol\":4868:4894  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n      shl(0xff, 0x01)\n        /* \"contracts/LiquidityController.sol\":4825:4851  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":4825:4906  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 1 << 255) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/LiquidityController.sol\":4910:4991  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 1 << 255) */\n      tag_295\n        /* \"contracts/LiquidityController.sol\":4937:4943  token1 */\n      dup2\n        /* \"contracts/LiquidityController.sol\":4953:4979  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n      shl(0xff, 0x01)\n        /* \"contracts/LiquidityController.sol\":4910:4936  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":4910:4991  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 1 << 255) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/LiquidityController.sol\":4995:5060  TransferHelper.safeApprove(token0, address(swapRouter), 1 << 255) */\n      tag_296\n        /* \"contracts/LiquidityController.sol\":5022:5028  token0 */\n      dup3\n        /* \"contracts/LiquidityController.sol\":5038:5048  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n      shl(0xff, 0x01)\n        /* \"contracts/LiquidityController.sol\":4995:5021  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":4995:5060  TransferHelper.safeApprove(token0, address(swapRouter), 1 << 255) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/LiquidityController.sol\":5064:5129  TransferHelper.safeApprove(token1, address(swapRouter), 1 << 255) */\n      tag_199\n        /* \"contracts/LiquidityController.sol\":5091:5097  token1 */\n      dup2\n        /* \"contracts/LiquidityController.sol\":5107:5117  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n      shl(0xff, 0x01)\n        /* \"contracts/LiquidityController.sol\":5064:5090  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5064:5129  TransferHelper.safeApprove(token1, address(swapRouter), 1 << 255) */\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":1048:1091  mapping(uint256 => Deposit) public deposits */\n    tag_124:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0xffffff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      and\n      swap1\n      shl(0xb8, 0x01)\n      dup2\n      div\n      0x02\n      swap1\n      dup2\n      signextend\n      swap2\n      shl(0xd0, 0x01)\n      swap1\n      div\n      swap1\n      signextend\n      dup6\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":681:752  INonfungiblePositionManager public immutable nonfungiblePositionManager */\n    tag_128:\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":9581:10258  function swapExactInputSingle(... */\n    tag_133:\n        /* \"contracts/LiquidityController.sol\":9777:9794  uint256 amountOut */\n      0x00\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_299\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_300\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_301\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_300:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_302:\n        /* \"contracts/LiquidityController.sol\":9851:10103  ISwapRouter.ExactInputSingleParams({... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      dup3\n      mstore\n      dup9\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffff\n      dup9\n      and\n      dup3\n      dup5\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":9960:9964  this */\n      address\n        /* \"contracts/LiquidityController.sol\":9851:10103  ISwapRouter.ExactInputSingleParams({... */\n      0x60\n      dup4\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":9980:9995  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityController.sol\":9851:10103  ISwapRouter.ExactInputSingleParams({... */\n      0x80\n      dup4\n      add\n      mstore\n      0xa0\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      0xc0\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      dup2\n      and\n      0xe0\n      dup4\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":10168:10203  swapRouter.exactInputSingle(params) */\n      swap2\n      mload\n      shl(0xe0, 0x414bf389)\n      dup2\n      mstore\n        /* \"contracts/LiquidityController.sol\":9851:10103  ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      swap2\n        /* \"contracts/LiquidityController.sol\":10168:10178  swapRouter */\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n        /* \"contracts/LiquidityController.sol\":10168:10195  swapRouter.exactInputSingle */\n      and\n      swap1\n      0x414bf389\n      swap1\n        /* \"contracts/LiquidityController.sol\":10168:10203  swapRouter.exactInputSingle(params) */\n      tag_305\n      swap1\n        /* \"contracts/LiquidityController.sol\":9851:10103  ISwapRouter.ExactInputSingleParams({... */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":10168:10203  swapRouter.exactInputSingle(params) */\n      0x04\n      add\n      tag_306\n      jump\t// in\n    tag_305:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_310:\n        /* \"contracts/LiquidityController.sol\":10156:10203  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/LiquidityController.sol\":10212:10254  TokenSwap(tkn0, tkn1, amountIn, amountOut) */\n      0x1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f\n        /* \"contracts/LiquidityController.sol\":10222:10226  tkn0 */\n      dup9\n        /* \"contracts/LiquidityController.sol\":10228:10232  tkn1 */\n      dup9\n        /* \"contracts/LiquidityController.sol\":10234:10242  amountIn */\n      dup8\n        /* \"contracts/LiquidityController.sol\":10244:10253  amountOut */\n      dup6\n        /* \"contracts/LiquidityController.sol\":10212:10254  TokenSwap(tkn0, tkn1, amountIn, amountOut) */\n      mload(0x40)\n      tag_253\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":755:794  ISwapRouter public immutable swapRouter */\n    tag_136:\n      immutable(\"0xec9dc0e935b90a8223848d74f2e39812c3ca143ad37a4076c4c95f9814669036\")\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":7858:8618  function increaseLiquidity(... */\n    tag_142:\n        /* \"contracts/LiquidityController.sol\":8043:8060  uint128 liquidity */\n      0x00\n        /* \"contracts/LiquidityController.sol\":8062:8077  uint256 amount0 */\n      dup1\n        /* \"contracts/LiquidityController.sol\":8079:8094  uint256 amount1 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_313\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_314\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_315\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_314:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_316:\n        /* \"contracts/LiquidityController.sol\":8168:8411  INonfungiblePositionManager... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup10\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup10\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n        /* \"contracts/LiquidityController.sol\":8390:8405  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityController.sol\":8168:8411  INonfungiblePositionManager... */\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/LiquidityController.sol\":8497:8549  nonfungiblePositionManager.increaseLiquidity(params) */\n      swap1\n      mload\n      shl(0xe0, 0x219f5d17)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":8497:8523  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n        /* \"contracts/LiquidityController.sol\":8497:8541  nonfungiblePositionManager.increaseLiquidity */\n      and\n      swap1\n      0x219f5d17\n      swap1\n        /* \"contracts/LiquidityController.sol\":8497:8549  nonfungiblePositionManager.increaseLiquidity(params) */\n      tag_319\n      swap1\n        /* \"contracts/LiquidityController.sol\":8168:8411  INonfungiblePositionManager... */\n      dup5\n      swap1\n        /* \"contracts/LiquidityController.sol\":8497:8549  nonfungiblePositionManager.increaseLiquidity(params) */\n      0x04\n      add\n      tag_320\n      jump\t// in\n    tag_319:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_323:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"contracts/LiquidityController.sol\":8558:8614  LiquidityIncreased(tokenId, amount0, amount1, liquidity) */\n      mload(0x40)\n        /* \"contracts/LiquidityController.sol\":8465:8549  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params) */\n      swap3\n      swap7\n      pop\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n        /* \"contracts/LiquidityController.sol\":8558:8614  LiquidityIncreased(tokenId, amount0, amount1, liquidity) */\n      0x2d6edbed0a944a56e78d8ced0bc4794533b38938655f47c5a423559a1163b104\n      swap1\n      tag_326\n      swap1\n        /* \"contracts/LiquidityController.sol\":8577:8584  tokenId */\n      dup12\n      swap1\n        /* \"contracts/LiquidityController.sol\":8465:8549  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params) */\n      dup7\n      swap1\n      dup7\n      swap1\n      dup10\n      swap1\n        /* \"contracts/LiquidityController.sol\":8558:8614  LiquidityIncreased(tokenId, amount0, amount1, liquidity) */\n      tag_282\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityController.sol\":2000:2001  _ */\n      pop\n        /* \"contracts/LiquidityController.sol\":7858:8618  function increaseLiquidity(... */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3318:3325  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      tag_283\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3344:3371  _roles[role].members.length */\n      tag_329\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5193:5199  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5193:5215  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_331\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5217:5227  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_331:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5177:5283  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/LiquidityController.sol\":4330:4603  function transferForTokens(address token0, address token1, uint256 amount0, uint256 amount1) public onlyAdmins {... */\n    tag_154:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_336\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_336:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_337:\n        /* \"contracts/LiquidityController.sol\":4445:4520  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amount0) */\n      tag_340\n        /* \"contracts/LiquidityController.sol\":4477:4483  token0 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":4485:4495  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":4505:4509  this */\n      address\n        /* \"contracts/LiquidityController.sol\":4512:4519  amount0 */\n      dup6\n        /* \"contracts/LiquidityController.sol\":4445:4476  TransferHelper.safeTransferFrom */\n      tag_341\n        /* \"contracts/LiquidityController.sol\":4445:4520  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amount0) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/LiquidityController.sol\":4524:4599  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amount1) */\n      tag_193\n        /* \"contracts/LiquidityController.sol\":4556:4562  token1 */\n      dup4\n        /* \"contracts/LiquidityController.sol\":4564:4574  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":4584:4588  this */\n      address\n        /* \"contracts/LiquidityController.sol\":4591:4598  amount1 */\n      dup5\n        /* \"contracts/LiquidityController.sol\":4524:4555  TransferHelper.safeTransferFrom */\n      tag_341\n        /* \"contracts/LiquidityController.sol\":4524:4599  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amount1) */\n      jump\t// in\n        /* \"contracts/LiquidityController.sol\":5927:6885  function mintNewPosition(... */\n    tag_158:\n        /* \"contracts/LiquidityController.sol\":6179:6194  uint256 tokenId */\n      0x00\n        /* \"contracts/LiquidityController.sol\":6196:6213  uint128 liquidity */\n      dup1\n        /* \"contracts/LiquidityController.sol\":6215:6230  uint256 amount0 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":6232:6247  uint256 amount1 */\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_344\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1901:1911  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1881:1888  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1881:1912  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1916:1920  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1881:1920  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n      dup1\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      tag_346\n      0x00\n      dup1\n      mload\n      0x20\n      data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1924:1931  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1924:1958  hasRole(EXECUTOR_ROLE, msg.sender) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1962:1966  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1924:1966  hasRole(EXECUTOR_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1881:1966  hasRole(ADMIN_ROLE, msg.sender) == true || hasRole(EXECUTOR_ROLE, msg.sender) == true */\n    tag_345:\n        /* \"contracts/LiquidityController.sol\":1869:1996  require(... */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_212\n      jump\t// in\n    tag_347:\n        /* \"contracts/LiquidityController.sol\":6253:6305  INonfungiblePositionManager.MintParams memory params */\n      0x00\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LiquidityController.sol\":6360:6366  token0 */\n      dup16\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6379:6385  token1 */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6395:6398  fee */\n      dup14\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6414:6423  tickLower */\n      dup13\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6439:6448  tickUpper */\n      dup12\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6469:6483  amount0Desired */\n      dup11\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6504:6518  amount1Desired */\n      dup10\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6535:6545  amount0Min */\n      dup9\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6562:6572  amount1Min */\n      dup8\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6596:6600  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":6616:6631  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityController.sol\":6634:6637  100 */\n      0x64\n        /* \"contracts/LiquidityController.sol\":6616:6637  block.timestamp + 100 */\n      add\n        /* \"contracts/LiquidityController.sol\":6308:6642  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/LiquidityController.sol\":6253:6642  INonfungiblePositionManager.MintParams memory params = INonfungiblePositionManager.MintParams({... */\n      swap1\n      pop\n        /* \"contracts/LiquidityController.sol\":6792:6818  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":6792:6823  nonfungiblePositionManager.mint */\n      and\n      0x88316456\n        /* \"contracts/LiquidityController.sol\":6824:6830  params */\n      dup3\n        /* \"contracts/LiquidityController.sol\":6792:6831  nonfungiblePositionManager.mint(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_352\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_352:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_354:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_355\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"contracts/LiquidityController.sol\":6751:6831  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/LiquidityController.sol\":6858:6881  _createDeposit(tokenId) */\n      tag_357\n        /* \"contracts/LiquidityController.sol\":6751:6831  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      dup6\n        /* \"contracts/LiquidityController.sol\":6858:6872  _createDeposit */\n      tag_175\n        /* \"contracts/LiquidityController.sol\":6858:6881  _createDeposit(tokenId) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/LiquidityController.sol\":2000:2001  _ */\n      pop\n        /* \"contracts/LiquidityController.sol\":5927:6885  function mintNewPosition(... */\n      swap10\n      pop\n      swap10\n      pop\n      swap10\n      pop\n      swap10\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":5699:5832  function approve(address token, address to, uint256 amount) external onlyAdmins {... */\n    tag_163:\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_359\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/LiquidityController.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/LiquidityController.sol\":1768:1775  hasRole */\n      tag_112\n        /* \"contracts/LiquidityController.sol\":1768:1799  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_359:\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/LiquidityController.sol\":1803:1807  true */\n      0x01\n        /* \"contracts/LiquidityController.sol\":1768:1807  hasRole(ADMIN_ROLE, msg.sender) == true */\n      eq\n        /* \"contracts/LiquidityController.sol\":1760:1821  require(hasRole(ADMIN_ROLE, msg.sender) == true, 'Not Admin') */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_360:\n        /* \"contracts/LiquidityController.sol\":5783:5828  TransferHelper.safeApprove(token, to, amount) */\n      tag_171\n        /* \"contracts/LiquidityController.sol\":5810:5815  token */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5817:5819  to */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5821:5827  amount */\n      dup4\n        /* \"contracts/LiquidityController.sol\":5783:5809  TransferHelper.safeApprove */\n      tag_192\n        /* \"contracts/LiquidityController.sol\":5783:5828  TransferHelper.safeApprove(token, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n      tag_366\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_172:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      dup2\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n      swap5\n      dup6\n      swap5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      swap4\n      dup10\n      and\n      swap4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      dup1\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n    tag_368:\n      0x20\n      dup4\n      lt\n      tag_370\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_368)\n    tag_370:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_373\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_372)\n    tag_373:\n      0x60\n      swap2\n      pop\n    tag_372:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_375\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      tag_375\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_376\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_376:\n      pop\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_375:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_377\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x02\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xf2, 0x14d5)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_377:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityController.sol\":2857:3346  function _createDeposit(uint256 tokenId) internal {... */\n    tag_175:\n        /* \"contracts/LiquidityController.sol\":2921:2937  address operator */\n      0x00\n        /* \"contracts/LiquidityController.sol\":2942:2956  address token0 */\n      dup1\n        /* \"contracts/LiquidityController.sol\":2961:2975  address token1 */\n      0x00\n        /* \"contracts/LiquidityController.sol\":2980:2990  uint24 fee */\n      dup1\n        /* \"contracts/LiquidityController.sol\":2995:3010  int24 tickLower */\n      0x00\n        /* \"contracts/LiquidityController.sol\":3015:3030  int24 tickUpper */\n      dup1\n        /* \"contracts/LiquidityController.sol\":3059:3085  nonfungiblePositionManager */\n      immutable(\"0x3ddd8062d7de47998a8389f96b9f0c4a8108649857e6f7c8fae13cec90a10e14\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3059:3095  nonfungiblePositionManager.positions */\n      and\n      0x99fbab88\n        /* \"contracts/LiquidityController.sol\":3096:3103  tokenId */\n      dup9\n        /* \"contracts/LiquidityController.sol\":3059:3104  nonfungiblePositionManager.positions(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_379:\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_380:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"contracts/LiquidityController.sol\":2911:3104  (... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      pop\n        /* \"contracts/LiquidityController.sol\":3136:3140  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3116:3141  operator == address(this) */\n      and\n        /* \"contracts/LiquidityController.sol\":3116:3124  operator */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3116:3141  operator == address(this) */\n      and\n      eq\n        /* \"contracts/LiquidityController.sol\":3108:3155  require(operator == address(this), 'Not Owned') */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_387\n      jump\t// in\n    tag_385:\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LiquidityController.sol\":3200:3206  token0 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":3219:3225  token1 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":3235:3238  fee */\n      dup5\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":3254:3263  tickLower */\n      dup4\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LiquidityController.sol\":3279:3288  tickUpper */\n      dup3\n        /* \"contracts/LiquidityController.sol\":3179:3293  Deposit({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n        /* \"contracts/LiquidityController.sol\":3159:3167  deposits */\n      0x01\n        /* \"contracts/LiquidityController.sol\":3159:3176  deposits[tokenId] */\n      0x00\n        /* \"contracts/LiquidityController.sol\":3168:3175  tokenId */\n      dup10\n        /* \"contracts/LiquidityController.sol\":3159:3176  deposits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityController.sol\":3159:3293  deposits[tokenId] = Deposit({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x17)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x1a)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/LiquidityController.sol\":3302:3342  NewDeposit(tokenId, token0, token1, fee) */\n      0xc98b6cef6bcb7a4f274ab1045ead0065d8a07df11b545d8dc8bd25f58b39d071\n        /* \"contracts/LiquidityController.sol\":3313:3320  tokenId */\n      dup8\n        /* \"contracts/LiquidityController.sol\":3322:3328  token0 */\n      dup7\n        /* \"contracts/LiquidityController.sol\":3330:3336  token1 */\n      dup7\n        /* \"contracts/LiquidityController.sol\":3338:3341  fee */\n      dup7\n        /* \"contracts/LiquidityController.sol\":3302:3342  NewDeposit(tokenId, token0, token1, fee) */\n      mload(0x40)\n      tag_388\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_389\n      jump\t// in\n    tag_388:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityController.sol\":2857:3346  function _createDeposit(uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_192:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      dup2\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n      swap5\n      dup6\n      swap5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      swap4\n      dup10\n      and\n      swap4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      dup1\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n    tag_391:\n      0x20\n      dup4\n      lt\n      tag_393\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_391)\n    tag_393:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_396\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_395)\n    tag_396:\n      0x60\n      swap2\n      pop\n    tag_395:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_398\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      tag_398\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_399\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_399:\n      pop\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_398:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_377\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x02\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xf0, 0x5341)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7104  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      tag_403\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7123:7130  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      tag_405\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      jump\t// in\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7170:7177  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7164:7168  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7289:7295  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      tag_407\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7317:7324  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7289:7316  _roles[role].members.remove */\n      tag_408\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      tag_410\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7373:7383  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      jump\t// in\n    tag_410:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7364:7371  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7358:7362  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7751:7758  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7805:7808  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7817:7822  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7804  _at */\n      tag_413\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7064:7068  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7097:7100  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7117:7140  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7096  _contains */\n      tag_416\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7293:7300  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7327:7330  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7326  _length */\n      tag_419\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      jump\t// in\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_341:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      dup2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      dup2\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n      swap5\n      dup6\n      swap5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      swap4\n      dup11\n      and\n      swap4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      dup1\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n    tag_421:\n      0x20\n      dup4\n      lt\n      tag_423\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_421)\n    tag_423:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_426\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_425)\n    tag_426:\n      0x60\n      swap2\n      pop\n    tag_425:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_428\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      tag_428\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_429\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_429:\n      pop\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_428:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_184\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x03\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xe9, 0x29aa23)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      tag_432\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n      tag_416\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n      tag_433\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n      jump(tag_283)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n    tag_433:\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n      jump(tag_283)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6820:6824  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6851:6854  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6871:6894  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6850  _remove */\n      tag_438\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4564  set._values.length */\n      dup2\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4519:4526  bytes32 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4546:4572  set._values.length > index */\n      dup3\n      lt\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4538:4611  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_440\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_440:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4631  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4639  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4640:4645  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4628:4646  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_441\n      jumpi\n      invalid\n    tag_441:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4621:4646  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4095:4113  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2278:2282  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2427  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2449:2464  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_446\n      jumpi\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2896  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2830:2844  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2900  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2806:2827  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2881  set */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2878:2900  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3160:3182  set._values[lastIndex] */\n      dup2\n      lt\n      tag_447\n      jumpi\n      invalid\n    tag_447:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3140:3182  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3303:3312  lastvalue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3277  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3285  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3286:3299  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3300  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_449\n      jumpi\n      invalid\n    tag_449:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3274:3312  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3420:3421  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3390  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3404:3421  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3421  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3544  set._values.pop() */\n      dup7\n      sload\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3378:3381  set */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3527:3544  set._values.pop() */\n      dup1\n      tag_451\n      jumpi\n      invalid\n    tag_451:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3622  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3631  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3632:3637  value */\n      dup8\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3612:3638  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3660:3664  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3653:3664  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_283)\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_446:\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3702:3707  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/EnumerableSet.sol\":3695:3707  return false */\n      swap2\n      pop\n      pop\n      jump(tag_283)\n        /* \"#utility.yul\":14:156   */\n    tag_455:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n        /* \"#utility.yul\":117:150   */\n      tag_185\n        /* \"#utility.yul\":95:108   */\n      dup2\n        /* \"#utility.yul\":117:150   */\n      tag_458\n      jump\t// in\n        /* \"#utility.yul\":161:299   */\n    tag_459:\n        /* \"#utility.yul\":240:253   */\n      dup1\n      mload\n        /* \"#utility.yul\":262:293   */\n      tag_185\n        /* \"#utility.yul\":240:253   */\n      dup2\n        /* \"#utility.yul\":262:293   */\n      tag_462\n      jump\t// in\n        /* \"#utility.yul\":304:446   */\n    tag_463:\n        /* \"#utility.yul\":385:398   */\n      dup1\n      mload\n        /* \"#utility.yul\":407:440   */\n      tag_185\n        /* \"#utility.yul\":385:398   */\n      dup2\n        /* \"#utility.yul\":407:440   */\n      tag_466\n      jump\t// in\n        /* \"#utility.yul\":451:591   */\n    tag_467:\n        /* \"#utility.yul\":531:544   */\n      dup1\n      mload\n        /* \"#utility.yul\":553:585   */\n      tag_185\n        /* \"#utility.yul\":531:544   */\n      dup2\n        /* \"#utility.yul\":553:585   */\n      tag_470\n      jump\t// in\n        /* \"#utility.yul\":596:998   */\n    tag_55:\n      0x00\n      dup1\n        /* \"#utility.yul\":725:727   */\n      0x40\n        /* \"#utility.yul\":713:722   */\n      dup4\n        /* \"#utility.yul\":704:711   */\n      dup6\n        /* \"#utility.yul\":700:723   */\n      sub\n        /* \"#utility.yul\":696:728   */\n      slt\n        /* \"#utility.yul\":693:695   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":746:752   */\n      dup2\n        /* \"#utility.yul\":738:744   */\n      dup3\n        /* \"#utility.yul\":731:753   */\n      revert\n        /* \"#utility.yul\":693:695   */\n    tag_472:\n        /* \"#utility.yul\":790:799   */\n      dup3\n        /* \"#utility.yul\":777:800   */\n      calldataload\n        /* \"#utility.yul\":809:842   */\n      tag_473\n        /* \"#utility.yul\":836:841   */\n      dup2\n        /* \"#utility.yul\":809:842   */\n      tag_458\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":861:866   */\n      swap2\n      pop\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":903:921   */\n      dup4\n      add\n        /* \"#utility.yul\":890:922   */\n      calldataload\n        /* \"#utility.yul\":931:966   */\n      tag_474\n        /* \"#utility.yul\":890:922   */\n      dup2\n        /* \"#utility.yul\":931:966   */\n      tag_458\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":985:992   */\n      dup1\n        /* \"#utility.yul\":975:992   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":683:998   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:2102   */\n    tag_157:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1246:1249   */\n      0x0120\n        /* \"#utility.yul\":1234:1243   */\n      dup11\n        /* \"#utility.yul\":1225:1232   */\n      dup13\n        /* \"#utility.yul\":1221:1244   */\n      sub\n        /* \"#utility.yul\":1217:1250   */\n      slt\n        /* \"#utility.yul\":1214:1216   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":1268:1274   */\n      dup5\n        /* \"#utility.yul\":1260:1266   */\n      dup6\n        /* \"#utility.yul\":1253:1275   */\n      revert\n        /* \"#utility.yul\":1214:1216   */\n    tag_476:\n        /* \"#utility.yul\":1312:1321   */\n      dup10\n        /* \"#utility.yul\":1299:1322   */\n      calldataload\n        /* \"#utility.yul\":1331:1364   */\n      tag_477\n        /* \"#utility.yul\":1358:1363   */\n      dup2\n        /* \"#utility.yul\":1331:1364   */\n      tag_458\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1383:1388   */\n      swap9\n      pop\n        /* \"#utility.yul\":1440:1442   */\n      0x20\n        /* \"#utility.yul\":1425:1443   */\n      dup11\n      add\n        /* \"#utility.yul\":1412:1444   */\n      calldataload\n        /* \"#utility.yul\":1453:1488   */\n      tag_478\n        /* \"#utility.yul\":1412:1444   */\n      dup2\n        /* \"#utility.yul\":1453:1488   */\n      tag_458\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1507:1514   */\n      swap8\n      pop\n        /* \"#utility.yul\":1566:1568   */\n      0x40\n        /* \"#utility.yul\":1551:1569   */\n      dup11\n      add\n        /* \"#utility.yul\":1538:1570   */\n      calldataload\n        /* \"#utility.yul\":1579:1613   */\n      tag_479\n        /* \"#utility.yul\":1538:1570   */\n      dup2\n        /* \"#utility.yul\":1579:1613   */\n      tag_470\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1632:1639   */\n      swap7\n      pop\n        /* \"#utility.yul\":1691:1693   */\n      0x60\n        /* \"#utility.yul\":1676:1694   */\n      dup11\n      add\n        /* \"#utility.yul\":1663:1695   */\n      calldataload\n        /* \"#utility.yul\":1704:1737   */\n      tag_480\n        /* \"#utility.yul\":1663:1695   */\n      dup2\n        /* \"#utility.yul\":1704:1737   */\n      tag_462\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1756:1763   */\n      swap6\n      pop\n        /* \"#utility.yul\":1815:1818   */\n      0x80\n        /* \"#utility.yul\":1800:1819   */\n      dup11\n      add\n        /* \"#utility.yul\":1787:1820   */\n      calldataload\n        /* \"#utility.yul\":1829:1862   */\n      tag_481\n        /* \"#utility.yul\":1787:1820   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_462\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":1204:2102   */\n      swap9\n      swap12\n      swap8\n      swap11\n      pop\n      swap6\n      swap9\n      swap5\n      swap8\n        /* \"#utility.yul\":1881:1888   */\n      swap7\n        /* \"#utility.yul\":1935:1938   */\n      0xa0\n        /* \"#utility.yul\":1920:1939   */\n      dup7\n      add\n        /* \"#utility.yul\":1907:1940   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":1987:1990   */\n      0xc0\n        /* \"#utility.yul\":1972:1991   */\n      dup7\n      add\n        /* \"#utility.yul\":1959:1992   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":2039:2042   */\n      0xe0\n        /* \"#utility.yul\":2024:2043   */\n      dup2\n      add\n        /* \"#utility.yul\":2011:2044   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2091:2094   */\n      0x0100\n        /* \"#utility.yul\":2076:2095   */\n      add\n        /* \"#utility.yul\":2063:2096   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1204:2102   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2107:2932   */\n    tag_85:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":2303:2306   */\n      0xc0\n        /* \"#utility.yul\":2291:2300   */\n      dup8\n        /* \"#utility.yul\":2282:2289   */\n      dup10\n        /* \"#utility.yul\":2278:2301   */\n      sub\n        /* \"#utility.yul\":2274:2307   */\n      slt\n        /* \"#utility.yul\":2271:2273   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2325:2331   */\n      dup2\n        /* \"#utility.yul\":2317:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2332   */\n      revert\n        /* \"#utility.yul\":2271:2273   */\n    tag_483:\n        /* \"#utility.yul\":2369:2378   */\n      dup7\n        /* \"#utility.yul\":2356:2379   */\n      calldataload\n        /* \"#utility.yul\":2388:2421   */\n      tag_484\n        /* \"#utility.yul\":2415:2420   */\n      dup2\n        /* \"#utility.yul\":2388:2421   */\n      tag_458\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":2440:2445   */\n      swap6\n      pop\n        /* \"#utility.yul\":2497:2499   */\n      0x20\n        /* \"#utility.yul\":2482:2500   */\n      dup8\n      add\n        /* \"#utility.yul\":2469:2501   */\n      calldataload\n        /* \"#utility.yul\":2510:2545   */\n      tag_485\n        /* \"#utility.yul\":2469:2501   */\n      dup2\n        /* \"#utility.yul\":2510:2545   */\n      tag_458\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2564:2571   */\n      swap5\n      pop\n        /* \"#utility.yul\":2623:2625   */\n      0x40\n        /* \"#utility.yul\":2608:2626   */\n      dup8\n      add\n        /* \"#utility.yul\":2595:2627   */\n      calldataload\n        /* \"#utility.yul\":2636:2670   */\n      tag_486\n        /* \"#utility.yul\":2595:2627   */\n      dup2\n        /* \"#utility.yul\":2636:2670   */\n      tag_470\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2689:2696   */\n      swap4\n      pop\n        /* \"#utility.yul\":2743:2745   */\n      0x60\n        /* \"#utility.yul\":2728:2746   */\n      dup8\n      add\n        /* \"#utility.yul\":2715:2747   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2794:2797   */\n      0x80\n        /* \"#utility.yul\":2779:2798   */\n      dup8\n      add\n        /* \"#utility.yul\":2766:2799   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2851:2854   */\n      0xa0\n        /* \"#utility.yul\":2836:2855   */\n      dup8\n      add\n        /* \"#utility.yul\":2823:2856   */\n      calldataload\n        /* \"#utility.yul\":2865:2900   */\n      tag_487\n        /* \"#utility.yul\":2823:2856   */\n      dup2\n        /* \"#utility.yul\":2865:2900   */\n      tag_458\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2919:2926   */\n      dup1\n        /* \"#utility.yul\":2909:2926   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2261:2932   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2937:3407   */\n    tag_45:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3083:3085   */\n      0x60\n        /* \"#utility.yul\":3071:3080   */\n      dup5\n        /* \"#utility.yul\":3062:3069   */\n      dup7\n        /* \"#utility.yul\":3058:3081   */\n      sub\n        /* \"#utility.yul\":3054:3086   */\n      slt\n        /* \"#utility.yul\":3051:3053   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3104:3110   */\n      dup3\n        /* \"#utility.yul\":3096:3102   */\n      dup4\n        /* \"#utility.yul\":3089:3111   */\n      revert\n        /* \"#utility.yul\":3051:3053   */\n    tag_489:\n        /* \"#utility.yul\":3148:3157   */\n      dup4\n        /* \"#utility.yul\":3135:3158   */\n      calldataload\n        /* \"#utility.yul\":3167:3200   */\n      tag_490\n        /* \"#utility.yul\":3194:3199   */\n      dup2\n        /* \"#utility.yul\":3167:3200   */\n      tag_458\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3219:3224   */\n      swap3\n      pop\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"#utility.yul\":3261:3279   */\n      dup5\n      add\n        /* \"#utility.yul\":3248:3280   */\n      calldataload\n        /* \"#utility.yul\":3289:3324   */\n      tag_491\n        /* \"#utility.yul\":3248:3280   */\n      dup2\n        /* \"#utility.yul\":3289:3324   */\n      tag_458\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3041:3407   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3343:3350   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3397:3399   */\n      0x40\n        /* \"#utility.yul\":3382:3400   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3369:3401   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3041:3407   */\n      jump\t// out\n        /* \"#utility.yul\":3412:4402   */\n    tag_49:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3594:3597   */\n      0x80\n        /* \"#utility.yul\":3582:3591   */\n      dup7\n        /* \"#utility.yul\":3573:3580   */\n      dup9\n        /* \"#utility.yul\":3569:3592   */\n      sub\n        /* \"#utility.yul\":3565:3598   */\n      slt\n        /* \"#utility.yul\":3562:3564   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":3616:3622   */\n      dup1\n        /* \"#utility.yul\":3608:3614   */\n      dup2\n        /* \"#utility.yul\":3601:3623   */\n      revert\n        /* \"#utility.yul\":3562:3564   */\n    tag_493:\n        /* \"#utility.yul\":3660:3669   */\n      dup6\n        /* \"#utility.yul\":3647:3670   */\n      calldataload\n        /* \"#utility.yul\":3679:3712   */\n      tag_494\n        /* \"#utility.yul\":3706:3711   */\n      dup2\n        /* \"#utility.yul\":3679:3712   */\n      tag_458\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3731:3736   */\n      swap5\n      pop\n        /* \"#utility.yul\":3788:3790   */\n      0x20\n        /* \"#utility.yul\":3773:3791   */\n      dup7\n      add\n        /* \"#utility.yul\":3760:3792   */\n      calldataload\n        /* \"#utility.yul\":3801:3836   */\n      tag_495\n        /* \"#utility.yul\":3760:3792   */\n      dup2\n        /* \"#utility.yul\":3801:3836   */\n      tag_458\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3855:3862   */\n      swap4\n      pop\n        /* \"#utility.yul\":3909:3911   */\n      0x40\n        /* \"#utility.yul\":3894:3912   */\n      dup7\n      add\n        /* \"#utility.yul\":3881:3913   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3964:3966   */\n      0x60\n        /* \"#utility.yul\":3949:3967   */\n      dup7\n      add\n        /* \"#utility.yul\":3936:3968   */\n      calldataload\n        /* \"#utility.yul\":3987:4005   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4017:4031   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4014:4016   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":4049:4055   */\n      dup3\n        /* \"#utility.yul\":4041:4047   */\n      dup4\n        /* \"#utility.yul\":4034:4056   */\n      revert\n        /* \"#utility.yul\":4014:4016   */\n    tag_496:\n        /* \"#utility.yul\":4092:4098   */\n      dup2\n        /* \"#utility.yul\":4081:4090   */\n      dup9\n        /* \"#utility.yul\":4077:4099   */\n      add\n        /* \"#utility.yul\":4067:4099   */\n      swap2\n      pop\n        /* \"#utility.yul\":4137:4144   */\n      dup9\n        /* \"#utility.yul\":4130:4134   */\n      0x1f\n        /* \"#utility.yul\":4126:4128   */\n      dup4\n        /* \"#utility.yul\":4122:4135   */\n      add\n        /* \"#utility.yul\":4118:4145   */\n      slt\n        /* \"#utility.yul\":4108:4110   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":4164:4170   */\n      dup3\n        /* \"#utility.yul\":4156:4162   */\n      dup4\n        /* \"#utility.yul\":4149:4171   */\n      revert\n        /* \"#utility.yul\":4108:4110   */\n    tag_497:\n        /* \"#utility.yul\":4209:4211   */\n      dup2\n        /* \"#utility.yul\":4196:4212   */\n      calldataload\n        /* \"#utility.yul\":4235:4237   */\n      dup2\n        /* \"#utility.yul\":4227:4233   */\n      dup2\n        /* \"#utility.yul\":4224:4238   */\n      gt\n        /* \"#utility.yul\":4221:4223   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4256:4262   */\n      dup4\n        /* \"#utility.yul\":4248:4254   */\n      dup5\n        /* \"#utility.yul\":4241:4263   */\n      revert\n        /* \"#utility.yul\":4221:4223   */\n    tag_498:\n        /* \"#utility.yul\":4306:4313   */\n      dup10\n        /* \"#utility.yul\":4301:4303   */\n      0x20\n        /* \"#utility.yul\":4292:4298   */\n      dup3\n        /* \"#utility.yul\":4288:4290   */\n      dup6\n        /* \"#utility.yul\":4284:4299   */\n      add\n        /* \"#utility.yul\":4280:4304   */\n      add\n        /* \"#utility.yul\":4277:4314   */\n      gt\n        /* \"#utility.yul\":4274:4276   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":4332:4338   */\n      dup4\n        /* \"#utility.yul\":4324:4330   */\n      dup5\n        /* \"#utility.yul\":4317:4339   */\n      revert\n        /* \"#utility.yul\":4274:4276   */\n    tag_499:\n        /* \"#utility.yul\":3552:4402   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":4368:4370   */\n      0x20\n        /* \"#utility.yul\":4360:4371   */\n      add\n      swap5\n        /* \"#utility.yul\":4390:4396   */\n      swap4\n        /* \"#utility.yul\":3552:4402   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:4946   */\n    tag_64:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":4570:4573   */\n      0x80\n        /* \"#utility.yul\":4558:4567   */\n      dup6\n        /* \"#utility.yul\":4549:4556   */\n      dup8\n        /* \"#utility.yul\":4545:4568   */\n      sub\n        /* \"#utility.yul\":4541:4574   */\n      slt\n        /* \"#utility.yul\":4538:4540   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4592:4598   */\n      dup4\n        /* \"#utility.yul\":4584:4590   */\n      dup5\n        /* \"#utility.yul\":4577:4599   */\n      revert\n        /* \"#utility.yul\":4538:4540   */\n    tag_501:\n        /* \"#utility.yul\":4636:4645   */\n      dup5\n        /* \"#utility.yul\":4623:4646   */\n      calldataload\n        /* \"#utility.yul\":4655:4688   */\n      tag_502\n        /* \"#utility.yul\":4682:4687   */\n      dup2\n        /* \"#utility.yul\":4655:4688   */\n      tag_458\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4707:4712   */\n      swap4\n      pop\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4749:4767   */\n      dup6\n      add\n        /* \"#utility.yul\":4736:4768   */\n      calldataload\n        /* \"#utility.yul\":4777:4812   */\n      tag_503\n        /* \"#utility.yul\":4736:4768   */\n      dup2\n        /* \"#utility.yul\":4777:4812   */\n      tag_458\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4528:4946   */\n      swap4\n      swap7\n        /* \"#utility.yul\":4831:4838   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4885:4887   */\n      0x40\n        /* \"#utility.yul\":4870:4888   */\n      dup3\n      add\n        /* \"#utility.yul\":4857:4889   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4936:4938   */\n      0x60\n        /* \"#utility.yul\":4921:4939   */\n      add\n        /* \"#utility.yul\":4908:4940   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":4528:4946   */\n      jump\t// out\n        /* \"#utility.yul\":4951:5141   */\n    tag_59:\n      0x00\n        /* \"#utility.yul\":5063:5065   */\n      0x20\n        /* \"#utility.yul\":5051:5060   */\n      dup3\n        /* \"#utility.yul\":5042:5049   */\n      dup5\n        /* \"#utility.yul\":5038:5061   */\n      sub\n        /* \"#utility.yul\":5034:5066   */\n      slt\n        /* \"#utility.yul\":5031:5033   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":5084:5090   */\n      dup1\n        /* \"#utility.yul\":5076:5082   */\n      dup2\n        /* \"#utility.yul\":5069:5091   */\n      revert\n        /* \"#utility.yul\":5031:5033   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":5112:5135   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5021:5141   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5473   */\n    tag_68:\n      0x00\n      dup1\n        /* \"#utility.yul\":5275:5277   */\n      0x40\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5254:5261   */\n      dup6\n        /* \"#utility.yul\":5250:5273   */\n      sub\n        /* \"#utility.yul\":5246:5278   */\n      slt\n        /* \"#utility.yul\":5243:5245   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":5296:5302   */\n      dup2\n        /* \"#utility.yul\":5288:5294   */\n      dup3\n        /* \"#utility.yul\":5281:5303   */\n      revert\n        /* \"#utility.yul\":5243:5245   */\n    tag_507:\n        /* \"#utility.yul\":5337:5346   */\n      dup3\n        /* \"#utility.yul\":5324:5347   */\n      calldataload\n        /* \"#utility.yul\":5314:5347   */\n      swap2\n      pop\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"#utility.yul\":5386:5395   */\n      dup4\n        /* \"#utility.yul\":5382:5400   */\n      add\n        /* \"#utility.yul\":5369:5401   */\n      calldataload\n        /* \"#utility.yul\":5410:5443   */\n      tag_474\n        /* \"#utility.yul\":5437:5442   */\n      dup2\n        /* \"#utility.yul\":5410:5443   */\n      tag_458\n      jump\t// in\n        /* \"#utility.yul\":5478:5736   */\n    tag_106:\n      0x00\n      dup1\n        /* \"#utility.yul\":5607:5609   */\n      0x40\n        /* \"#utility.yul\":5595:5604   */\n      dup4\n        /* \"#utility.yul\":5586:5593   */\n      dup6\n        /* \"#utility.yul\":5582:5605   */\n      sub\n        /* \"#utility.yul\":5578:5610   */\n      slt\n        /* \"#utility.yul\":5575:5577   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":5628:5634   */\n      dup2\n        /* \"#utility.yul\":5620:5626   */\n      dup3\n        /* \"#utility.yul\":5613:5635   */\n      revert\n        /* \"#utility.yul\":5575:5577   */\n    tag_510:\n      pop\n      pop\n        /* \"#utility.yul\":5656:5679   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5711:5729   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5698:5730   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5565:5736   */\n      jump\t// out\n        /* \"#utility.yul\":5741:6126   */\n    tag_325:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5898:5900   */\n      0x60\n        /* \"#utility.yul\":5886:5895   */\n      dup5\n        /* \"#utility.yul\":5877:5884   */\n      dup7\n        /* \"#utility.yul\":5873:5896   */\n      sub\n        /* \"#utility.yul\":5869:5901   */\n      slt\n        /* \"#utility.yul\":5866:5868   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":5919:5925   */\n      dup1\n        /* \"#utility.yul\":5911:5917   */\n      dup2\n        /* \"#utility.yul\":5904:5926   */\n      revert\n        /* \"#utility.yul\":5866:5868   */\n    tag_512:\n        /* \"#utility.yul\":5956:5965   */\n      dup4\n        /* \"#utility.yul\":5950:5966   */\n      mload\n        /* \"#utility.yul\":5975:6008   */\n      tag_513\n        /* \"#utility.yul\":6002:6007   */\n      dup2\n        /* \"#utility.yul\":5975:6008   */\n      tag_466\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6072:6074   */\n      0x20\n        /* \"#utility.yul\":6057:6075   */\n      dup6\n      add\n        /* \"#utility.yul\":6051:6076   */\n      mload\n        /* \"#utility.yul\":6116:6118   */\n      0x40\n        /* \"#utility.yul\":6101:6119   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":6095:6120   */\n      mload\n        /* \"#utility.yul\":6027:6032   */\n      swap1\n      swap7\n        /* \"#utility.yul\":6051:6076   */\n      swap5\n      swap6\n      pop\n        /* \"#utility.yul\":6095:6120   */\n      swap4\n        /* \"#utility.yul\":5856:6126   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6520   */\n    tag_252:\n      0x00\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"#utility.yul\":6437:6446   */\n      dup3\n        /* \"#utility.yul\":6428:6435   */\n      dup5\n        /* \"#utility.yul\":6424:6447   */\n      sub\n        /* \"#utility.yul\":6420:6452   */\n      slt\n        /* \"#utility.yul\":6417:6419   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":6470:6476   */\n      dup1\n        /* \"#utility.yul\":6462:6468   */\n      dup2\n        /* \"#utility.yul\":6455:6477   */\n      revert\n        /* \"#utility.yul\":6417:6419   */\n    tag_517:\n      pop\n        /* \"#utility.yul\":6498:6514   */\n      mload\n      swap2\n        /* \"#utility.yul\":6407:6520   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:7218   */\n    tag_75:\n      0x00\n      dup1\n        /* \"#utility.yul\":6983:6985   */\n      0x40\n        /* \"#utility.yul\":6971:6980   */\n      dup4\n        /* \"#utility.yul\":6962:6969   */\n      dup6\n        /* \"#utility.yul\":6958:6981   */\n      sub\n        /* \"#utility.yul\":6954:6986   */\n      slt\n        /* \"#utility.yul\":6951:6953   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7004:7010   */\n      dup2\n        /* \"#utility.yul\":6996:7002   */\n      dup3\n        /* \"#utility.yul\":6989:7011   */\n      revert\n        /* \"#utility.yul\":6951:6953   */\n    tag_522:\n        /* \"#utility.yul\":7045:7054   */\n      dup3\n        /* \"#utility.yul\":7032:7055   */\n      calldataload\n        /* \"#utility.yul\":7022:7055   */\n      swap2\n      pop\n        /* \"#utility.yul\":7105:7107   */\n      0x20\n        /* \"#utility.yul\":7094:7103   */\n      dup4\n        /* \"#utility.yul\":7090:7108   */\n      add\n        /* \"#utility.yul\":7077:7109   */\n      calldataload\n        /* \"#utility.yul\":7152:7157   */\n      dup1\n        /* \"#utility.yul\":7145:7158   */\n      iszero\n        /* \"#utility.yul\":7138:7159   */\n      iszero\n        /* \"#utility.yul\":7131:7136   */\n      dup2\n        /* \"#utility.yul\":7128:7160   */\n      eq\n        /* \"#utility.yul\":7118:7120   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7179:7185   */\n      dup2\n        /* \"#utility.yul\":7171:7177   */\n      dup3\n        /* \"#utility.yul\":7164:7186   */\n      revert\n        /* \"#utility.yul\":7223:7687   */\n    tag_101:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":7386:7389   */\n      0x80\n        /* \"#utility.yul\":7374:7383   */\n      dup6\n        /* \"#utility.yul\":7365:7372   */\n      dup8\n        /* \"#utility.yul\":7361:7384   */\n      sub\n        /* \"#utility.yul\":7357:7390   */\n      slt\n        /* \"#utility.yul\":7354:7356   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":7408:7414   */\n      dup2\n        /* \"#utility.yul\":7400:7406   */\n      dup3\n        /* \"#utility.yul\":7393:7415   */\n      revert\n        /* \"#utility.yul\":7354:7356   */\n    tag_525:\n        /* \"#utility.yul\":7449:7458   */\n      dup5\n        /* \"#utility.yul\":7436:7459   */\n      calldataload\n        /* \"#utility.yul\":7426:7459   */\n      swap4\n      pop\n        /* \"#utility.yul\":7509:7511   */\n      0x20\n        /* \"#utility.yul\":7498:7507   */\n      dup6\n        /* \"#utility.yul\":7494:7512   */\n      add\n        /* \"#utility.yul\":7481:7513   */\n      calldataload\n        /* \"#utility.yul\":7522:7555   */\n      tag_503\n        /* \"#utility.yul\":7549:7554   */\n      dup2\n        /* \"#utility.yul\":7522:7555   */\n      tag_466\n      jump\t// in\n        /* \"#utility.yul\":7692:8139   */\n    tag_356:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":7866:7869   */\n      0x80\n        /* \"#utility.yul\":7854:7863   */\n      dup6\n        /* \"#utility.yul\":7845:7852   */\n      dup8\n        /* \"#utility.yul\":7841:7864   */\n      sub\n        /* \"#utility.yul\":7837:7870   */\n      slt\n        /* \"#utility.yul\":7834:7836   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7888:7894   */\n      dup2\n        /* \"#utility.yul\":7880:7886   */\n      dup3\n        /* \"#utility.yul\":7873:7895   */\n      revert\n        /* \"#utility.yul\":7834:7836   */\n    tag_528:\n        /* \"#utility.yul\":7922:7931   */\n      dup5\n        /* \"#utility.yul\":7916:7932   */\n      mload\n        /* \"#utility.yul\":7906:7932   */\n      swap4\n      pop\n        /* \"#utility.yul\":7975:7977   */\n      0x20\n        /* \"#utility.yul\":7964:7973   */\n      dup6\n        /* \"#utility.yul\":7960:7978   */\n      add\n        /* \"#utility.yul\":7954:7979   */\n      mload\n        /* \"#utility.yul\":7988:8021   */\n      tag_529\n        /* \"#utility.yul\":8015:8020   */\n      dup2\n        /* \"#utility.yul\":7988:8021   */\n      tag_466\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8085:8087   */\n      0x40\n        /* \"#utility.yul\":8070:8088   */\n      dup7\n      add\n        /* \"#utility.yul\":8064:8089   */\n      mload\n        /* \"#utility.yul\":8129:8131   */\n      0x60\n        /* \"#utility.yul\":8114:8132   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":8108:8133   */\n      mload\n        /* \"#utility.yul\":7824:8139   */\n      swap5\n      swap8\n        /* \"#utility.yul\":8040:8045   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":7824:8139   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8144:8399   */\n    tag_226:\n      0x00\n      dup1\n        /* \"#utility.yul\":8284:8286   */\n      0x40\n        /* \"#utility.yul\":8272:8281   */\n      dup4\n        /* \"#utility.yul\":8263:8270   */\n      dup6\n        /* \"#utility.yul\":8259:8282   */\n      sub\n        /* \"#utility.yul\":8255:8287   */\n      slt\n        /* \"#utility.yul\":8252:8254   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":8305:8311   */\n      dup2\n        /* \"#utility.yul\":8297:8303   */\n      dup3\n        /* \"#utility.yul\":8290:8312   */\n      revert\n        /* \"#utility.yul\":8252:8254   */\n    tag_531:\n      pop\n      pop\n        /* \"#utility.yul\":8333:8349   */\n      dup1\n      mload\n        /* \"#utility.yul\":8389:8391   */\n      0x20\n        /* \"#utility.yul\":8374:8392   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8368:8393   */\n      mload\n        /* \"#utility.yul\":8333:8349   */\n      swap1\n      swap3\n        /* \"#utility.yul\":8368:8393   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":8242:8399   */\n      jump\t// out\n        /* \"#utility.yul\":8404:8730   */\n    tag_97:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":8550:8552   */\n      0x60\n        /* \"#utility.yul\":8538:8547   */\n      dup5\n        /* \"#utility.yul\":8529:8536   */\n      dup7\n        /* \"#utility.yul\":8525:8548   */\n      sub\n        /* \"#utility.yul\":8521:8553   */\n      slt\n        /* \"#utility.yul\":8518:8520   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":8571:8577   */\n      dup1\n        /* \"#utility.yul\":8563:8569   */\n      dup2\n        /* \"#utility.yul\":8556:8578   */\n      revert\n        /* \"#utility.yul\":8518:8520   */\n    tag_533:\n      pop\n      pop\n        /* \"#utility.yul\":8599:8622   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":8669:8671   */\n      0x20\n        /* \"#utility.yul\":8654:8672   */\n      dup4\n      add\n        /* \"#utility.yul\":8641:8673   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":8720:8722   */\n      0x40\n        /* \"#utility.yul\":8705:8723   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":8692:8724   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":8508:8730   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8735:9199   */\n    tag_141:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":8915:8918   */\n      0xa0\n        /* \"#utility.yul\":8903:8912   */\n      dup7\n        /* \"#utility.yul\":8894:8901   */\n      dup9\n        /* \"#utility.yul\":8890:8913   */\n      sub\n        /* \"#utility.yul\":8886:8919   */\n      slt\n        /* \"#utility.yul\":8883:8885   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":8937:8943   */\n      dup3\n        /* \"#utility.yul\":8929:8935   */\n      dup4\n        /* \"#utility.yul\":8922:8944   */\n      revert\n        /* \"#utility.yul\":8883:8885   */\n    tag_535:\n      pop\n      pop\n        /* \"#utility.yul\":8965:8988   */\n      dup4\n      calldataload\n      swap6\n        /* \"#utility.yul\":9035:9037   */\n      0x20\n        /* \"#utility.yul\":9020:9038   */\n      dup6\n      add\n        /* \"#utility.yul\":9007:9039   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":9086:9088   */\n      0x40\n        /* \"#utility.yul\":9071:9089   */\n      dup6\n      add\n        /* \"#utility.yul\":9058:9090   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":9137:9139   */\n      0x60\n        /* \"#utility.yul\":9122:9140   */\n      dup2\n      add\n        /* \"#utility.yul\":9109:9141   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":9188:9191   */\n      0x80\n        /* \"#utility.yul\":9173:9192   */\n      add\n        /* \"#utility.yul\":9160:9193   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":8873:9199   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:10428   */\n    tag_384:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":9510:9513   */\n      0x0180\n        /* \"#utility.yul\":9498:9507   */\n      dup14\n        /* \"#utility.yul\":9489:9496   */\n      dup16\n        /* \"#utility.yul\":9485:9508   */\n      sub\n        /* \"#utility.yul\":9481:9514   */\n      slt\n        /* \"#utility.yul\":9478:9480   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":9532:9538   */\n      dup6\n        /* \"#utility.yul\":9524:9530   */\n      dup7\n        /* \"#utility.yul\":9517:9539   */\n      revert\n        /* \"#utility.yul\":9478:9480   */\n    tag_537:\n        /* \"#utility.yul\":9569:9578   */\n      dup13\n        /* \"#utility.yul\":9563:9579   */\n      mload\n        /* \"#utility.yul\":9619:9645   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":9612:9617   */\n      dup2\n        /* \"#utility.yul\":9608:9646   */\n      and\n        /* \"#utility.yul\":9601:9606   */\n      dup2\n        /* \"#utility.yul\":9598:9647   */\n      eq\n        /* \"#utility.yul\":9588:9590   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":9666:9672   */\n      dup7\n        /* \"#utility.yul\":9658:9664   */\n      dup8\n        /* \"#utility.yul\":9651:9673   */\n      revert\n        /* \"#utility.yul\":9588:9590   */\n    tag_538:\n        /* \"#utility.yul\":9694:9699   */\n      swap12\n      pop\n        /* \"#utility.yul\":9718:9769   */\n      tag_539\n        /* \"#utility.yul\":9765:9767   */\n      0x20\n        /* \"#utility.yul\":9750:9768   */\n      dup15\n      add\n        /* \"#utility.yul\":9718:9769   */\n      tag_455\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9708:9769   */\n      swap11\n      pop\n        /* \"#utility.yul\":9788:9839   */\n      tag_540\n        /* \"#utility.yul\":9835:9837   */\n      0x40\n        /* \"#utility.yul\":9824:9833   */\n      dup15\n        /* \"#utility.yul\":9820:9838   */\n      add\n        /* \"#utility.yul\":9788:9839   */\n      tag_455\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9778:9839   */\n      swap10\n      pop\n        /* \"#utility.yul\":9858:9909   */\n      tag_541\n        /* \"#utility.yul\":9905:9907   */\n      0x60\n        /* \"#utility.yul\":9894:9903   */\n      dup15\n        /* \"#utility.yul\":9890:9908   */\n      add\n        /* \"#utility.yul\":9858:9909   */\n      tag_455\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9848:9909   */\n      swap9\n      pop\n        /* \"#utility.yul\":9928:9979   */\n      tag_542\n        /* \"#utility.yul\":9974:9977   */\n      0x80\n        /* \"#utility.yul\":9963:9972   */\n      dup15\n        /* \"#utility.yul\":9959:9978   */\n      add\n        /* \"#utility.yul\":9928:9979   */\n      tag_467\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9918:9979   */\n      swap8\n      pop\n        /* \"#utility.yul\":9998:10048   */\n      tag_543\n        /* \"#utility.yul\":10043:10046   */\n      0xa0\n        /* \"#utility.yul\":10032:10041   */\n      dup15\n        /* \"#utility.yul\":10028:10047   */\n      add\n        /* \"#utility.yul\":9998:10048   */\n      tag_459\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9988:10048   */\n      swap7\n      pop\n        /* \"#utility.yul\":10067:10117   */\n      tag_544\n        /* \"#utility.yul\":10112:10115   */\n      0xc0\n        /* \"#utility.yul\":10101:10110   */\n      dup15\n        /* \"#utility.yul\":10097:10116   */\n      add\n        /* \"#utility.yul\":10067:10117   */\n      tag_459\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10057:10117   */\n      swap6\n      pop\n        /* \"#utility.yul\":10136:10188   */\n      tag_545\n        /* \"#utility.yul\":10183:10186   */\n      0xe0\n        /* \"#utility.yul\":10172:10181   */\n      dup15\n        /* \"#utility.yul\":10168:10187   */\n      add\n        /* \"#utility.yul\":10136:10188   */\n      tag_463\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10126:10188   */\n      swap5\n      pop\n        /* \"#utility.yul\":10228:10231   */\n      0x0100\n        /* \"#utility.yul\":10217:10226   */\n      dup14\n        /* \"#utility.yul\":10213:10232   */\n      add\n        /* \"#utility.yul\":10207:10233   */\n      mload\n        /* \"#utility.yul\":10197:10233   */\n      swap4\n      pop\n        /* \"#utility.yul\":10273:10276   */\n      0x0120\n        /* \"#utility.yul\":10262:10271   */\n      dup14\n        /* \"#utility.yul\":10258:10277   */\n      add\n        /* \"#utility.yul\":10252:10278   */\n      mload\n        /* \"#utility.yul\":10242:10278   */\n      swap3\n      pop\n        /* \"#utility.yul\":10298:10350   */\n      tag_546\n        /* \"#utility.yul\":10345:10348   */\n      0x0140\n        /* \"#utility.yul\":10334:10343   */\n      dup15\n        /* \"#utility.yul\":10330:10349   */\n      add\n        /* \"#utility.yul\":10298:10350   */\n      tag_463\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10287:10350   */\n      swap2\n      pop\n        /* \"#utility.yul\":10370:10422   */\n      tag_547\n        /* \"#utility.yul\":10417:10420   */\n      0x0160\n        /* \"#utility.yul\":10406:10415   */\n      dup15\n        /* \"#utility.yul\":10402:10421   */\n      add\n        /* \"#utility.yul\":10370:10422   */\n      tag_463\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":10359:10422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:10428   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":10433:10539   */\n    tag_548:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10501:10532   */\n      and\n        /* \"#utility.yul\":10489:10533   */\n      swap1\n      mstore\n        /* \"#utility.yul\":10479:10539   */\n      jump\t// out\n        /* \"#utility.yul\":10544:10637   */\n    tag_550:\n        /* \"#utility.yul\":10621:10622   */\n      0x02\n        /* \"#utility.yul\":10610:10630   */\n      signextend\n        /* \"#utility.yul\":10598:10631   */\n      swap1\n      mstore\n        /* \"#utility.yul\":10588:10637   */\n      jump\t// out\n        /* \"#utility.yul\":10642:11233   */\n    tag_552:\n        /* \"#utility.yul\":10775:10787   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10771:10792   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":10759:10793   */\n      dup4\n      mstore\n        /* \"#utility.yul\":10846:10850   */\n      0x20\n        /* \"#utility.yul\":10835:10851   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10829:10852   */\n      mload\n        /* \"#utility.yul\":10825:10857   */\n      dup3\n      and\n        /* \"#utility.yul\":10809:10823   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":10802:10858   */\n      mstore\n        /* \"#utility.yul\":10911:10915   */\n      0x40\n        /* \"#utility.yul\":10900:10916   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10894:10917   */\n      mload\n        /* \"#utility.yul\":10919:10927   */\n      0xffffff\n        /* \"#utility.yul\":10890:10928   */\n      and\n        /* \"#utility.yul\":10874:10888   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":10867:10929   */\n      mstore\n        /* \"#utility.yul\":10982:10986   */\n      0x60\n        /* \"#utility.yul\":10971:10987   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10965:10988   */\n      mload\n        /* \"#utility.yul\":10961:10993   */\n      dup3\n      and\n        /* \"#utility.yul\":10945:10959   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":10938:10994   */\n      mstore\n        /* \"#utility.yul\":11043:11047   */\n      0x80\n        /* \"#utility.yul\":11032:11048   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":11026:11049   */\n      mload\n        /* \"#utility.yul\":11010:11024   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":11003:11050   */\n      mstore\n        /* \"#utility.yul\":10739:10742   */\n      0xa0\n        /* \"#utility.yul\":11088:11104   */\n      dup3\n      dup2\n      add\n        /* \"#utility.yul\":11082:11105   */\n      mload\n        /* \"#utility.yul\":11066:11080   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":11059:11106   */\n      mstore\n        /* \"#utility.yul\":11155:11159   */\n      0xc0\n        /* \"#utility.yul\":11144:11160   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":11138:11161   */\n      mload\n        /* \"#utility.yul\":11122:11136   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":11115:11162   */\n      mstore\n        /* \"#utility.yul\":11215:11219   */\n      0xe0\n        /* \"#utility.yul\":11204:11220   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":11198:11221   */\n      mload\n        /* \"#utility.yul\":11194:11226   */\n      and\n        /* \"#utility.yul\":11178:11192   */\n      swap2\n      add\n        /* \"#utility.yul\":11171:11227   */\n      mstore\n        /* \"#utility.yul\":10711:11233   */\n      jump\t// out\n        /* \"#utility.yul\":11238:11332   */\n    tag_554:\n        /* \"#utility.yul\":11316:11324   */\n      0xffffff\n        /* \"#utility.yul\":11305:11325   */\n      and\n        /* \"#utility.yul\":11293:11326   */\n      swap1\n      mstore\n        /* \"#utility.yul\":11283:11332   */\n      jump\t// out\n        /* \"#utility.yul\":11337:11540   */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11501:11533   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11483:11534   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11471:11473   */\n      0x20\n        /* \"#utility.yul\":11456:11474   */\n      add\n      swap1\n        /* \"#utility.yul\":11438:11540   */\n      jump\t// out\n        /* \"#utility.yul\":11545:12099   */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11850:11865   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":11832:11866   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11902:11917   */\n      swap4\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":11897:11899   */\n      0x20\n        /* \"#utility.yul\":11882:11900   */\n      dup5\n      add\n        /* \"#utility.yul\":11875:11918   */\n      mstore\n        /* \"#utility.yul\":11966:11974   */\n      0xffffff\n        /* \"#utility.yul\":11954:11975   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11949:11951   */\n      0x40\n        /* \"#utility.yul\":11934:11952   */\n      dup4\n      add\n        /* \"#utility.yul\":11927:11976   */\n      mstore\n        /* \"#utility.yul\":12023:12024   */\n      0x02\n        /* \"#utility.yul\":12012:12033   */\n      swap1\n      dup2\n      signextend\n        /* \"#utility.yul\":12007:12009   */\n      0x60\n        /* \"#utility.yul\":11992:12010   */\n      dup4\n      add\n        /* \"#utility.yul\":11985:12034   */\n      mstore\n        /* \"#utility.yul\":12071:12092   */\n      swap2\n      swap1\n      swap2\n      signextend\n        /* \"#utility.yul\":12065:12068   */\n      0x80\n        /* \"#utility.yul\":12050:12069   */\n      dup3\n      add\n        /* \"#utility.yul\":12043:12093   */\n      mstore\n        /* \"#utility.yul\":11781:11784   */\n      0xa0\n        /* \"#utility.yul\":11766:11785   */\n      add\n      swap1\n        /* \"#utility.yul\":11748:12099   */\n      jump\t// out\n        /* \"#utility.yul\":12104:12479   */\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12362:12377   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":12344:12378   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12414:12429   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12409:12411   */\n      0x20\n        /* \"#utility.yul\":12394:12412   */\n      dup3\n      add\n        /* \"#utility.yul\":12387:12430   */\n      mstore\n        /* \"#utility.yul\":12461:12463   */\n      0x40\n        /* \"#utility.yul\":12446:12464   */\n      dup2\n      add\n        /* \"#utility.yul\":12439:12473   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12294:12296   */\n      0x60\n        /* \"#utility.yul\":12279:12297   */\n      add\n      swap1\n        /* \"#utility.yul\":12261:12479   */\n      jump\t// out\n        /* \"#utility.yul\":12484:12931   */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12771:12786   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":12753:12787   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12823:12838   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":12818:12820   */\n      0x20\n        /* \"#utility.yul\":12803:12821   */\n      dup4\n      add\n        /* \"#utility.yul\":12796:12839   */\n      mstore\n        /* \"#utility.yul\":12870:12872   */\n      0x40\n        /* \"#utility.yul\":12855:12873   */\n      dup3\n      add\n        /* \"#utility.yul\":12848:12882   */\n      mstore\n        /* \"#utility.yul\":12913:12915   */\n      0x60\n        /* \"#utility.yul\":12898:12916   */\n      dup2\n      add\n        /* \"#utility.yul\":12891:12925   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12702:12705   */\n      0x80\n        /* \"#utility.yul\":12687:12706   */\n      add\n      swap1\n        /* \"#utility.yul\":12669:12931   */\n      jump\t// out\n        /* \"#utility.yul\":12936:13123   */\n    tag_114:\n        /* \"#utility.yul\":13101:13115   */\n      swap1\n      iszero\n        /* \"#utility.yul\":13094:13116   */\n      iszero\n        /* \"#utility.yul\":13076:13117   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13064:13066   */\n      0x20\n        /* \"#utility.yul\":13049:13067   */\n      add\n      swap1\n        /* \"#utility.yul\":13031:13123   */\n      jump\t// out\n        /* \"#utility.yul\":13128:13305   */\n    tag_42:\n        /* \"#utility.yul\":13274:13299   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13262:13264   */\n      0x20\n        /* \"#utility.yul\":13247:13265   */\n      add\n      swap1\n        /* \"#utility.yul\":13229:13305   */\n      jump\t// out\n        /* \"#utility.yul\":13310:13512   */\n    tag_52:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":13472:13505   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":13454:13506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13442:13444   */\n      0x20\n        /* \"#utility.yul\":13427:13445   */\n      add\n      swap1\n        /* \"#utility.yul\":13409:13512   */\n      jump\t// out\n        /* \"#utility.yul\":13989:14321   */\n    tag_387:\n        /* \"#utility.yul\":14191:14193   */\n      0x20\n        /* \"#utility.yul\":14173:14194   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14230:14231   */\n      0x09\n        /* \"#utility.yul\":14210:14228   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14203:14232   */\n      mstore\n      shl(0xba, 0x139bdd0813dddb9959)\n        /* \"#utility.yul\":14263:14265   */\n      0x40\n        /* \"#utility.yul\":14248:14266   */\n      dup3\n      add\n        /* \"#utility.yul\":14241:14280   */\n      mstore\n        /* \"#utility.yul\":14312:14314   */\n      0x60\n        /* \"#utility.yul\":14297:14315   */\n      add\n      swap1\n        /* \"#utility.yul\":14163:14321   */\n      jump\t// out\n        /* \"#utility.yul\":14326:14669   */\n    tag_212:\n        /* \"#utility.yul\":14528:14530   */\n      0x20\n        /* \"#utility.yul\":14510:14531   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14567:14569   */\n      0x13\n        /* \"#utility.yul\":14547:14565   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14540:14570   */\n      mstore\n      shl(0x69, 0x2737ba1020b236b4b727b922bc32b1baba37b9)\n        /* \"#utility.yul\":14601:14603   */\n      0x40\n        /* \"#utility.yul\":14586:14604   */\n      dup3\n      add\n        /* \"#utility.yul\":14579:14628   */\n      mstore\n        /* \"#utility.yul\":14660:14662   */\n      0x60\n        /* \"#utility.yul\":14645:14663   */\n      add\n      swap1\n        /* \"#utility.yul\":14500:14669   */\n      jump\t// out\n        /* \"#utility.yul\":14674:15006   */\n    tag_169:\n        /* \"#utility.yul\":14876:14878   */\n      0x20\n        /* \"#utility.yul\":14858:14879   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14915:14916   */\n      0x09\n        /* \"#utility.yul\":14895:14913   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14888:14917   */\n      mstore\n      shl(0xb9, 0x2737ba1020b236b4b7)\n        /* \"#utility.yul\":14948:14950   */\n      0x40\n        /* \"#utility.yul\":14933:14951   */\n      dup3\n      add\n        /* \"#utility.yul\":14926:14965   */\n      mstore\n        /* \"#utility.yul\":14997:14999   */\n      0x60\n        /* \"#utility.yul\":14982:15000   */\n      add\n      swap1\n        /* \"#utility.yul\":14848:15006   */\n      jump\t// out\n        /* \"#utility.yul\":15011:15585   */\n    tag_221:\n        /* \"#utility.yul\":15238:15251   */\n      dup2\n      mload\n        /* \"#utility.yul\":15220:15252   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15312:15316   */\n      0x20\n        /* \"#utility.yul\":15300:15317   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15294:15318   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15290:15340   */\n      and\n        /* \"#utility.yul\":15268:15288   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15261:15341   */\n      mstore\n        /* \"#utility.yul\":15388:15392   */\n      0x40\n        /* \"#utility.yul\":15376:15393   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15370:15394   */\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":15485:15506   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":15463:15483   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":15456:15507   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":15567:15571   */\n      0x60\n        /* \"#utility.yul\":15555:15572   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":15549:15573   */\n      mload\n        /* \"#utility.yul\":15545:15578   */\n      and\n        /* \"#utility.yul\":15523:15543   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":15516:15579   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":15207:15210   */\n      0x80\n        /* \"#utility.yul\":15192:15211   */\n      add\n      swap1\n        /* \"#utility.yul\":15174:15585   */\n      jump\t// out\n        /* \"#utility.yul\":15590:16150   */\n    tag_276:\n      0x00\n        /* \"#utility.yul\":15806:15809   */\n      0xa0\n        /* \"#utility.yul\":15795:15804   */\n      dup3\n        /* \"#utility.yul\":15791:15810   */\n      add\n        /* \"#utility.yul\":15783:15810   */\n      swap1\n      pop\n        /* \"#utility.yul\":15843:15849   */\n      dup3\n        /* \"#utility.yul\":15837:15850   */\n      mload\n        /* \"#utility.yul\":15826:15835   */\n      dup3\n        /* \"#utility.yul\":15819:15851   */\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":15911:15915   */\n      0x20\n        /* \"#utility.yul\":15903:15909   */\n      dup5\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15893:15917   */\n      mload\n        /* \"#utility.yul\":15889:15954   */\n      and\n        /* \"#utility.yul\":15882:15886   */\n      0x20\n        /* \"#utility.yul\":15871:15880   */\n      dup4\n        /* \"#utility.yul\":15867:15887   */\n      add\n        /* \"#utility.yul\":15860:15955   */\n      mstore\n        /* \"#utility.yul\":16011:16015   */\n      0x40\n        /* \"#utility.yul\":16003:16009   */\n      dup4\n        /* \"#utility.yul\":15999:16016   */\n      add\n        /* \"#utility.yul\":15993:16017   */\n      mload\n        /* \"#utility.yul\":15986:15990   */\n      0x40\n        /* \"#utility.yul\":15975:15984   */\n      dup4\n        /* \"#utility.yul\":15971:15991   */\n      add\n        /* \"#utility.yul\":15964:16018   */\n      mstore\n        /* \"#utility.yul\":16074:16078   */\n      0x60\n        /* \"#utility.yul\":16066:16072   */\n      dup4\n        /* \"#utility.yul\":16062:16079   */\n      add\n        /* \"#utility.yul\":16056:16080   */\n      mload\n        /* \"#utility.yul\":16049:16053   */\n      0x60\n        /* \"#utility.yul\":16038:16047   */\n      dup4\n        /* \"#utility.yul\":16034:16054   */\n      add\n        /* \"#utility.yul\":16027:16081   */\n      mstore\n        /* \"#utility.yul\":16137:16141   */\n      0x80\n        /* \"#utility.yul\":16129:16135   */\n      dup4\n        /* \"#utility.yul\":16125:16142   */\n      add\n        /* \"#utility.yul\":16119:16143   */\n      mload\n        /* \"#utility.yul\":16112:16116   */\n      0x80\n        /* \"#utility.yul\":16101:16110   */\n      dup4\n        /* \"#utility.yul\":16097:16117   */\n      add\n        /* \"#utility.yul\":16090:16144   */\n      mstore\n        /* \"#utility.yul\":15773:16150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16155:16450   */\n    tag_306:\n        /* \"#utility.yul\":16369:16372   */\n      0x0100\n        /* \"#utility.yul\":16354:16373   */\n      dup2\n      add\n        /* \"#utility.yul\":16382:16444   */\n      tag_283\n        /* \"#utility.yul\":16358:16367   */\n      dup3\n        /* \"#utility.yul\":16426:16432   */\n      dup5\n        /* \"#utility.yul\":16382:16444   */\n      tag_552\n      jump\t// in\n        /* \"#utility.yul\":16757:17339   */\n    tag_320:\n      0x00\n        /* \"#utility.yul\":16973:16976   */\n      0xc0\n        /* \"#utility.yul\":16962:16971   */\n      dup3\n        /* \"#utility.yul\":16958:16977   */\n      add\n        /* \"#utility.yul\":16950:16977   */\n      swap1\n      pop\n        /* \"#utility.yul\":17010:17016   */\n      dup3\n        /* \"#utility.yul\":17004:17017   */\n      mload\n        /* \"#utility.yul\":16993:17002   */\n      dup3\n        /* \"#utility.yul\":16986:17018   */\n      mstore\n        /* \"#utility.yul\":17074:17078   */\n      0x20\n        /* \"#utility.yul\":17066:17072   */\n      dup4\n        /* \"#utility.yul\":17062:17079   */\n      add\n        /* \"#utility.yul\":17056:17080   */\n      mload\n        /* \"#utility.yul\":17049:17053   */\n      0x20\n        /* \"#utility.yul\":17038:17047   */\n      dup4\n        /* \"#utility.yul\":17034:17054   */\n      add\n        /* \"#utility.yul\":17027:17081   */\n      mstore\n        /* \"#utility.yul\":17137:17141   */\n      0x40\n        /* \"#utility.yul\":17129:17135   */\n      dup4\n        /* \"#utility.yul\":17125:17142   */\n      add\n        /* \"#utility.yul\":17119:17143   */\n      mload\n        /* \"#utility.yul\":17112:17116   */\n      0x40\n        /* \"#utility.yul\":17101:17110   */\n      dup4\n        /* \"#utility.yul\":17097:17117   */\n      add\n        /* \"#utility.yul\":17090:17144   */\n      mstore\n        /* \"#utility.yul\":17200:17204   */\n      0x60\n        /* \"#utility.yul\":17192:17198   */\n      dup4\n        /* \"#utility.yul\":17188:17205   */\n      add\n        /* \"#utility.yul\":17182:17206   */\n      mload\n        /* \"#utility.yul\":17175:17179   */\n      0x60\n        /* \"#utility.yul\":17164:17173   */\n      dup4\n        /* \"#utility.yul\":17160:17180   */\n      add\n        /* \"#utility.yul\":17153:17207   */\n      mstore\n        /* \"#utility.yul\":17263:17267   */\n      0x80\n        /* \"#utility.yul\":17255:17261   */\n      dup4\n        /* \"#utility.yul\":17251:17268   */\n      add\n        /* \"#utility.yul\":17245:17269   */\n      mload\n        /* \"#utility.yul\":17238:17242   */\n      0x80\n        /* \"#utility.yul\":17227:17236   */\n      dup4\n        /* \"#utility.yul\":17223:17243   */\n      add\n        /* \"#utility.yul\":17216:17270   */\n      mstore\n        /* \"#utility.yul\":17326:17330   */\n      0xa0\n        /* \"#utility.yul\":17318:17324   */\n      dup4\n        /* \"#utility.yul\":17314:17331   */\n      add\n        /* \"#utility.yul\":17308:17332   */\n      mload\n        /* \"#utility.yul\":17301:17305   */\n      0xa0\n        /* \"#utility.yul\":17290:17299   */\n      dup4\n        /* \"#utility.yul\":17286:17306   */\n      add\n        /* \"#utility.yul\":17279:17333   */\n      mstore\n        /* \"#utility.yul\":16940:17339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17344:18578   */\n    tag_351:\n      0x00\n        /* \"#utility.yul\":17534:17537   */\n      0x0160\n        /* \"#utility.yul\":17523:17532   */\n      dup3\n        /* \"#utility.yul\":17519:17538   */\n      add\n        /* \"#utility.yul\":17511:17538   */\n      swap1\n      pop\n        /* \"#utility.yul\":17547:17593   */\n      tag_576\n        /* \"#utility.yul\":17583:17592   */\n      dup3\n        /* \"#utility.yul\":17574:17580   */\n      dup5\n        /* \"#utility.yul\":17568:17581   */\n      mload\n        /* \"#utility.yul\":17547:17593   */\n      tag_548\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17640:17644   */\n      0x20\n        /* \"#utility.yul\":17632:17638   */\n      dup4\n        /* \"#utility.yul\":17628:17645   */\n      add\n        /* \"#utility.yul\":17622:17646   */\n      mload\n        /* \"#utility.yul\":17655:17711   */\n      tag_577\n        /* \"#utility.yul\":17705:17709   */\n      0x20\n        /* \"#utility.yul\":17694:17703   */\n      dup5\n        /* \"#utility.yul\":17690:17710   */\n      add\n        /* \"#utility.yul\":17676:17688   */\n      dup3\n        /* \"#utility.yul\":17655:17711   */\n      tag_548\n      jump\t// in\n    tag_577:\n      pop\n        /* \"#utility.yul\":17760:17764   */\n      0x40\n        /* \"#utility.yul\":17752:17758   */\n      dup4\n        /* \"#utility.yul\":17748:17765   */\n      add\n        /* \"#utility.yul\":17742:17766   */\n      mload\n        /* \"#utility.yul\":17775:17832   */\n      tag_578\n        /* \"#utility.yul\":17826:17830   */\n      0x40\n        /* \"#utility.yul\":17815:17824   */\n      dup5\n        /* \"#utility.yul\":17811:17831   */\n      add\n        /* \"#utility.yul\":17795:17809   */\n      dup3\n        /* \"#utility.yul\":17775:17832   */\n      tag_554\n      jump\t// in\n    tag_578:\n      pop\n        /* \"#utility.yul\":17881:17885   */\n      0x60\n        /* \"#utility.yul\":17873:17879   */\n      dup4\n        /* \"#utility.yul\":17869:17886   */\n      add\n        /* \"#utility.yul\":17863:17887   */\n      mload\n        /* \"#utility.yul\":17896:17952   */\n      tag_579\n        /* \"#utility.yul\":17946:17950   */\n      0x60\n        /* \"#utility.yul\":17935:17944   */\n      dup5\n        /* \"#utility.yul\":17931:17951   */\n      add\n        /* \"#utility.yul\":17915:17929   */\n      dup3\n        /* \"#utility.yul\":17896:17952   */\n      tag_550\n      jump\t// in\n    tag_579:\n      pop\n        /* \"#utility.yul\":18001:18005   */\n      0x80\n        /* \"#utility.yul\":17993:17999   */\n      dup4\n        /* \"#utility.yul\":17989:18006   */\n      add\n        /* \"#utility.yul\":17983:18007   */\n      mload\n        /* \"#utility.yul\":18016:18072   */\n      tag_580\n        /* \"#utility.yul\":18066:18070   */\n      0x80\n        /* \"#utility.yul\":18055:18064   */\n      dup5\n        /* \"#utility.yul\":18051:18071   */\n      add\n        /* \"#utility.yul\":18035:18049   */\n      dup3\n        /* \"#utility.yul\":18016:18072   */\n      tag_550\n      jump\t// in\n    tag_580:\n      pop\n        /* \"#utility.yul\":18128:18132   */\n      0xa0\n        /* \"#utility.yul\":18120:18126   */\n      dup4\n        /* \"#utility.yul\":18116:18133   */\n      add\n        /* \"#utility.yul\":18110:18134   */\n      mload\n        /* \"#utility.yul\":18103:18107   */\n      0xa0\n        /* \"#utility.yul\":18092:18101   */\n      dup4\n        /* \"#utility.yul\":18088:18108   */\n      add\n        /* \"#utility.yul\":18081:18135   */\n      mstore\n        /* \"#utility.yul\":18191:18195   */\n      0xc0\n        /* \"#utility.yul\":18183:18189   */\n      dup4\n        /* \"#utility.yul\":18179:18196   */\n      add\n        /* \"#utility.yul\":18173:18197   */\n      mload\n        /* \"#utility.yul\":18166:18170   */\n      0xc0\n        /* \"#utility.yul\":18155:18164   */\n      dup4\n        /* \"#utility.yul\":18151:18171   */\n      add\n        /* \"#utility.yul\":18144:18198   */\n      mstore\n        /* \"#utility.yul\":18254:18258   */\n      0xe0\n        /* \"#utility.yul\":18246:18252   */\n      dup4\n        /* \"#utility.yul\":18242:18259   */\n      add\n        /* \"#utility.yul\":18236:18260   */\n      mload\n        /* \"#utility.yul\":18229:18233   */\n      0xe0\n        /* \"#utility.yul\":18218:18227   */\n      dup4\n        /* \"#utility.yul\":18214:18234   */\n      add\n        /* \"#utility.yul\":18207:18261   */\n      mstore\n        /* \"#utility.yul\":18280:18286   */\n      0x0100\n        /* \"#utility.yul\":18340:18342   */\n      dup1\n        /* \"#utility.yul\":18332:18338   */\n      dup5\n        /* \"#utility.yul\":18328:18343   */\n      add\n        /* \"#utility.yul\":18322:18344   */\n      mload\n        /* \"#utility.yul\":18317:18319   */\n      dup2\n        /* \"#utility.yul\":18306:18315   */\n      dup5\n        /* \"#utility.yul\":18302:18320   */\n      add\n        /* \"#utility.yul\":18295:18345   */\n      mstore\n      pop\n        /* \"#utility.yul\":18364:18370   */\n      0x0120\n        /* \"#utility.yul\":18419:18421   */\n      dup1\n        /* \"#utility.yul\":18411:18417   */\n      dup5\n        /* \"#utility.yul\":18407:18422   */\n      add\n        /* \"#utility.yul\":18401:18423   */\n      mload\n        /* \"#utility.yul\":18432:18488   */\n      tag_581\n        /* \"#utility.yul\":18484:18486   */\n      dup3\n        /* \"#utility.yul\":18473:18482   */\n      dup6\n        /* \"#utility.yul\":18469:18487   */\n      add\n        /* \"#utility.yul\":18453:18467   */\n      dup3\n        /* \"#utility.yul\":18432:18488   */\n      tag_548\n      jump\t// in\n    tag_581:\n      pop\n      pop\n        /* \"#utility.yul\":18507:18513   */\n      0x0140\n        /* \"#utility.yul\":18555:18570   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":18549:18571   */\n      mload\n        /* \"#utility.yul\":18529:18547   */\n      swap2\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":18522:18572   */\n      mstore\n        /* \"#utility.yul\":17501:18578   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18583:18943   */\n    tag_144:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":18803:18850   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":18785:18851   */\n      dup4\n      mstore\n        /* \"#utility.yul\":18882:18884   */\n      0x20\n        /* \"#utility.yul\":18867:18885   */\n      dup4\n      add\n        /* \"#utility.yul\":18860:18894   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":18925:18927   */\n      0x40\n        /* \"#utility.yul\":18910:18928   */\n      dup3\n      add\n        /* \"#utility.yul\":18903:18937   */\n      mstore\n        /* \"#utility.yul\":18773:18775   */\n      0x60\n        /* \"#utility.yul\":18758:18776   */\n      add\n      swap1\n        /* \"#utility.yul\":18740:18943   */\n      jump\t// out\n        /* \"#utility.yul\":19130:19590   */\n    tag_389:\n        /* \"#utility.yul\":19359:19384   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19458:19473   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":19453:19455   */\n      0x20\n        /* \"#utility.yul\":19438:19456   */\n      dup6\n      add\n        /* \"#utility.yul\":19431:19474   */\n      mstore\n        /* \"#utility.yul\":19510:19525   */\n      swap2\n      and\n        /* \"#utility.yul\":19505:19507   */\n      0x40\n        /* \"#utility.yul\":19490:19508   */\n      dup4\n      add\n        /* \"#utility.yul\":19483:19526   */\n      mstore\n        /* \"#utility.yul\":19574:19582   */\n      0xffffff\n        /* \"#utility.yul\":19562:19583   */\n      and\n        /* \"#utility.yul\":19557:19559   */\n      0x60\n        /* \"#utility.yul\":19542:19560   */\n      dup3\n      add\n        /* \"#utility.yul\":19535:19584   */\n      mstore\n        /* \"#utility.yul\":19346:19349   */\n      0x80\n        /* \"#utility.yul\":19331:19350   */\n      add\n      swap1\n        /* \"#utility.yul\":19313:19590   */\n      jump\t// out\n        /* \"#utility.yul\":19595:20027   */\n    tag_160:\n        /* \"#utility.yul\":19826:19851   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":19887:19934   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":19882:19884   */\n      0x20\n        /* \"#utility.yul\":19867:19885   */\n      dup5\n      add\n        /* \"#utility.yul\":19860:19935   */\n      mstore\n        /* \"#utility.yul\":19966:19968   */\n      0x40\n        /* \"#utility.yul\":19951:19969   */\n      dup4\n      add\n        /* \"#utility.yul\":19944:19978   */\n      mstore\n        /* \"#utility.yul\":20009:20011   */\n      0x60\n        /* \"#utility.yul\":19994:20012   */\n      dup3\n      add\n        /* \"#utility.yul\":19987:20021   */\n      mstore\n        /* \"#utility.yul\":19813:19816   */\n      0x80\n        /* \"#utility.yul\":19798:19817   */\n      add\n      swap1\n        /* \"#utility.yul\":19780:20027   */\n      jump\t// out\n        /* \"#utility.yul\":20032:20280   */\n    tag_78:\n        /* \"#utility.yul\":20206:20231   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":20262:20264   */\n      0x20\n        /* \"#utility.yul\":20247:20265   */\n      dup3\n      add\n        /* \"#utility.yul\":20240:20274   */\n      mstore\n        /* \"#utility.yul\":20194:20196   */\n      0x40\n        /* \"#utility.yul\":20179:20197   */\n      add\n      swap1\n        /* \"#utility.yul\":20161:20280   */\n      jump\t// out\n        /* \"#utility.yul\":20285:20686   */\n    tag_228:\n        /* \"#utility.yul\":20510:20535   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":20566:20568   */\n      0x20\n        /* \"#utility.yul\":20551:20569   */\n      dup5\n      add\n        /* \"#utility.yul\":20544:20578   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":20609:20611   */\n      0x40\n        /* \"#utility.yul\":20594:20612   */\n      dup4\n      add\n        /* \"#utility.yul\":20587:20621   */\n      mstore\n        /* \"#utility.yul\":20664:20678   */\n      iszero\n        /* \"#utility.yul\":20657:20679   */\n      iszero\n        /* \"#utility.yul\":20652:20654   */\n      0x60\n        /* \"#utility.yul\":20637:20655   */\n      dup3\n      add\n        /* \"#utility.yul\":20630:20680   */\n      mstore\n        /* \"#utility.yul\":20497:20500   */\n      0x80\n        /* \"#utility.yul\":20482:20501   */\n      add\n      swap1\n        /* \"#utility.yul\":20464:20686   */\n      jump\t// out\n        /* \"#utility.yul\":20691:21123   */\n    tag_282:\n        /* \"#utility.yul\":20922:20947   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":20978:20980   */\n      0x20\n        /* \"#utility.yul\":20963:20981   */\n      dup5\n      add\n        /* \"#utility.yul\":20956:20990   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":21021:21023   */\n      0x40\n        /* \"#utility.yul\":21006:21024   */\n      dup4\n      add\n        /* \"#utility.yul\":20999:21033   */\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":21069:21116   */\n      and\n        /* \"#utility.yul\":21064:21066   */\n      0x60\n        /* \"#utility.yul\":21049:21067   */\n      dup3\n      add\n        /* \"#utility.yul\":21042:21117   */\n      mstore\n        /* \"#utility.yul\":20909:20912   */\n      0x80\n        /* \"#utility.yul\":20894:20913   */\n      add\n      swap1\n        /* \"#utility.yul\":20876:21123   */\n      jump\t// out\n        /* \"#utility.yul\":21128:21261   */\n    tag_458:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":21205:21236   */\n      dup2\n      and\n        /* \"#utility.yul\":21195:21237   */\n      dup2\n      eq\n        /* \"#utility.yul\":21185:21187   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":21251:21252   */\n      0x00\n        /* \"#utility.yul\":21248:21249   */\n      dup1\n        /* \"#utility.yul\":21241:21253   */\n      revert\n        /* \"#utility.yul\":21185:21187   */\n    tag_590:\n        /* \"#utility.yul\":21175:21261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21266:21386   */\n    tag_462:\n        /* \"#utility.yul\":21355:21360   */\n      dup1\n        /* \"#utility.yul\":21352:21353   */\n      0x02\n        /* \"#utility.yul\":21341:21361   */\n      signextend\n        /* \"#utility.yul\":21334:21339   */\n      dup2\n        /* \"#utility.yul\":21331:21362   */\n      eq\n        /* \"#utility.yul\":21321:21323   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":21376:21377   */\n      0x00\n        /* \"#utility.yul\":21373:21374   */\n      dup1\n        /* \"#utility.yul\":21366:21378   */\n      revert\n        /* \"#utility.yul\":21391:21539   */\n    tag_466:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":21472:21477   */\n      dup2\n        /* \"#utility.yul\":21468:21514   */\n      and\n        /* \"#utility.yul\":21461:21466   */\n      dup2\n        /* \"#utility.yul\":21458:21515   */\n      eq\n        /* \"#utility.yul\":21448:21450   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":21529:21530   */\n      0x00\n        /* \"#utility.yul\":21526:21527   */\n      dup1\n        /* \"#utility.yul\":21519:21531   */\n      revert\n        /* \"#utility.yul\":21544:21665   */\n    tag_470:\n        /* \"#utility.yul\":21631:21639   */\n      0xffffff\n        /* \"#utility.yul\":21624:21629   */\n      dup2\n        /* \"#utility.yul\":21620:21640   */\n      and\n        /* \"#utility.yul\":21613:21618   */\n      dup2\n        /* \"#utility.yul\":21610:21641   */\n      eq\n        /* \"#utility.yul\":21600:21602   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":21655:21656   */\n      0x00\n        /* \"#utility.yul\":21652:21653   */\n      dup1\n        /* \"#utility.yul\":21645:21657   */\n      revert\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_c690ee39c61cd2467ca78047546d7d01e837eb538ab70dac257590f3599b654a d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa26469706673582212205bc20b42fdadeaaa814715bc956fc34198550bedbb946c2a55bf2662efa65b5864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:882:21",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:540:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "249:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "258:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "266:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "251:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "251:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "251:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "223:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "232:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "219:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "219:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "244:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "215:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "215:33:21"
															},
															"nodeType": "YulIf",
															"src": "212:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "303:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "297:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "288:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "349:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "322:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "322:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "374:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "364:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "388:40:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "413:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "424:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "409:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "409:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "403:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:25:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "392:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "464:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "437:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "437:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "481:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "491:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "507:40:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "532:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "543:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:25:21"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "511:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "583:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "556:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "600:17:21",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "610:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:40:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "651:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "662:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "647:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "641:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:25:21"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "630:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "702:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "675:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "675:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "719:17:21",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "729:7:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INonfungiblePositionManager_$1729t_contract$_ISwapRouter_$1886t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "144:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "155:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "167:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "175:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "183:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "191:6:21",
														"type": ""
													}
												],
												"src": "14:728:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:86:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "858:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "867:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "870:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "860:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "860:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "860:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "817:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "828:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "843:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "848:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "839:3:21"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "839:11:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "852:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "835:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "824:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "824:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "814:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:50:21"
															},
															"nodeType": "YulIf",
															"src": "804:2:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "783:5:21",
														"type": ""
													}
												],
												"src": "747:133:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_INonfungiblePositionManager_$1729t_contract$_ISwapRouter_$1886t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_t_address(value_3)\n        value3 := value_3\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b5060405162002bf038038062002bf0833981016040819052620000349162000239565b6001600160601b0319606085811b821660805284901b1660a0526200006960008051602062002bd083398151915280620000d3565b6200009360008051602062002bb083398151915260008051602062002bd0833981519152620000d3565b620000ae60008051602062002bd08339815191528362000125565b620000c960008051602062002bb08339815191528262000125565b50505050620002b9565b600082815260208190526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526020829052604090912060020155565b62000131828262000135565b5050565b6000828152602081815260409091206200015a918390620014f3620001ae821b17901c565b1562000131576200016a620001ce565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001c5836001600160a01b038416620001d2565b90505b92915050565b3390565b6000620001e0838362000221565b6200021857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001c8565b506000620001c8565b60009081526001919091016020526040902054151590565b600080600080608085870312156200024f578384fd5b84516200025c81620002a0565b60208601519094506200026f81620002a0565b60408601519093506200028281620002a0565b60608601519092506200029581620002a0565b939692955090935050565b6001600160a01b0381168114620002b657600080fd5b50565b60805160601c60a05160601c61287d6200033360003980610a415280610b515280610b7c5280610e6d5280610e9c5280610fef52806110af5250806105b452806105df52806107c952806108ea5280610cbf5280610e0f5280610e3e5280610f12528061117752806113ef5280611661525061287d6000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638e5f597711610104578063b4580507116100a2578063d547741f11610071578063d547741f146103e5578063dce008af146103f8578063dd37019d1461040b578063e1f21c671461042e576101cf565b8063b458050714610395578063c31c9c07146103a8578063c691b0a1146103b0578063ca15c873146103d2576101cf565b8063a217fddf116100de578063a217fddf1461034e578063a824355814610356578063b02c43d014610369578063b44a27221461038d576101cf565b80638e5f5977146102fb5780639010d07c1461030e57806391d148541461032e576101cf565b806336568abe116101715780634c8c73141161014b5780634c8c7314146102ba57806357706e74146102cd57806375b238fc146102e05780637d42c461146102e8576101cf565b806336568abe146102735780633a483cb0146102865780633ef4c3d4146102a7576101cf565b80631c8c9980116101ad5780631c8c998014610227578063248a9ca31461023a57806325eb6e6f1461024d5780632f2ff15d14610260576101cf565b806307bd0265146101d45780630d71bdc3146101f2578063150b7a0214610207575b600080fd5b6101dc610441565b6040516101e99190612434565b60405180910390f35b610205610200366004611f52565b610453565b005b61021a610215366004611f92565b6104a5565b6040516101e9919061243d565b610205610235366004611e18565b6104c2565b6101dc610248366004612071565b61055d565b61020561025b36600461202c565b610575565b61020561026e366004612089565b61060a565b610205610281366004612089565b610671565b61029961029436600461211c565b6106d2565b6040516101e99291906126bb565b6102056102b5366004612089565b61089a565b6101dc6102c8366004611ee3565b610986565b6102056102db36600461202c565b610b12565b6101dc610ba1565b6102056102f63660046121cb565b610bb3565b610299610309366004612144565b610c1a565b61032161031c3660046120ad565b610d92565b6040516101e9919061238c565b61034161033c366004612089565b610db3565b6040516101e99190612429565b6101dc610dcb565b610205610364366004611e18565b610dd0565b61037c610377366004612071565b610ec5565b6040516101e99594939291906123a0565b610321610f10565b6101dc6103a3366004611ee3565b610f34565b6103216110ad565b6103c36103be3660046121f6565b6110d1565b6040516101e99392919061264c565b6101dc6103e0366004612071565b611250565b6102056103f3366004612089565b611267565b61020561040636600461202c565b6112c0565b61041e610419366004611e50565b611311565b6040516101e99493929190612697565b61020561043c366004611f52565b6114af565b6000805160206127d983398151915281565b61046b6000805160206127f983398151915233610db3565b15156001146104955760405162461bcd60e51b815260040161048c906124a2565b60405180910390fd5b6104a0838383611508565b505050565b60006104b084611656565b50630a85bd0160e11b95945050505050565b6104da6000805160206127f983398151915233610db3565b15156001146104fb5760405162461bcd60e51b815260040161048c906124a2565b60405163f2fde38b60e01b81526001600160a01b0383169063f2fde38b9061052790849060040161238c565b600060405180830381600087803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b505050505050565b6000818152602081905260409020600201545b919050565b61058d6000805160206127f983398151915233610db3565b15156001146105ae5760405162461bcd60e51b815260040161048c906124a2565b6105d9847f0000000000000000000000000000000000000000000000000000000000000000846118ae565b610604837f0000000000000000000000000000000000000000000000000000000000000000836118ae565b50505050565b6000828152602081905260409020600201546106289061033c6119f5565b6106635760405162461bcd60e51b815260040180806020018281038252602f81526020018061277a602f913960400191505060405180910390fd5b61066d82826119f9565b5050565b6106796119f5565b6001600160a01b0316816001600160a01b0316146106c85760405162461bcd60e51b815260040180806020018281038252602f815260200180612819602f913960400191505060405180910390fd5b61066d8282611a62565b6000806106ed6000805160206127f983398151915233610db3565b15156001148061071657506107106000805160206127d983398151915233610db3565b15156001145b6107325760405162461bcd60e51b815260040161048c90612475565b60018315151415610776576107556000805160206127f983398151915233610db3565b15156001146107765760405162461bcd60e51b815260040161048c906124a2565b60006040518060800160405280868152602001856107945730610796565b335b6001600160a01b0390811682526001600160801b0360208301819052604092830152905163fc6f786560e01b81529192507f0000000000000000000000000000000000000000000000000000000000000000169063fc6f7865906107fe9084906004016124c5565b6040805180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f91906121a8565b60405191945092507feaa34316c1ac0ac2b8445632fef75dad91f846cc69c40a558ccfd6e5700bb79a9061088a9087908690869089906126c9565b60405180910390a1509250929050565b6108b26000805160206127f983398151915233610db3565b15156001146108d35760405162461bcd60e51b815260040161048c906124a2565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90610923903090859087906004016123dc565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050506000928352505060016020819052604090912080546001600160a01b03191681550180546001600160e81b0319169055565b60006109a06000805160206127f983398151915233610db3565b1515600114806109c957506109c36000805160206127d983398151915233610db3565b15156001145b6109e55760405162461bcd60e51b815260040161048c90612475565b60408051610100810182526001600160a01b03808a168252888116602083015262ffffff88168284015230606083015242608083015260a0820187905260c0820186905284811660e08301529151631b67c43360e31b815290917f0000000000000000000000000000000000000000000000000000000000000000169063db3e219890610a7690849060040161254b565b602060405180830381600087803b158015610a9057600080fd5b505af1158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190612104565b91507f1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f88888488604051610aff9493929190612400565b60405180910390a1509695505050505050565b610b2a6000805160206127f983398151915233610db3565b1515600114610b4b5760405162461bcd60e51b815260040161048c906124a2565b610b76847f0000000000000000000000000000000000000000000000000000000000000000846118ae565b610604837f0000000000000000000000000000000000000000000000000000000000000000836118ae565b6000805160206127f983398151915281565b610bcb6000805160206127f983398151915233610db3565b1515600114610bec5760405162461bcd60e51b815260040161048c906124a2565b600083815260016020819052604090912080549101546104a0916001600160a01b03908116911684846112c0565b600080610c356000805160206127f983398151915233610db3565b151560011480610c5e5750610c586000805160206127d983398151915233610db3565b15156001145b610c7a5760405162461bcd60e51b815260040161048c90612475565b6040805160a0810182528781526001600160801b0387166020820152808201869052606081018590524260808201529051630624e65f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c49ccbe90610cf4908490600401612508565b6040805180830381600087803b158015610d0d57600080fd5b505af1158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4591906121a8565b60405191945092507fc79cb6614f7bcc31f0121c4db623a782836f42b2d8e5290a19340bdbc25032f790610d80908990869086908b906126e6565b60405180910390a15094509492505050565b6000828152602081905260408120610daa9083611acb565b90505b92915050565b6000828152602081905260408120610daa9083611ad7565b600081565b610de86000805160206127f983398151915233610db3565b1515600114610e095760405162461bcd60e51b815260040161048c906124a2565b610e38827f0000000000000000000000000000000000000000000000000000000000000000600160ff1b6118ae565b610e67817f0000000000000000000000000000000000000000000000000000000000000000600160ff1b6118ae565b610e96827f0000000000000000000000000000000000000000000000000000000000000000600160ff1b6118ae565b61066d817f0000000000000000000000000000000000000000000000000000000000000000600160ff1b6118ae565b600160208190526000918252604090912080549101546001600160a01b039182169181169062ffffff600160a01b82041690600160b81b8104600290810b91600160d01b9004900b85565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610f4e6000805160206127f983398151915233610db3565b151560011480610f775750610f716000805160206127d983398151915233610db3565b15156001145b610f935760405162461bcd60e51b815260040161048c90612475565b60408051610100810182526001600160a01b03808a168252888116602083015262ffffff88168284015230606083015242608083015260a0820187905260c0820186905284811660e0830152915163414bf38960e01b815290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf3899061102490849060040161254b565b602060405180830381600087803b15801561103e57600080fd5b505af1158015611052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110769190612104565b91507f1f2c1de040604eaf4a8c72b05bd7c16fae213f15cbde69ecf70dd3b97fef1f2f88888785604051610aff9493929190612400565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006110ee6000805160206127f983398151915233610db3565b15156001148061111757506111116000805160206127d983398151915233610db3565b15156001145b6111335760405162461bcd60e51b815260040161048c90612475565b6040805160c0810182528981526020810189905280820188905260608101879052608081018690524260a0820152905163219f5d1760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063219f5d17906111ac90849060040161255a565b606060405180830381600087803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe91906120ce565b60405192965090945092507f2d6edbed0a944a56e78d8ced0bc4794533b38938655f47c5a423559a1163b1049061123c908b908690869089906126e6565b60405180910390a150955095509592505050565b6000818152602081905260408120610dad90611aec565b6000828152602081905260409020600201546112859061033c6119f5565b6106c85760405162461bcd60e51b81526004018080602001828103825260308152602001806127a96030913960400191505060405180910390fd5b6112d86000805160206127f983398151915233610db3565b15156001146112f95760405162461bcd60e51b815260040161048c906124a2565b61130584333085611af7565b61060483333084611af7565b60008060008061132f6000805160206127f983398151915233610db3565b15156001148061135857506113526000805160206127d983398151915233610db3565b15156001145b6113745760405162461bcd60e51b815260040161048c90612475565b60006040518061016001604052808f6001600160a01b031681526020018e6001600160a01b031681526020018d62ffffff1681526020018c60020b81526020018b60020b81526020018a8152602001898152602001888152602001878152602001306001600160a01b031681526020014260640181525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166388316456826040518263ffffffff1660e01b8152600401611439919061259e565b608060405180830381600087803b15801561145357600080fd5b505af1158015611467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148b919061216b565b9297509095509350915061149e85611656565b509950995099509995505050505050565b6114c76000805160206127f983398151915233610db3565b15156001146114e85760405162461bcd60e51b815260040161048c906124a2565b6104a08383836118ae565b6000610daa836001600160a01b038416611c47565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106115845780518252601f199092019160209182019101611565565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146115e6576040519150601f19603f3d011682016040523d82523d6000602084013e6115eb565b606091505b5091509150818015611619575080511580611619575080806020019051602081101561161657600080fd5b50515b61164f576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b5050505050565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399fbab88886040518263ffffffff1660e01b81526004016116ab9190612434565b6101806040518083038186803b1580156116c457600080fd5b505afa1580156116d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fc9190612230565b505050505096509650965096509650965050306001600160a01b0316866001600160a01b03161461173f5760405162461bcd60e51b815260040161048c90612452565b6040518060a00160405280866001600160a01b03168152602001856001600160a01b031681526020018462ffffff1681526020018360020b81526020018260020b8152506001600089815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548162ffffff021916908362ffffff16021790555060608201518160010160176101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101601a6101000a81548162ffffff021916908360020b62ffffff1602179055509050507fc98b6cef6bcb7a4f274ab1045ead0065d8a07df11b545d8dc8bd25f58b39d0718786868660405161189d949392919061266d565b60405180910390a150505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b6020831061192a5780518252601f19909201916020918201910161190b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461198c576040519150601f19603f3d011682016040523d82523d6000602084013e611991565b606091505b50915091508180156119bf5750805115806119bf57508080602001905160208110156119bc57600080fd5b50515b61164f576040805162461bcd60e51b8152602060048201526002602482015261534160f01b604482015290519081900360640190fd5b3390565b6000828152602081905260409020611a1190826114f3565b1561066d57611a1e6119f5565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020611a7a9082611c91565b1561066d57611a876119f5565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610daa8383611ca6565b6000610daa836001600160a01b038416611d0a565b6000610dad82611d22565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611b7b5780518252601f199092019160209182019101611b5c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611bdd576040519150601f19603f3d011682016040523d82523d6000602084013e611be2565b606091505b5091509150818015611c10575080511580611c105750808060200190516020811015611c0d57600080fd5b50515b610555576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b6000611c538383611d0a565b611c8957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610dad565b506000610dad565b6000610daa836001600160a01b038416611d26565b81546000908210611ce85760405162461bcd60e51b81526004018080602001828103825260228152602001806127586022913960400191505060405180910390fd5b826000018281548110611cf757fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60008181526001830160205260408120548015611de25783546000198083019190810190600090879083908110611d5957fe5b9060005260206000200154905080876000018481548110611d7657fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611da657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610dad565b6000915050610dad565b80516105708161270a565b805161057081612722565b805161057081612731565b805161057081612746565b60008060408385031215611e2a578182fd5b8235611e358161270a565b91506020830135611e458161270a565b809150509250929050565b60008060008060008060008060006101208a8c031215611e6e578485fd5b8935611e798161270a565b985060208a0135611e898161270a565b975060408a0135611e9981612746565b965060608a0135611ea981612722565b955060808a0135611eb981612722565b989b979a50959894979660a0860135965060c08601359560e0810135955061010001359350915050565b60008060008060008060c08789031215611efb578182fd5b8635611f068161270a565b95506020870135611f168161270a565b94506040870135611f2681612746565b9350606087013592506080870135915060a0870135611f448161270a565b809150509295509295509295565b600080600060608486031215611f66578283fd5b8335611f718161270a565b92506020840135611f818161270a565b929592945050506040919091013590565b600080600080600060808688031215611fa9578081fd5b8535611fb48161270a565b94506020860135611fc48161270a565b935060408601359250606086013567ffffffffffffffff80821115611fe7578283fd5b818801915088601f830112611ffa578283fd5b813581811115612008578384fd5b896020828501011115612019578384fd5b9699959850939650602001949392505050565b60008060008060808587031215612041578384fd5b843561204c8161270a565b9350602085013561205c8161270a565b93969395505050506040820135916060013590565b600060208284031215612082578081fd5b5035919050565b6000806040838503121561209b578182fd5b823591506020830135611e458161270a565b600080604083850312156120bf578182fd5b50508035926020909101359150565b6000806000606084860312156120e2578081fd5b83516120ed81612731565b602085015160409095015190969495509392505050565b600060208284031215612115578081fd5b5051919050565b6000806040838503121561212e578182fd5b8235915060208301358015158114611e45578182fd5b60008060008060808587031215612159578182fd5b84359350602085013561205c81612731565b60008060008060808587031215612180578182fd5b84519350602085015161219281612731565b6040860151606090960151949790965092505050565b600080604083850312156121ba578182fd5b505080516020909101519092909150565b6000806000606084860312156121df578081fd5b505081359360208301359350604090920135919050565b600080600080600060a0868803121561220d578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806000806000806000806000806000806101808d8f031215612252578586fd5b8c516bffffffffffffffffffffffff8116811461226d578687fd5b9b5061227b60208e01611dec565b9a5061228960408e01611dec565b995061229760608e01611dec565b98506122a560808e01611e0d565b97506122b360a08e01611df7565b96506122c160c08e01611df7565b95506122cf60e08e01611e02565b94506101008d015193506101208d015192506122ee6101408e01611e02565b91506122fd6101608e01611e02565b90509295989b509295989b509295989b565b6001600160a01b03169052565b60020b9052565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e09182015116910152565b62ffffff169052565b6001600160a01b0391909116815260200190565b6001600160a01b03958616815293909416602084015262ffffff919091166040830152600290810b60608301529190910b608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b602080825260099082015268139bdd0813dddb995960ba1b604082015260600190565b6020808252601390820152722737ba1020b236b4b727b922bc32b1baba37b960691b604082015260600190565b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b600060a082019050825182526001600160801b03602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b6101008101610dad8284612323565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6000610160820190506125b282845161230f565b60208301516125c4602084018261230f565b5060408301516125d76040840182612383565b5060608301516125ea606084018261231c565b5060808301516125fd608084018261231c565b5060a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015161263b8285018261230f565b505061014092830151919092015290565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160a01b0392831660208501529116604083015262ffffff16606082015260800190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b938452602084019290925260408301521515606082015260800190565b938452602084019290925260408301526001600160801b0316606082015260800190565b6001600160a01b038116811461271f57600080fd5b50565b8060020b811461271f57600080fd5b6001600160801b038116811461271f57600080fd5b62ffffff8116811461271f57600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212205bc20b42fdadeaaa814715bc956fc34198550bedbb946c2a55bf2662efa65b5864736f6c63430007060033d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2BF0 CODESIZE SUB DUP1 PUSH3 0x2BF0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP5 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH3 0x69 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2BD0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH3 0xD3 JUMP JUMPDEST PUSH3 0x93 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2BB0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2BD0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0xD3 JUMP JUMPDEST PUSH3 0xAE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2BD0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x125 JUMP JUMPDEST PUSH3 0xC9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2BB0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH3 0x125 JUMP JUMPDEST POP POP POP POP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP4 SWAP3 DUP6 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH3 0x131 DUP3 DUP3 PUSH3 0x135 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x15A SWAP2 DUP4 SWAP1 PUSH3 0x14F3 PUSH3 0x1AE DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST ISZERO PUSH3 0x131 JUMPI PUSH3 0x16A PUSH3 0x1CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x1D2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E0 DUP4 DUP4 PUSH3 0x221 JUMP JUMPDEST PUSH3 0x218 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x1C8 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1C8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x24F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x25C DUP2 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x26F DUP2 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x282 DUP2 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x295 DUP2 PUSH3 0x2A0 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x287D PUSH3 0x333 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xA41 MSTORE DUP1 PUSH2 0xB51 MSTORE DUP1 PUSH2 0xB7C MSTORE DUP1 PUSH2 0xE6D MSTORE DUP1 PUSH2 0xE9C MSTORE DUP1 PUSH2 0xFEF MSTORE DUP1 PUSH2 0x10AF MSTORE POP DUP1 PUSH2 0x5B4 MSTORE DUP1 PUSH2 0x5DF MSTORE DUP1 PUSH2 0x7C9 MSTORE DUP1 PUSH2 0x8EA MSTORE DUP1 PUSH2 0xCBF MSTORE DUP1 PUSH2 0xE0F MSTORE DUP1 PUSH2 0xE3E MSTORE DUP1 PUSH2 0xF12 MSTORE DUP1 PUSH2 0x1177 MSTORE DUP1 PUSH2 0x13EF MSTORE DUP1 PUSH2 0x1661 MSTORE POP PUSH2 0x287D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5F5977 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB4580507 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xDCE008AF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xDD37019D EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x42E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xB4580507 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xC691B0A1 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3D2 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xA8243558 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x38D JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8E5F5977 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x32E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4C8C7314 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4C8C7314 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x57706E74 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x7D42C461 EQ PUSH2 0x2E8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x3A483CB0 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3EF4C3D4 EQ PUSH2 0x2A7 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1C8C9980 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1C8C9980 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x25EB6E6F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x260 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7BD0265 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xD71BDC3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x205 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x205 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x205 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x211C JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP3 SWAP2 SWAP1 PUSH2 0x26BB JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x321 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x341 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x205 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x321 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x46B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A0 DUP4 DUP4 DUP4 PUSH2 0x1508 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP5 PUSH2 0x1656 JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH2 0x527 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x238C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x5D9 DUP5 PUSH32 0x0 DUP5 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x604 DUP4 PUSH32 0x0 DUP4 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x628 SWAP1 PUSH2 0x33C PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x277A PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0x19F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x679 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2819 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6ED PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x710 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x1 DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x776 JUMPI PUSH2 0x755 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH2 0x794 JUMPI ADDRESS PUSH2 0x796 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x7FE SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH32 0xEAA34316C1AC0AC2B8445632FEF75DAD91F846CC69C40A558CCFD6E5700BB79A SWAP1 PUSH2 0x88A SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x923 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x23DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x9C9 JUMPI POP PUSH2 0x9C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND DUP3 DUP5 ADD MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 DUP2 AND PUSH1 0xE0 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0xA76 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x254B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH32 0x1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F DUP9 DUP9 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xB76 DUP5 PUSH32 0x0 DUP5 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x604 DUP4 PUSH32 0x0 DUP4 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0xBCB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH2 0x4A0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP5 DUP5 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC35 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xC5E JUMPI POP PUSH2 0xC58 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC49CCBE SWAP1 PUSH2 0xCF4 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH32 0xC79CB6614F7BCC31F0121C4DB623A782836F42B2D8E5290A19340BDBC25032F7 SWAP1 PUSH2 0xD80 SWAP1 DUP10 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP12 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAA SWAP1 DUP4 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAA SWAP1 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDE8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xE38 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xE67 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xE96 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x66D DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV AND SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xF77 JUMPI POP PUSH2 0xF71 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND DUP3 DUP5 ADD MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 DUP2 AND PUSH1 0xE0 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x1024 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x254B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x103E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1052 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1076 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH32 0x1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F DUP9 DUP9 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x1117 JUMPI POP PUSH2 0x1111 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x1133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH2 0x11AC SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x255A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH32 0x2D6EDBED0A944A56E78D8CED0BC4794533B38938655F47C5A423559A1163B104 SWAP1 PUSH2 0x123C SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAD SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1285 SWAP1 PUSH2 0x33C PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27A9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x1305 DUP5 CALLER ADDRESS DUP6 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x604 DUP4 CALLER ADDRESS DUP5 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x132F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x1358 JUMPI POP PUSH2 0x1352 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH1 0x64 ADD DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1467 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148B SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x149E DUP6 PUSH2 0x1656 JUMP JUMPDEST POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x4A0 DUP4 DUP4 DUP4 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1584 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1619 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1619 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AB SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FC SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST POP POP POP POP POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x173F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xC98B6CEF6BCB7A4F274AB1045EAD0065D8A07DF11B545D8DC8BD25F58B39D071 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x189D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x192A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x190B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x19BF JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x19BF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A11 SWAP1 DUP3 PUSH2 0x14F3 JUMP JUMPDEST ISZERO PUSH2 0x66D JUMPI PUSH2 0x1A1E PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A7A SWAP1 DUP3 PUSH2 0x1C91 JUMP JUMPDEST ISZERO PUSH2 0x66D JUMPI PUSH2 0x1A87 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 DUP4 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP11 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1B7B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BDD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C10 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C10 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP4 DUP4 PUSH2 0x1D0A JUMP JUMPDEST PUSH2 0x1C89 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xDAD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D26 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1CE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2758 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CF7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DE2 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1D59 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D76 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1DA6 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xDAD JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2731 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E2A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E35 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E45 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1E6E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x1E79 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH2 0x1E89 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH2 0x1E99 DUP2 PUSH2 0x2746 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH2 0x1EA9 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH2 0x1EB9 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP7 PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0xE0 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH2 0x100 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1EFB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F06 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1F16 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1F26 DUP2 PUSH2 0x2746 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1F44 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F66 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F71 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F81 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1FB4 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1FC4 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FE7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FFA JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2008 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2019 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2041 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x204C DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x205C DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2082 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E45 DUP2 PUSH2 0x270A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20BF JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20E2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x20ED DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2115 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x212E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E45 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2159 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x205C DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2180 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2192 DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21BA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21DF JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x220D JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x2252 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x226D JUMPI DUP7 DUP8 REVERT JUMPDEST SWAP12 POP PUSH2 0x227B PUSH1 0x20 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP11 POP PUSH2 0x2289 PUSH1 0x40 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP10 POP PUSH2 0x2297 PUSH1 0x60 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP9 POP PUSH2 0x22A5 PUSH1 0x80 DUP15 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP8 POP PUSH2 0x22B3 PUSH1 0xA0 DUP15 ADD PUSH2 0x1DF7 JUMP JUMPDEST SWAP7 POP PUSH2 0x22C1 PUSH1 0xC0 DUP15 ADD PUSH2 0x1DF7 JUMP JUMPDEST SWAP6 POP PUSH2 0x22CF PUSH1 0xE0 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x22EE PUSH2 0x140 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD PUSH2 0x160 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BDD0813DDDB9959 PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x2737BA1020B236B4B727B922BC32B1BABA37B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x2737BA1020B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0xDAD DUP3 DUP5 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x25B2 DUP3 DUP5 MLOAD PUSH2 0x230F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x25C4 PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x25D7 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x2383 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x25EA PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x231C JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x25FD PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x231C JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x263B DUP3 DUP6 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0xD8AA0F319497 BYTE 0x2A GT PUSH7 0x79F7C2090F6939 0xC8 0xD4 0xE0 BYTE 0x2A DUP14 PUSH31 0x41D55E5351469E63A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0x416363657373436F6E74726F6C3A2063616E206F6E6C PUSH26 0x2072656E6F756E636520726F6C657320666F722073656C66A264 PUSH10 0x706673582212205BC20B TIMESTAMP REVERT 0xAD 0xEA 0xAA DUP2 SELFBALANCE ISZERO 0xBC SWAP6 PUSH16 0xC34198550BEDBB946C2A55BF2662EFA6 JUMPDEST PC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER 0xD8 0xAA 0xF BALANCE SWAP5 SWAP8 BYTE 0x2A GT PUSH7 0x79F7C2090F6939 0xC8 0xD4 0xE0 BYTE 0x2A DUP14 PUSH31 0x41D55E5351469E63A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0x0 ",
							"sourceMap": "482:10552:20:-:0;;;2100:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2240:56:20;;;;;;;;2300:24;;;;;;2329:37;-1:-1:-1;;;;;;;;;;;585:23:20;2329:13;:37::i;:::-;2370:40;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2370:13:20;:40::i;:::-;2415:30;-1:-1:-1;;;;;;;;;;;2438:6:20;2415:10;:30::i;:::-;2449:32;-1:-1:-1;;;;;;;;;;;2475:5:20;2449:10;:32::i;:::-;2100:385;;;;482:10552;;6823:196:0;6934:6;:12;;;;;;;;;;;:22;;;6911:57;;6958:9;;6941:4;;6911:57;;6934:6;6911:57;6978:6;:12;;;;;;;;;;;:22;;:34;6823:196::o;6588:110::-;6666:25;6677:4;6683:7;6666:10;:25::i;:::-;6588:110;;:::o;7025:184::-;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;6429:150:10:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:10;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;;:::o;598:104:9:-;685:10;598:104;:::o;1640:404:10:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:10;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:10;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;14:728:21:-;;;;;244:3;232:9;223:7;219:23;215:33;212:2;;;266:6;258;251:22;212:2;303:9;297:16;322:33;349:5;322:33;:::i;:::-;424:2;409:18;;403:25;374:5;;-1:-1:-1;437:35:21;403:25;437:35;:::i;:::-;543:2;528:18;;522:25;491:7;;-1:-1:-1;556:35:21;522:25;556:35;:::i;:::-;662:2;647:18;;641:25;610:7;;-1:-1:-1;675:35:21;641:25;675:35;:::i;:::-;202:540;;;;-1:-1:-1;202:540:21;;-1:-1:-1;;202:540:21:o;747:133::-;-1:-1:-1;;;;;824:31:21;;814:42;;804:2;;870:1;867;860:12;804:2;794:86;:::o;:::-;482:10552:20;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21667:21",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:21"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:21",
														"type": ""
													}
												],
												"src": "14:142:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:78:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "231:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "246:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "240:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "262:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "262:31:21"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "200:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "211:5:21",
														"type": ""
													}
												],
												"src": "161:138:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "366:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "376:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "391:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "385:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "376:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "434:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "407:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "407:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "345:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "356:5:21",
														"type": ""
													}
												],
												"src": "304:142:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "512:79:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "522:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "537:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "531:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "579:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "553:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "553:32:21"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "491:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "502:5:21",
														"type": ""
													}
												],
												"src": "451:140:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "683:315:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "729:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "738:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "746:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "731:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "731:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "731:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "704:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "713:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "700:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "700:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "725:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:32:21"
															},
															"nodeType": "YulIf",
															"src": "693:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "764:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "790:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "768:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "836:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "809:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "851:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "861:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "875:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "907:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "918:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "903:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "890:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "879:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "958:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "931:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "931:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "975:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "985:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "975:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "641:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "652:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "664:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "672:6:21",
														"type": ""
													}
												],
												"src": "596:402:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1204:898:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1251:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1260:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1268:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1253:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1225:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1234:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1221:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1221:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:3:21",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:33:21"
															},
															"nodeType": "YulIf",
															"src": "1214:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1286:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1312:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1299:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1290:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1358:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1331:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1373:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1383:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1373:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1397:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1429:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1412:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1401:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1453:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1453:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1497:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1507:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1523:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1538:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:32:21"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1527:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1605:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "1579:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1579:34:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1622:17:21",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1632:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1648:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1680:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1691:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:32:21"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "1652:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "1729:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "1704:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1746:17:21",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "1756:7:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1772:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1815:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1787:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:33:21"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "1776:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "1854:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "1829:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1871:17:21",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "1881:7:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1871:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1897:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1924:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1935:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1907:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:33:21"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1897:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1949:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1987:3:21",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1959:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:33:21"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2001:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2039:3:21",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2011:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:33:21"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2053:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2091:3:21",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2063:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:33:21"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_int24t_int24t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1106:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1117:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1129:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1137:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1145:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1153:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1161:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1169:6:21",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1177:6:21",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1185:6:21",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "1193:6:21",
														"type": ""
													}
												],
												"src": "1003:1099:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2261:671:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2308:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2317:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2325:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2310:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2310:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2310:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2282:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2291:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2278:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2303:3:21",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:33:21"
															},
															"nodeType": "YulIf",
															"src": "2271:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2343:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2369:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2356:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2347:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2415:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2388:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2430:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2440:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2454:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2486:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2497:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2482:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2469:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2458:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2537:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2510:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2510:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2564:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2580:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2612:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2623:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2595:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:32:21"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2584:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2662:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "2636:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2636:34:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2679:17:21",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2689:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2705:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2732:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2743:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2715:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2715:32:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2756:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2794:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2766:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:33:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2808:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2851:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2836:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2823:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:33:21"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "2812:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "2892:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2865:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2909:17:21",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "2919:7:21"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2187:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2198:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2210:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2218:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2226:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2234:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2242:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2250:6:21",
														"type": ""
													}
												],
												"src": "2107:825:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:366:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3087:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3096:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3104:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3089:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3062:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3058:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:32:21"
															},
															"nodeType": "YulIf",
															"src": "3051:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3122:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3148:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3135:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3126:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3194:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3167:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3209:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3219:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3233:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3248:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3237:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3316:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3289:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3289:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3333:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3343:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3333:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3359:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3386:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3397:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3382:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3382:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3369:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2991:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3002:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3014:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3022:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3030:6:21",
														"type": ""
													}
												],
												"src": "2937:470:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3552:850:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3599:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3608:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3616:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3601:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3601:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3601:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3573:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3582:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3594:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:33:21"
															},
															"nodeType": "YulIf",
															"src": "3562:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3634:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3647:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3638:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3706:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3679:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3721:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3731:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3721:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3745:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3777:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3788:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3773:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3760:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3749:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3801:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3801:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3845:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3855:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3871:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3898:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3909:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3894:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3894:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3881:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3922:46:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3964:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3949:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3936:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3936:32:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3926:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:28:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3987:18:21",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3981:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4032:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4041:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4049:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4034:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4034:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4034:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4020:6:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4028:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4017:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:14:21"
															},
															"nodeType": "YulIf",
															"src": "4014:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4081:9:21"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4092:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:22:21"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4071:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4147:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4156:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4164:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4149:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4149:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4149:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4126:2:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4130:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4122:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4122:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4137:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4118:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:35:21"
															},
															"nodeType": "YulIf",
															"src": "4108:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4182:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4209:2:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4196:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:16:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4186:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4239:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4248:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4256:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4241:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4241:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4241:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4227:6:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4235:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4224:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:14:21"
															},
															"nodeType": "YulIf",
															"src": "4221:2:21"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4315:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4324:6:21"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4332:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4317:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4317:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4317:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4288:2:21"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4292:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4284:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4284:15:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4280:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4280:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4306:7:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4277:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:37:21"
															},
															"nodeType": "YulIf",
															"src": "4274:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4350:21:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4364:2:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4368:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4360:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:11:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4380:16:21",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4390:6:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3486:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3497:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3509:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3517:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3525:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3533:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3541:6:21",
														"type": ""
													}
												],
												"src": "3412:990:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:418:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4575:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4592:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4577:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4577:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4577:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4549:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4558:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:33:21"
															},
															"nodeType": "YulIf",
															"src": "4538:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4610:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4636:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4623:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4614:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4682:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4655:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4655:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4655:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4697:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4707:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4721:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4753:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4764:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4749:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4749:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4736:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4736:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4725:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4804:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4777:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:35:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4821:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4831:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4847:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4857:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4898:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4925:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4936:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4921:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4908:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:32:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4481:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4493:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4501:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4509:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4517:6:21",
														"type": ""
													}
												],
												"src": "4407:539:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5021:120:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5067:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5076:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5084:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5069:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5069:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5069:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5051:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5038:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5038:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5063:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:32:21"
															},
															"nodeType": "YulIf",
															"src": "5031:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5102:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5125:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5112:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4987:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4998:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5010:6:21",
														"type": ""
													}
												],
												"src": "4951:190:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5233:240:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5288:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5296:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5281:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5254:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5246:32:21"
															},
															"nodeType": "YulIf",
															"src": "5243:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5337:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5324:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5324:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5356:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5369:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5360:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5437:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5410:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5410:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5452:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5462:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5191:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5202:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5214:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5222:6:21",
														"type": ""
													}
												],
												"src": "5146:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5565:171:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5611:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5620:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5628:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5613:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5613:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5613:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5586:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5595:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5582:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5582:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5578:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:32:21"
															},
															"nodeType": "YulIf",
															"src": "5575:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5646:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5669:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5656:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5688:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5726:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5698:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5688:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5523:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5534:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5546:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5554:6:21",
														"type": ""
													}
												],
												"src": "5478:258:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5856:270:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5902:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5911:6:21"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5919:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5904:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5904:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5877:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5873:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5873:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5898:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5869:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:32:21"
															},
															"nodeType": "YulIf",
															"src": "5866:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5937:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5956:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5950:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5941:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6002:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "5975:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5975:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5975:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6017:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6027:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6041:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6051:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:25:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6085:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6105:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6116:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6101:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6101:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6095:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:25:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5806:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5817:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5829:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5837:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5845:6:21",
														"type": ""
													}
												],
												"src": "5741:385:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6201:120:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6247:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6256:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6264:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6249:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6249:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6249:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6222:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6231:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:32:21"
															},
															"nodeType": "YulIf",
															"src": "6211:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6282:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6305:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6292:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6167:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6178:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6190:6:21",
														"type": ""
													}
												],
												"src": "6131:190:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6407:113:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6453:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6470:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6455:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6455:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6428:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:32:21"
															},
															"nodeType": "YulIf",
															"src": "6417:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6504:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6498:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6373:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6384:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6396:6:21",
														"type": ""
													}
												],
												"src": "6326:194:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6612:240:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6658:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6667:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6675:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6660:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6660:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6660:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6633:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:32:21"
															},
															"nodeType": "YulIf",
															"src": "6622:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6693:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6716:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6703:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6735:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6765:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6776:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6761:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6761:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6748:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6739:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6816:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6789:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6789:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6831:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6841:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6570:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6581:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6593:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6601:6:21",
														"type": ""
													}
												],
												"src": "6525:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:277:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6987:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6996:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7004:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6989:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6989:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6962:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6983:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6954:32:21"
															},
															"nodeType": "YulIf",
															"src": "6951:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7045:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7032:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7064:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7105:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7077:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7068:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7162:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "7171:6:21"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "7179:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7164:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7164:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7164:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7131:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7152:5:21"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7145:6:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7145:13:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7138:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7138:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7128:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7128:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7121:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:40:21"
															},
															"nodeType": "YulIf",
															"src": "7118:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7207:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7197:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6899:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6910:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6922:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6930:6:21",
														"type": ""
													}
												],
												"src": "6857:361:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7344:343:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7391:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "7400:6:21"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "7408:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7393:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7393:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7393:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7365:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7374:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7361:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7361:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7386:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7357:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:33:21"
															},
															"nodeType": "YulIf",
															"src": "7354:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7426:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7449:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7436:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7436:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7426:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7468:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7498:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7509:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7494:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7481:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7472:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7549:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "7522:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7522:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7564:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7574:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7588:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7615:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7626:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7611:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7611:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7598:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7639:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7666:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7677:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7662:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7649:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:32:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7639:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7286:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7297:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7309:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7317:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7325:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7333:6:21",
														"type": ""
													}
												],
												"src": "7223:464:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7824:315:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7871:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "7880:6:21"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "7888:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7873:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7873:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7873:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7845:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7854:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7841:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7866:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7837:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7837:33:21"
															},
															"nodeType": "YulIf",
															"src": "7834:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7906:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7922:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7916:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7941:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7964:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7975:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7960:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7960:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7954:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7954:25:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7945:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8015:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "7988:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7988:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7988:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8030:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8040:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8054:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8064:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:25:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8098:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8118:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8129:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8114:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8114:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8108:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:25:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7766:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7777:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7789:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7797:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7805:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7813:6:21",
														"type": ""
													}
												],
												"src": "7692:447:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8242:157:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8288:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "8297:6:21"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "8305:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8290:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8290:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8290:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8263:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8272:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8259:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8259:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8284:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8255:32:21"
															},
															"nodeType": "YulIf",
															"src": "8252:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8323:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8339:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8333:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8358:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8378:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8389:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8374:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8368:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:25:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8358:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8200:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8211:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8223:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8231:6:21",
														"type": ""
													}
												],
												"src": "8144:255:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8508:222:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8554:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8563:6:21"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8571:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8556:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8556:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8556:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8529:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8538:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8525:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8525:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:32:21"
															},
															"nodeType": "YulIf",
															"src": "8518:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8589:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8612:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8599:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8589:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8631:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8658:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8654:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8654:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8641:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8641:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8682:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8720:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8705:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8692:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8458:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8469:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8481:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8489:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8497:6:21",
														"type": ""
													}
												],
												"src": "8404:326:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8873:326:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8920:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8929:6:21"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8937:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8922:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8922:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8922:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8894:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8903:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8890:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8915:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8886:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:33:21"
															},
															"nodeType": "YulIf",
															"src": "8883:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8955:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8978:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8965:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8955:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8997:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9024:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9035:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9007:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9007:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9048:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9075:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9086:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9071:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9071:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9058:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9099:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9126:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9137:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9122:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9109:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:32:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9099:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9150:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9177:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9188:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9173:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9173:19:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9160:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:33:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8807:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8818:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8830:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8838:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8846:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8854:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8862:6:21",
														"type": ""
													}
												],
												"src": "8735:464:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9468:960:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9515:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "9524:6:21"
																				},
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "9532:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9517:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9517:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9517:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9489:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9498:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9485:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9510:3:21",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:33:21"
															},
															"nodeType": "YulIf",
															"src": "9478:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9550:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9569:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9563:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9563:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9554:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9649:26:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "9658:6:21"
																				},
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "9666:6:21"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9651:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9651:22:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9651:22:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9601:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9612:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9619:26:21",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9608:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9608:38:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9598:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9598:49:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:57:21"
															},
															"nodeType": "YulIf",
															"src": "9588:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9684:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9694:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9708:61:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9754:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9765:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9750:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9750:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9718:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:51:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9708:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9778:61:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9824:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9835:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9820:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9820:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9788:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:51:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9778:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9848:61:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9905:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9890:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9858:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:51:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:61:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9963:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9974:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9928:30:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9928:51:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9988:60:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10043:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9998:29:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9998:50:21"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10057:60:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10112:3:21",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10097:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10067:29:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10067:50:21"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "10057:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10126:62:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10172:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10183:3:21",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10168:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10168:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10136:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:52:21"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "10126:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10197:36:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10217:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10228:3:21",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10213:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10213:19:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10207:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10207:26:21"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "10197:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10242:36:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10262:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10273:3:21",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10258:19:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10252:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:26:21"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "10242:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10287:63:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10334:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10345:3:21",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10330:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10298:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:52:21"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "10287:7:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10359:63:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10406:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10417:3:21",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10370:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:52:21"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nodeType": "YulIdentifier",
																	"src": "10359:7:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9344:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9355:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9367:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9375:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9383:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9391:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9399:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9407:6:21",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9415:6:21",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "9423:6:21",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "9431:6:21",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "9439:6:21",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "9447:7:21",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "9456:7:21",
														"type": ""
													}
												],
												"src": "9204:1224:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:60:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10496:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10505:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10520:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10525:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10516:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10516:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10529:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10512:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10512:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10501:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10501:31:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10489:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10489:44:21"
														}
													]
												},
												"name": "abi_encode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10463:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10470:3:21",
														"type": ""
													}
												],
												"src": "10433:106:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10588:49:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10605:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10621:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10624:5:21"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "10610:10:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10610:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10598:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10598:33:21"
														}
													]
												},
												"name": "abi_encode_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10572:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10579:3:21",
														"type": ""
													}
												],
												"src": "10544:93:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:522:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10721:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10739:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10744:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10735:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10735:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10731:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10725:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10766:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10781:5:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10775:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10775:12:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10789:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10759:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10759:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10759:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10813:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10818:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10809:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10809:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10839:5:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10846:4:21",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10835:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10835:16:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10829:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10829:23:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10854:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10825:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10802:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10802:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10802:56:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10878:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10883:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10874:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10874:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10904:5:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10911:4:21",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10900:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10900:16:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10894:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10894:23:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10919:8:21",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10890:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10890:38:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10867:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10867:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10867:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10949:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10954:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10945:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10975:5:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10982:4:21",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10971:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10971:16:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10965:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10965:23:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10990:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10961:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10961:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10938:56:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11014:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11019:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11010:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11010:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11036:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11043:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11032:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11032:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11026:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11026:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11003:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11003:47:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11070:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11075:4:21",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11066:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11066:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11092:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11099:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11088:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11088:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11082:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11082:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11059:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11059:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11059:47:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11131:4:21",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11122:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11122:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11148:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11155:4:21",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11144:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11144:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11138:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11138:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11115:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11115:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11115:47:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11182:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:4:21",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11178:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11178:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "11208:5:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11215:4:21",
																								"type": "",
																								"value": "0xe0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11204:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11204:16:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "11198:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11198:23:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11223:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11194:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11194:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11171:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:56:21"
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10695:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10702:3:21",
														"type": ""
													}
												],
												"src": "10642:591:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11283:49:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11300:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11309:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11316:8:21",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11305:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11305:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11293:33:21"
														}
													]
												},
												"name": "abi_encode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11267:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11274:3:21",
														"type": ""
													}
												],
												"src": "11238:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11438:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11448:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11460:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11471:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11456:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11448:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11490:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11505:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11521:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11526:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11517:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11517:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11530:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11513:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11513:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11501:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11501:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11407:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11418:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11429:4:21",
														"type": ""
													}
												],
												"src": "11337:203:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11748:351:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11770:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11781:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11766:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11758:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11794:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11812:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11817:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11808:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11808:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11821:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11804:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11804:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11798:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11839:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11854:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11862:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11850:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11850:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11832:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11832:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11886:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11897:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11882:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11882:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11906:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11914:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11902:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11938:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11949:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11934:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11934:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11958:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11966:8:21",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11954:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11954:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11927:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11927:49:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11927:49:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12007:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11992:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11992:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "12026:6:21"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "12012:10:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:49:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:49:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12054:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12065:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12050:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12050:19:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12082:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "12085:6:21"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "12071:10:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12071:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12043:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12043:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12043:50:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24_t_int24_t_int24__to_t_address_t_address_t_uint24_t_int24_t_int24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11685:9:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11696:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11704:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11712:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11720:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11728:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11739:4:21",
														"type": ""
													}
												],
												"src": "11545:554:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12261:218:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12271:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12283:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12294:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12271:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12306:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12324:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12329:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12320:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12320:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12333:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12316:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12316:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12310:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12351:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12366:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12374:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12362:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12362:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12344:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12344:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12344:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12398:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12409:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12394:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12394:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12418:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12426:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12387:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12387:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12461:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12446:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12466:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12439:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12439:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12214:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12225:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12233:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12241:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12252:4:21",
														"type": ""
													}
												],
												"src": "12104:375:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12669:262:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12679:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12691:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12702:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12687:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12687:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12679:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12715:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12733:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12738:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12729:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12729:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12742:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12725:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12719:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12760:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12775:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12783:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12771:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12771:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12753:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12753:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12753:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12807:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12818:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12803:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12827:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12835:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12796:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12796:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12859:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12870:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12855:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12875:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12848:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12848:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12848:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12902:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12913:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12898:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12898:18:21"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12918:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12891:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12891:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12614:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12625:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12633:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12641:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12649:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12660:4:21",
														"type": ""
													}
												],
												"src": "12484:447:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13031:92:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13041:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13053:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13064:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13049:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13041:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13083:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "13108:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13101:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13101:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13094:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13076:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13076:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13076:41:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13000:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13011:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13022:4:21",
														"type": ""
													}
												],
												"src": "12936:187:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13229:76:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13239:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13251:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13247:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13247:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13239:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13281:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13292:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13274:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13274:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13274:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13198:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13209:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13220:4:21",
														"type": ""
													}
												],
												"src": "13128:177:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13409:103:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13419:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13431:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13442:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13427:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13419:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13461:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13476:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13488:3:21",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13493:10:21",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "13484:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13484:20:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13472:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13472:33:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13454:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13454:52:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13454:52:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13378:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13389:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13400:4:21",
														"type": ""
													}
												],
												"src": "13310:202:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13654:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13664:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13676:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13687:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13672:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13672:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13664:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13706:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13721:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13737:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13742:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13733:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13733:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13746:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13729:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13729:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13717:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13717:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13699:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13699:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13699:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1729__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13623:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13634:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13645:4:21",
														"type": ""
													}
												],
												"src": "13517:239:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13882:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13892:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13904:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13915:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13900:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13900:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13892:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13934:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13949:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13965:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13970:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13961:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13961:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13974:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13957:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13957:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13945:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13945:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13927:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13927:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13927:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$1886__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13851:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13862:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13873:4:21",
														"type": ""
													}
												],
												"src": "13761:223:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14163:158:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14180:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14191:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14173:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14173:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14214:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14225:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14230:1:21",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:29:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:29:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14252:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14263:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14248:18:21"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14268:11:21",
																		"type": "",
																		"value": "Not Owned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14241:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14241:39:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14241:39:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14289:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14301:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14312:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14297:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14289:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10a1711e2cc56296c925a8fee2383475d5618b7ba5c6e9eefba3914e4d33600e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14140:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14154:4:21",
														"type": ""
													}
												],
												"src": "13989:332:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14500:169:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14517:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14528:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14510:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14510:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14510:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14562:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14547:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14547:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14567:2:21",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14540:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14540:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14540:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14590:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14601:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14586:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14586:18:21"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14606:21:21",
																		"type": "",
																		"value": "Not AdminOrExecutor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14579:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14579:49:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14579:49:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14637:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14649:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14660:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14645:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14645:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14637:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2da0c8b10c8cd2f201bc2961a0ac20ee9174533f73329d1e80a590d4a5662fb4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14477:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14491:4:21",
														"type": ""
													}
												],
												"src": "14326:343:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14848:158:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14865:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14876:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14858:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14858:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14858:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14899:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14910:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14895:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14895:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14915:1:21",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14888:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14888:29:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14888:29:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14937:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14948:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14933:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14933:18:21"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14953:11:21",
																		"type": "",
																		"value": "Not Admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14926:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14926:39:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14926:39:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14974:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14986:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14997:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14982:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14982:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14974:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14825:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14839:4:21",
														"type": ""
													}
												],
												"src": "14674:332:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15174:411:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15184:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15196:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15207:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15192:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15184:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15227:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15244:6:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15238:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15238:13:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15220:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15220:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15220:32:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15272:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15283:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15268:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15268:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "15304:6:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15312:4:21",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15300:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15300:17:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "15294:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15294:24:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15328:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15333:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15324:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15324:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15337:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15320:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15320:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15290:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15290:50:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15261:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15261:80:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15261:80:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15350:44:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15380:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15388:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15376:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15376:17:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15370:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15370:24:21"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "15354:12:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15403:44:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15413:34:21",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15407:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15467:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15478:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15463:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15463:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "15489:12:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15503:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15485:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15485:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15456:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15456:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15527:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15538:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15523:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15523:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "15559:6:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15567:4:21",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15555:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15555:17:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "15549:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15549:24:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15575:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15545:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15545:33:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15516:63:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15516:63:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_CollectParams_$1712_memory_ptr__to_t_struct$_CollectParams_$1712_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15143:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15154:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15165:4:21",
														"type": ""
													}
												],
												"src": "15011:574:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15773:377:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15783:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15795:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15806:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15791:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15791:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15783:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15826:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15843:6:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15837:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15837:13:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15819:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15819:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15819:32:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15871:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15882:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15867:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15867:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "15903:6:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15911:4:21",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15899:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15899:17:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "15893:5:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15893:24:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15919:34:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15889:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15889:65:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15860:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:95:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15860:95:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15975:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15986:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15971:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15971:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16003:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16011:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15999:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15999:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15993:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15993:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15964:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15964:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15964:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16038:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16049:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16034:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16034:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16066:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16074:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16062:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16062:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16056:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16056:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16027:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16027:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16027:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16101:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16112:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16097:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16097:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16129:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16137:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16125:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16125:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16119:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16119:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16090:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16090:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16090:54:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1693_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1693_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15742:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15753:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15764:4:21",
														"type": ""
													}
												],
												"src": "15590:560:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16336:114:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16346:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16358:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16369:3:21",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16354:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16354:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16346:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16426:6:21"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16434:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "16382:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16382:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16382:62:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$1814_memory_ptr__to_t_struct$_ExactInputSingleParams_$1814_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16305:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16316:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16327:4:21",
														"type": ""
													}
												],
												"src": "16155:295:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16638:114:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16648:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16660:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16671:3:21",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16656:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16656:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16648:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16728:6:21"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16736:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "16684:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16684:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16684:62:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$1858_memory_ptr__to_t_struct$_ExactOutputSingleParams_$1858_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16607:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16618:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16629:4:21",
														"type": ""
													}
												],
												"src": "16455:297:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16940:399:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16950:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16962:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16973:3:21",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16958:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16958:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16950:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16993:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17010:6:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17004:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17004:13:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16986:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16986:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16986:32:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17038:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17049:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17034:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17034:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17066:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17074:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17062:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17062:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17056:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17056:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17027:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17027:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17027:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17101:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17112:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17097:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17097:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17129:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17137:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17125:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17125:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17119:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17119:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17090:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17090:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17090:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17164:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17175:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17160:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17160:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17192:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17200:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17188:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17188:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17182:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17182:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17153:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17153:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17153:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17227:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17238:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17223:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17223:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17255:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17263:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17251:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17251:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17245:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17245:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17216:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17216:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17216:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17290:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17301:4:21",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17286:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17286:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17318:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17326:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17314:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17314:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17308:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17308:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17279:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17279:54:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1670_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1670_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16909:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16920:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16931:4:21",
														"type": ""
													}
												],
												"src": "16757:582:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17501:1077:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17511:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17523:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17534:3:21",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17519:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17519:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17511:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17574:6:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17568:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17568:13:21"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17583:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "17547:20:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17547:46:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17547:46:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17602:44:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17632:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17640:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17628:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17628:17:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17622:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17622:24:21"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "17606:12:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "17676:12:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17694:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17705:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17690:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17690:20:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "17655:20:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17655:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17655:56:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17720:46:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17752:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17760:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17748:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17748:17:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17742:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17742:24:21"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "17724:14:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "17795:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17815:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17826:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17811:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17811:20:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "17775:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17775:57:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17775:57:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17841:46:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17873:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17881:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17869:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17869:17:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17863:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17863:24:21"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "17845:14:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "17915:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17935:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17946:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17931:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17931:20:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "17896:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17896:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17896:56:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17961:46:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17993:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18001:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17989:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17989:17:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17983:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17983:24:21"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "17965:14:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "18035:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18055:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18066:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18051:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18051:20:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "18016:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18016:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18016:56:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18092:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18103:4:21",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18088:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18088:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "18120:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18128:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18116:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18116:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18110:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18110:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18081:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18081:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18081:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18155:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18166:4:21",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18151:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18151:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "18183:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18191:4:21",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18179:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18179:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18173:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18173:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18144:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18144:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18144:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18218:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18229:4:21",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18214:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18214:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "18246:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18254:4:21",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18242:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18242:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18236:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18236:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18207:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18207:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18207:54:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18270:16:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18280:6:21",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18274:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18306:9:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18317:2:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18302:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18302:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "18332:6:21"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "18340:2:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18328:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18328:15:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18322:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18322:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18295:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18295:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18295:50:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18354:16:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18364:6:21",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "18358:2:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18379:44:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18411:6:21"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "18419:2:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18407:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18407:15:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18401:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18401:22:21"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "18383:14:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "18453:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18473:9:21"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "18484:2:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18469:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18469:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "18432:20:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18432:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18432:56:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18497:16:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18507:6:21",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "18501:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18533:9:21"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "18544:2:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18529:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18529:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "18559:6:21"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "18567:2:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18555:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18555:15:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18549:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18549:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18522:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18522:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18522:50:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1643_memory_ptr__to_t_struct$_MintParams_$1643_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17470:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17481:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17492:4:21",
														"type": ""
													}
												],
												"src": "17344:1234:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18740:203:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18750:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18762:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18773:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18758:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18758:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18750:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18792:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18807:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18815:34:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18803:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18803:47:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18785:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18785:66:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18785:66:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18871:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18882:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18867:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18867:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18887:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18860:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18860:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18860:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18914:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18925:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18910:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18910:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18930:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18903:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18903:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18903:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18693:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18704:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18712:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18720:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18731:4:21",
														"type": ""
													}
												],
												"src": "18583:360:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19049:76:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19059:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19071:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19082:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19067:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19067:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19059:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19101:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19112:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19094:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19094:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19094:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19018:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19029:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19040:4:21",
														"type": ""
													}
												],
												"src": "18948:177:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19313:277:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19323:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19335:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19346:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19331:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19331:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19323:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19366:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19377:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19359:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19359:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19359:25:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19393:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19411:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19416:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19407:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19407:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19420:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19403:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19403:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19397:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19442:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19453:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19438:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19438:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19462:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19470:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19458:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19431:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19431:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19431:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19494:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19505:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19490:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19490:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "19514:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19522:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19510:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19510:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19483:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19483:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19483:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19546:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19557:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19542:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19542:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "19566:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19574:8:21",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19562:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19562:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19535:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19535:49:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19535:49:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint24__to_t_uint256_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19258:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19269:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19277:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19285:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19293:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19304:4:21",
														"type": ""
													}
												],
												"src": "19130:460:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19780:247:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19790:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19802:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19813:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19798:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19798:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19790:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19833:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19844:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19826:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19826:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19826:25:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19871:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19882:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19867:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19867:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19891:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19899:34:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19887:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19887:47:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19860:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19860:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19860:75:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19955:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19966:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19951:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19951:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19971:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19944:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19944:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19944:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19998:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20009:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19994:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19994:18:21"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20014:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19987:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19987:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19987:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19725:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19736:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19744:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19752:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19760:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19771:4:21",
														"type": ""
													}
												],
												"src": "19595:432:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20161:119:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20171:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20183:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20194:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20179:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20179:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20171:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20213:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20224:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20206:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20206:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20206:25:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20251:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20262:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20247:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20247:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20267:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20240:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20240:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20240:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20122:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20133:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20141:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20152:4:21",
														"type": ""
													}
												],
												"src": "20032:248:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20464:222:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20474:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20486:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20497:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20482:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20482:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20474:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20517:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20528:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20510:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20510:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20510:25:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20555:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20566:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20551:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20551:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20571:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20544:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20544:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20544:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20598:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20609:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20594:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20594:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20614:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20587:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20587:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20587:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20641:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20652:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20637:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20637:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "20671:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20664:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20664:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20657:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20657:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20630:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20630:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20630:50:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20409:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20420:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20428:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20436:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20444:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20455:4:21",
														"type": ""
													}
												],
												"src": "20285:401:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20876:247:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20886:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20898:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20909:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20894:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20894:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20886:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20929:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20940:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20922:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20922:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20922:25:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20967:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20978:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20963:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20963:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20983:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20956:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20956:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20956:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21010:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21021:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21006:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21006:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21026:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20999:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20999:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20999:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21053:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21064:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21049:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21049:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "21073:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21081:34:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "21069:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21069:47:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21042:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21042:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21042:75:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint128__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20821:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20832:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20840:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20848:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20856:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20867:4:21",
														"type": ""
													}
												],
												"src": "20691:432:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21175:86:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21239:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21248:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21251:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21241:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21241:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21241:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21198:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21209:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21224:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21229:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "21220:3:21"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21220:11:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21233:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21216:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21216:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21205:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21205:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21195:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21195:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21188:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21188:50:21"
															},
															"nodeType": "YulIf",
															"src": "21185:2:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21164:5:21",
														"type": ""
													}
												],
												"src": "21128:133:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21311:75:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21364:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21373:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21376:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21366:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21366:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21366:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21334:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21352:1:21",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21355:5:21"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "21341:10:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21341:20:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21331:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21331:31:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21324:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21324:39:21"
															},
															"nodeType": "YulIf",
															"src": "21321:2:21"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21300:5:21",
														"type": ""
													}
												],
												"src": "21266:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21438:101:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21517:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21526:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21529:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21519:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21519:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21519:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21461:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21472:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21479:34:21",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21468:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21468:46:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21458:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21458:57:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21451:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21451:65:21"
															},
															"nodeType": "YulIf",
															"src": "21448:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21427:5:21",
														"type": ""
													}
												],
												"src": "21391:148:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21590:75:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21643:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21652:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21655:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21645:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21645:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21645:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21613:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21624:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21631:8:21",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21620:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21620:20:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21610:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21610:31:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21603:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21603:39:21"
															},
															"nodeType": "YulIf",
															"src": "21600:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21579:5:21",
														"type": ""
													}
												],
												"src": "21544:121:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n    function abi_decode_t_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint24t_int24t_int24t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_uint24(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_t_int24(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_t_int24(value_4)\n        value4 := value_4\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        value8 := calldataload(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_uint160(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_uint24(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let value_3 := calldataload(add(headStart, 160))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value4, value4) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value4, value4) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value4, value4) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := mload(headStart)\n        validator_revert_t_uint128(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_uint128(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_t_uint128(value)\n        value1 := value\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(value6, value6) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(value6, value6) }\n        value0 := value\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_t_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_t_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_t_uint128_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := mload(add(headStart, 288))\n        value10 := abi_decode_t_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_t_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_int24(value, pos)\n    {\n        mstore(pos, signextend(2, value))\n    }\n    function abi_encode_t_struct$_ExactInputSingleParams(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), 0xffffff))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n        mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n    }\n    function abi_encode_t_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24_t_int24_t_int24__to_t_address_t_address_t_uint24_t_int24_t_int24__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n        mstore(add(headStart, 96), signextend(2, value3))\n        mstore(add(headStart, 128), signextend(2, value4))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$1886__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_10a1711e2cc56296c925a8fee2383475d5618b7ba5c6e9eefba3914e4d33600e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not Owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2da0c8b10c8cd2f201bc2961a0ac20ee9174533f73329d1e80a590d4a5662fb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not AdminOrExecutor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_CollectParams_$1712_memory_ptr__to_t_struct$_CollectParams_$1712_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n    }\n    function abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1693_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1693_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$1814_memory_ptr__to_t_struct$_ExactInputSingleParams_$1814_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_t_struct$_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$1858_memory_ptr__to_t_struct$_ExactOutputSingleParams_$1858_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_t_struct$_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1670_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1670_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n    }\n    function abi_encode_tuple_t_struct$_MintParams_$1643_memory_ptr__to_t_struct$_MintParams_$1643_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 352)\n        abi_encode_t_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_t_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_t_uint24(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_t_int24(memberValue0_2, add(headStart, 0x60))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_t_int24(memberValue0_3, add(headStart, 0x80))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_t_address(memberValue0_4, add(headStart, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n    }\n    function abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint24__to_t_uint256_t_address_t_address_t_uint24__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint128__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_int24(value)\n    {\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function validator_revert_t_uint128(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_uint24(value)\n    {\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2174": [
									{
										"length": 32,
										"start": 1460
									},
									{
										"length": 32,
										"start": 1503
									},
									{
										"length": 32,
										"start": 1993
									},
									{
										"length": 32,
										"start": 2282
									},
									{
										"length": 32,
										"start": 3263
									},
									{
										"length": 32,
										"start": 3599
									},
									{
										"length": 32,
										"start": 3646
									},
									{
										"length": 32,
										"start": 3858
									},
									{
										"length": 32,
										"start": 4471
									},
									{
										"length": 32,
										"start": 5103
									},
									{
										"length": 32,
										"start": 5729
									}
								],
								"2176": [
									{
										"length": 32,
										"start": 2625
									},
									{
										"length": 32,
										"start": 2897
									},
									{
										"length": 32,
										"start": 2940
									},
									{
										"length": 32,
										"start": 3693
									},
									{
										"length": 32,
										"start": 3740
									},
									{
										"length": 32,
										"start": 4079
									},
									{
										"length": 32,
										"start": 4271
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E5F5977 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB4580507 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xDCE008AF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xDD37019D EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x42E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xB4580507 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xC691B0A1 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3D2 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xA8243558 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x38D JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8E5F5977 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x32E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4C8C7314 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4C8C7314 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x57706E74 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x7D42C461 EQ PUSH2 0x2E8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x3A483CB0 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3EF4C3D4 EQ PUSH2 0x2A7 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1C8C9980 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1C8C9980 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x25EB6E6F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x260 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7BD0265 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xD71BDC3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x205 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x205 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x205 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x211C JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP3 SWAP2 SWAP1 PUSH2 0x26BB JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x321 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x341 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x205 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x321 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x202C JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x46B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A0 DUP4 DUP4 DUP4 PUSH2 0x1508 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP5 PUSH2 0x1656 JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH2 0x527 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x238C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x5D9 DUP5 PUSH32 0x0 DUP5 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x604 DUP4 PUSH32 0x0 DUP4 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x628 SWAP1 PUSH2 0x33C PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x277A PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0x19F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x679 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2819 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6ED PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x710 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x1 DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x776 JUMPI PUSH2 0x755 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH2 0x794 JUMPI ADDRESS PUSH2 0x796 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x7FE SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH32 0xEAA34316C1AC0AC2B8445632FEF75DAD91F846CC69C40A558CCFD6E5700BB79A SWAP1 PUSH2 0x88A SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x923 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x23DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x9C9 JUMPI POP PUSH2 0x9C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND DUP3 DUP5 ADD MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 DUP2 AND PUSH1 0xE0 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0xA76 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x254B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH32 0x1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F DUP9 DUP9 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xB76 DUP5 PUSH32 0x0 DUP5 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x604 DUP4 PUSH32 0x0 DUP4 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0xBCB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH2 0x4A0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP5 DUP5 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC35 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xC5E JUMPI POP PUSH2 0xC58 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC49CCBE SWAP1 PUSH2 0xCF4 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH32 0xC79CB6614F7BCC31F0121C4DB623A782836F42B2D8E5290A19340BDBC25032F7 SWAP1 PUSH2 0xD80 SWAP1 DUP10 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP12 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAA SWAP1 DUP4 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAA SWAP1 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDE8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xE38 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xE67 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xE96 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x66D DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV AND SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0xF77 JUMPI POP PUSH2 0xF71 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND DUP3 DUP5 ADD MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 DUP2 AND PUSH1 0xE0 DUP4 ADD MSTORE SWAP2 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x1024 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x254B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x103E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1052 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1076 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH32 0x1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F DUP9 DUP9 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x1117 JUMPI POP PUSH2 0x1111 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x1133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH2 0x11AC SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x255A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH32 0x2D6EDBED0A944A56E78D8CED0BC4794533B38938655F47C5A423559A1163B104 SWAP1 PUSH2 0x123C SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDAD SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1285 SWAP1 PUSH2 0x33C PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27A9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x1305 DUP5 CALLER ADDRESS DUP6 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x604 DUP4 CALLER ADDRESS DUP5 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x132F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x1358 JUMPI POP PUSH2 0x1352 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH1 0x64 ADD DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1467 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148B SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x149E DUP6 PUSH2 0x1656 JUMP JUMPDEST POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDB3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x4A0 DUP4 DUP4 DUP4 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1584 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1619 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1619 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AB SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FC SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST POP POP POP POP POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x173F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xC98B6CEF6BCB7A4F274AB1045EAD0065D8A07DF11B545D8DC8BD25F58B39D071 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x189D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x192A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x190B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x19BF JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x19BF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A11 SWAP1 DUP3 PUSH2 0x14F3 JUMP JUMPDEST ISZERO PUSH2 0x66D JUMPI PUSH2 0x1A1E PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A7A SWAP1 DUP3 PUSH2 0x1C91 JUMP JUMPDEST ISZERO PUSH2 0x66D JUMPI PUSH2 0x1A87 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 DUP4 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP11 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1B7B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BDD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C10 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C10 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP4 DUP4 PUSH2 0x1D0A JUMP JUMPDEST PUSH2 0x1C89 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xDAD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D26 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1CE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2758 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CF7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DE2 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1D59 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D76 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1DA6 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xDAD JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2731 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x570 DUP2 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E2A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E35 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E45 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1E6E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x1E79 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH2 0x1E89 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH2 0x1E99 DUP2 PUSH2 0x2746 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH2 0x1EA9 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH2 0x1EB9 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP7 PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0xE0 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH2 0x100 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1EFB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F06 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1F16 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1F26 DUP2 PUSH2 0x2746 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1F44 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F66 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F71 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F81 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1FB4 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1FC4 DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FE7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FFA JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2008 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2019 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2041 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x204C DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x205C DUP2 PUSH2 0x270A JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2082 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E45 DUP2 PUSH2 0x270A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20BF JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20E2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x20ED DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2115 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x212E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E45 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2159 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x205C DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2180 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2192 DUP2 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21BA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21DF JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x220D JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x2252 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x226D JUMPI DUP7 DUP8 REVERT JUMPDEST SWAP12 POP PUSH2 0x227B PUSH1 0x20 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP11 POP PUSH2 0x2289 PUSH1 0x40 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP10 POP PUSH2 0x2297 PUSH1 0x60 DUP15 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP9 POP PUSH2 0x22A5 PUSH1 0x80 DUP15 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP8 POP PUSH2 0x22B3 PUSH1 0xA0 DUP15 ADD PUSH2 0x1DF7 JUMP JUMPDEST SWAP7 POP PUSH2 0x22C1 PUSH1 0xC0 DUP15 ADD PUSH2 0x1DF7 JUMP JUMPDEST SWAP6 POP PUSH2 0x22CF PUSH1 0xE0 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x22EE PUSH2 0x140 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD PUSH2 0x160 DUP15 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BDD0813DDDB9959 PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x2737BA1020B236B4B727B922BC32B1BABA37B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x2737BA1020B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0xDAD DUP3 DUP5 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x25B2 DUP3 DUP5 MLOAD PUSH2 0x230F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x25C4 PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x25D7 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x2383 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x25EA PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x231C JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x25FD PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x231C JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x263B DUP3 DUP6 ADD DUP3 PUSH2 0x230F JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x271F JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0xD8AA0F319497 BYTE 0x2A GT PUSH7 0x79F7C2090F6939 0xC8 0xD4 0xE0 BYTE 0x2A DUP14 PUSH31 0x41D55E5351469E63A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0x416363657373436F6E74726F6C3A2063616E206F6E6C PUSH26 0x2072656E6F756E636520726F6C657320666F722073656C66A264 PUSH10 0x706673582212205BC20B TIMESTAMP REVERT 0xAD 0xEA 0xAA DUP2 SELFBALANCE ISZERO 0xBC SWAP6 PUSH16 0xC34198550BEDBB946C2A55BF2662EFA6 JUMPDEST PC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "482:10552:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3640:136;;;;;;:::i;:::-;;:::i;:::-;;2670:184;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3511:126::-;;;;;;:::i;:::-;;:::i;4282:112:0:-;;;;;;:::i;:::-;;:::i;5136:282:20:-;;;;;;:::i;:::-;;:::i;4644:223:0:-;;;;;;:::i;:::-;;:::i;5818:205::-;;;;;;:::i;:::-;;:::i;6980:783:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3779:175::-;;;;;;:::i;:::-;;:::i;10353:679::-;;;;;;:::i;:::-;;:::i;5421:249::-;;;;;;:::i;:::-;;:::i;548:60::-;;;:::i;4133:194::-;;;;;;:::i;:::-;;:::i;8713:773::-;;;;;;:::i;:::-;;:::i;3965:136:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2950:137::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1727:49::-;;;:::i;4744:389:20:-;;;;;;:::i;:::-;;:::i;1048:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;681:71::-;;;:::i;9581:677::-;;;;;;:::i;:::-;;:::i;755:39::-;;;:::i;7858:760::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3255:125:0:-;;;;;;:::i;:::-;;:::i;5101:226::-;;;;;;:::i;:::-;;:::i;4330:273:20:-;;;;;;:::i;:::-;;:::i;5927:958::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5699:133::-;;;;;;:::i;:::-;;:::i;611:66::-;-1:-1:-1;;;;;;;;;;;611:66:20;:::o;3640:136::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;;;;;;;;;3727:45:::1;3755:5;3762:2;3766:5;3727:27;:45::i;:::-;3640:136:::0;;;:::o;2670:184::-;2774:6;2786:23;2801:7;2786:14;:23::i;:::-;-1:-1:-1;;;;2670:184:20;;;;;;;:::o;3511:126::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;3592:41:::1;::::0;-1:-1:-1;;;3592:41:20;;-1:-1:-1;;;;;3592:37:20;::::1;::::0;::::1;::::0;:41:::1;::::0;3630:2;;3592:41:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3511:126:::0;;:::o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;4282:112;;;;:::o;5136:282:20:-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;5250:80:::1;5277:6;5293:26;5322:7;5250:26;:80::i;:::-;5334;5361:6;5377:26;5406:7;5334:26;:80::i;:::-;5136:282:::0;;;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;4727:45::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;5818:205::-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;6980:783:20:-;7080:15;7097;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;7134:4:::1;7122:16:::0;::::1;;;7118:140;;;7200:31;-1:-1:-1::0;;;;;;;;;;;7220:10:20::1;7200:7;:31::i;:::-;:39;;7235:4;7200:39;7192:61;;;;-1:-1:-1::0;;;7192:61:20::1;;;;;;;:::i;:::-;7332:55;7390:242;;;;;;;;7446:7;7390:242;;;;7469:8;:37;;7501:4;7469:37;;;7480:10;7469:37;-1:-1:-1::0;;;;;7390:242:20;;::::1;::::0;;-1:-1:-1;;;;;7390:242:20::1;::::0;::::1;::::0;;;;;;;;7658:42;;-1:-1:-1;;;7658:42:20;;7332:300;;-1:-1:-1;7658:26:20::1;:34;::::0;::::1;::::0;:42:::1;::::0;7332:300;;7658:42:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7709:50;::::0;7637:63;;-1:-1:-1;7637:63:20;-1:-1:-1;7709:50:20::1;::::0;::::1;::::0;7723:7;;7637:63;;;;7750:8;;7709:50:::1;:::i;:::-;;;;;;;;2000:1;6980:783:::0;;;;;:::o;3779:175::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;3851:71:::1;::::0;-1:-1:-1;;;3851:71:20;;-1:-1:-1;;;;;3851:26:20::1;:43;::::0;::::1;::::0;:71:::1;::::0;3903:4:::1;::::0;3910:2;;3914:7;;3851:71:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;3933:17:20::1;::::0;;;-1:-1:-1;;3933:8:20::1;:17;::::0;;;;;;;3926:24;;-1:-1:-1;;;;;;3926:24:20::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;3926:24:20;;;3779:175::o;10353:679::-;10550:16;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;10624:253:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;10624:253:20;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;10734:4:::1;10624:253:::0;;;;10754:15:::1;10624:253:::0;;;;;;;;;;;;;;;;;;::::1;::::0;;;;10941:36;;-1:-1:-1;;;10941:36:20;;10624:253;;10941:10:::1;:28;::::0;::::1;::::0;:36:::1;::::0;10624:253;;10941:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10930:47;;10986:42;10996:4;11002;11008:8;11018:9;10986:42;;;;;;;;;:::i;:::-;;;;;;;;2000:1;10353:679:::0;;;;;;;;:::o;5421:249::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;5534:64:::1;5561:6;5577:10;5590:7;5534:26;:64::i;:::-;5602;5629:6;5645:10;5658:7;5602:26;:64::i;548:60::-:0;-1:-1:-1;;;;;;;;;;;548:60:20;:::o;4133:194::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;4254:17:::1;::::0;;;:8:::1;:17;::::0;;;;;;;:24;;4280;::::1;::::0;4236:87:::1;::::0;-1:-1:-1;;;;;4254:24:20;;::::1;::::0;4280::::1;4306:7:::0;4315;4236:17:::1;:87::i;8713:773::-:0;8867:15;8884;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;9142:197:::1;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;9142:197:20;::::1;;::::0;::::1;::::0;;;;;;;;;;;;;9318:15:::1;9142:197:::0;;;;9365:52;;-1:-1:-1;;;9365:52:20;;-1:-1:-1;;;;;9365:26:20::1;:44;::::0;::::1;::::0;:52:::1;::::0;9142:197;;9365:52:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9426:56;::::0;9344:73;;-1:-1:-1;9344:73:20;-1:-1:-1;9426:56:20::1;::::0;::::1;::::0;9445:7;;9344:73;;;;9472:9;;9426:56:::1;:::i;:::-;;;;;;;;2000:1;8713:773:::0;;;;;;;:::o;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;;3965:136;;;;;:::o;2950:137::-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;1727:49::-;1772:4;1727:49;:::o;4744:389:20:-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;4825:81:::1;4852:6;4868:26;-1:-1:-1::0;;;4825:26:20::1;:81::i;:::-;4910;4937:6;4953:26;-1:-1:-1::0;;;4910:26:20::1;:81::i;:::-;4995:65;5022:6;5038:10;-1:-1:-1::0;;;4995:26:20::1;:65::i;:::-;5064;5091:6;5107:10;-1:-1:-1::0;;;5064:26:20::1;:65::i;1048:43::-:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1048:43:20;;;;;;;;-1:-1:-1;;;1048:43:20;;;;-1:-1:-1;;;1048:43:20;;;;;;;-1:-1:-1;;;1048:43:20;;;;;:::o;681:71::-;;;:::o;9581:677::-;9777:17;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;9851:252:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9851:252:20;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;9960:4:::1;9851:252:::0;;;;9980:15:::1;9851:252:::0;;;;;;;;;;;;;;;;;;::::1;::::0;;;;10168:35;;-1:-1:-1;;;10168:35:20;;9851:252;;10168:10:::1;:27;::::0;::::1;::::0;:35:::1;::::0;9851:252;;10168:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10156:47;;10212:42;10222:4;10228;10234:8;10244:9;10212:42;;;;;;;;;:::i;755:39::-:0;;;:::o;7858:760::-;8043:17;8062:15;8079;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;8168:243:::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;8390:15:::1;8168:243:::0;;;;8497:52;;-1:-1:-1;;;8497:52:20;;-1:-1:-1;;;;;8497:26:20::1;:44;::::0;::::1;::::0;:52:::1;::::0;8168:243;;8497:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8558:56;::::0;8465:84;;-1:-1:-1;8465:84:20;;-1:-1:-1;8465:84:20;-1:-1:-1;8558:56:20::1;::::0;::::1;::::0;8577:7;;8465:84;;;;;;8558:56:::1;:::i;:::-;;;;;;;;2000:1;7858:760:::0;;;;;;;;;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;5101:226::-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4330:273:20;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;4445:75:::1;4477:6;4485:10;4505:4;4512:7;4445:31;:75::i;:::-;4524;4556:6;4564:10;4584:4;4591:7;4524:31;:75::i;5927:958::-:0;6179:15;6196:17;6215:15;6232;1881:31;-1:-1:-1;;;;;;;;;;;1901:10:20;1881:7;:31::i;:::-;:39;;1916:4;1881:39;;:85;;;1924:34;-1:-1:-1;;;;;;;;;;;1947:10:20;1924:7;:34::i;:::-;:42;;1962:4;1924:42;1881:85;1869:127;;;;-1:-1:-1;;;1869:127:20;;;;;;;:::i;:::-;6253:52:::1;6308:334;;;;;;;;6360:6;-1:-1:-1::0;;;;;6308:334:20::1;;;;;6379:6;-1:-1:-1::0;;;;;6308:334:20::1;;;;;6395:3;6308:334;;;;;;6414:9;6308:334;;;;;;6439:9;6308:334;;;;;;6469:14;6308:334;;;;6504:14;6308:334;;;;6535:10;6308:334;;;;6562:10;6308:334;;;;6596:4;-1:-1:-1::0;;;;;6308:334:20::1;;;;;6616:15;6634:3;6616:21;6308:334;;::::0;6253:389:::1;;6792:26;-1:-1:-1::0;;;;;6792:31:20::1;;6824:6;6792:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6751:80:::0;;-1:-1:-1;6751:80:20;;-1:-1:-1;6751:80:20;-1:-1:-1;6751:80:20;-1:-1:-1;6858:23:20::1;6751:80:::0;6858:14:::1;:23::i;:::-;2000:1;5927:958:::0;;;;;;;;;;;;;;:::o;5699:133::-;1768:31;-1:-1:-1;;;;;;;;;;;1788:10:20;1768:7;:31::i;:::-;:39;;1803:4;1768:39;1760:61;;;;-1:-1:-1;;;1760:61:20;;;;;;;:::i;:::-;5783:45:::1;5810:5;5817:2;5821:6;5783:26;:45::i;6429:150:10:-:0;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:10;;6522:4;:50::i;1211:309:19:-;1371:59;;;-1:-1:-1;;;;;1371:59:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1371:59:19;-1:-1:-1;;;1371:59:19;;;1360:71;;;;1325:12;;;;1360:10;;;;1371:59;1360:71;;;1371:59;1360:71;;1371:59;1360:71;;;;;;;;;;-1:-1:-1;;1360:71:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:19;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;;;;-1:-1:-1;1481:24:19;1461:44;1441:72;;;;;-1:-1:-1;;;1441:72:19;;;;;;;;;;;;-1:-1:-1;;;1441:72:19;;;;;;;;;;;;;;;1211:309;;;;;:::o;2857:489:20:-;2921:16;2942:14;2961;2980:10;2995:15;3015;3059:26;-1:-1:-1;;;;;3059:36:20;;3096:7;3059:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2911:193;;;;;;;;;;;;;;;;;;3136:4;-1:-1:-1;;;;;3116:25:20;:8;-1:-1:-1;;;;;3116:25:20;;3108:47;;;;-1:-1:-1;;;3108:47:20;;;;;;;:::i;:::-;3179:114;;;;;;;;3200:6;-1:-1:-1;;;;;3179:114:20;;;;;3219:6;-1:-1:-1;;;;;3179:114:20;;;;;3235:3;3179:114;;;;;;3254:9;3179:114;;;;;;3279:9;3179:114;;;;;3159:8;:17;3168:7;3159:17;;;;;;;;;;;:134;;;;;;;;;;;;;-1:-1:-1;;;;;3159:134:20;;;;;-1:-1:-1;;;;;3159:134:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3159:134:20;;;;;-1:-1:-1;;;;;3159:134:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:40;3313:7;3322:6;3330;3338:3;3302:40;;;;;;;;;:::i;:::-;;;;;;;;2857:489;;;;;;;:::o;1873:307:19:-;2032:58;;;-1:-1:-1;;;;;2032:58:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2032:58:19;-1:-1:-1;;;2032:58:19;;;2021:70;;;;1986:12;;;;2021:10;;;;2032:58;2021:70;;;2032:58;2021:70;;2032:58;2021:70;;;;;;;;;;-1:-1:-1;;2021:70:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:19;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;;;;-1:-1:-1;2141:24:19;2121:44;2101:72;;;;;-1:-1:-1;;;2101:72:19;;;;;;;;;;;;-1:-1:-1;;;2101:72:19;;;;;;;;;;;;;;598:104:9;685:10;598:104;:::o;7025:184:0:-;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;7677:156:10:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:10;;7087:9;:55::i;7230:115::-;7293:7;7319:19;7327:3;7319:7;:19::i;561:358:19:-;759:69;;;-1:-1:-1;;;;;759:69:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;759:69:19;-1:-1:-1;;;759:69:19;;;748:81;;;;701:12;;;;748:10;;;;759:69;748:81;;;759:69;748:81;;759:69;748:81;;;;;;;;;;-1:-1:-1;;748:81:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:19;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;;;;-1:-1:-1;879:24:19;859:44;839:73;;;;;-1:-1:-1;;;839:73:19;;;;;;;;;;;;-1:-1:-1;;;839:73:19;;;;;;;;;;;;;;1640:404:10;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:10;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:10;2015:12;;6747:156;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:10;;6843:7;:53::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:10;;;;-1:-1:-1;;;4538:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:10;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;14:142:21;95:13;;117:33;95:13;117:33;:::i;161:138::-;240:13;;262:31;240:13;262:31;:::i;304:142::-;385:13;;407:33;385:13;407:33;:::i;451:140::-;531:13;;553:32;531:13;553:32;:::i;596:402::-;;;725:2;713:9;704:7;700:23;696:32;693:2;;;746:6;738;731:22;693:2;790:9;777:23;809:33;836:5;809:33;:::i;:::-;861:5;-1:-1:-1;918:2:21;903:18;;890:32;931:35;890:32;931:35;:::i;:::-;985:7;975:17;;;683:315;;;;;:::o;1003:1099::-;;;;;;;;;;1246:3;1234:9;1225:7;1221:23;1217:33;1214:2;;;1268:6;1260;1253:22;1214:2;1312:9;1299:23;1331:33;1358:5;1331:33;:::i;:::-;1383:5;-1:-1:-1;1440:2:21;1425:18;;1412:32;1453:35;1412:32;1453:35;:::i;:::-;1507:7;-1:-1:-1;1566:2:21;1551:18;;1538:32;1579:34;1538:32;1579:34;:::i;:::-;1632:7;-1:-1:-1;1691:2:21;1676:18;;1663:32;1704:33;1663:32;1704:33;:::i;:::-;1756:7;-1:-1:-1;1815:3:21;1800:19;;1787:33;1829;1787;1829;:::i;:::-;1204:898;;;;-1:-1:-1;1204:898:21;;;;1881:7;1935:3;1920:19;;1907:33;;-1:-1:-1;1987:3:21;1972:19;;1959:33;;2039:3;2024:19;;2011:33;;-1:-1:-1;2091:3:21;2076:19;2063:33;;-1:-1:-1;1204:898:21;-1:-1:-1;;1204:898:21:o;2107:825::-;;;;;;;2303:3;2291:9;2282:7;2278:23;2274:33;2271:2;;;2325:6;2317;2310:22;2271:2;2369:9;2356:23;2388:33;2415:5;2388:33;:::i;:::-;2440:5;-1:-1:-1;2497:2:21;2482:18;;2469:32;2510:35;2469:32;2510:35;:::i;:::-;2564:7;-1:-1:-1;2623:2:21;2608:18;;2595:32;2636:34;2595:32;2636:34;:::i;:::-;2689:7;-1:-1:-1;2743:2:21;2728:18;;2715:32;;-1:-1:-1;2794:3:21;2779:19;;2766:33;;-1:-1:-1;2851:3:21;2836:19;;2823:33;2865:35;2823:33;2865:35;:::i;:::-;2919:7;2909:17;;;2261:671;;;;;;;;:::o;2937:470::-;;;;3083:2;3071:9;3062:7;3058:23;3054:32;3051:2;;;3104:6;3096;3089:22;3051:2;3148:9;3135:23;3167:33;3194:5;3167:33;:::i;:::-;3219:5;-1:-1:-1;3276:2:21;3261:18;;3248:32;3289:35;3248:32;3289:35;:::i;:::-;3041:366;;3343:7;;-1:-1:-1;;;3397:2:21;3382:18;;;;3369:32;;3041:366::o;3412:990::-;;;;;;3594:3;3582:9;3573:7;3569:23;3565:33;3562:2;;;3616:6;3608;3601:22;3562:2;3660:9;3647:23;3679:33;3706:5;3679:33;:::i;:::-;3731:5;-1:-1:-1;3788:2:21;3773:18;;3760:32;3801:35;3760:32;3801:35;:::i;:::-;3855:7;-1:-1:-1;3909:2:21;3894:18;;3881:32;;-1:-1:-1;3964:2:21;3949:18;;3936:32;3987:18;4017:14;;;4014:2;;;4049:6;4041;4034:22;4014:2;4092:6;4081:9;4077:22;4067:32;;4137:7;4130:4;4126:2;4122:13;4118:27;4108:2;;4164:6;4156;4149:22;4108:2;4209;4196:16;4235:2;4227:6;4224:14;4221:2;;;4256:6;4248;4241:22;4221:2;4306:7;4301:2;4292:6;4288:2;4284:15;4280:24;4277:37;4274:2;;;4332:6;4324;4317:22;4274:2;3552:850;;;;-1:-1:-1;3552:850:21;;-1:-1:-1;4368:2:21;4360:11;;4390:6;3552:850;-1:-1:-1;;;3552:850:21:o;4407:539::-;;;;;4570:3;4558:9;4549:7;4545:23;4541:33;4538:2;;;4592:6;4584;4577:22;4538:2;4636:9;4623:23;4655:33;4682:5;4655:33;:::i;:::-;4707:5;-1:-1:-1;4764:2:21;4749:18;;4736:32;4777:35;4736:32;4777:35;:::i;:::-;4528:418;;4831:7;;-1:-1:-1;;;;4885:2:21;4870:18;;4857:32;;4936:2;4921:18;4908:32;;4528:418::o;4951:190::-;;5063:2;5051:9;5042:7;5038:23;5034:32;5031:2;;;5084:6;5076;5069:22;5031:2;-1:-1:-1;5112:23:21;;5021:120;-1:-1:-1;5021:120:21:o;5146:327::-;;;5275:2;5263:9;5254:7;5250:23;5246:32;5243:2;;;5296:6;5288;5281:22;5243:2;5337:9;5324:23;5314:33;;5397:2;5386:9;5382:18;5369:32;5410:33;5437:5;5410:33;:::i;5478:258::-;;;5607:2;5595:9;5586:7;5582:23;5578:32;5575:2;;;5628:6;5620;5613:22;5575:2;-1:-1:-1;;5656:23:21;;;5726:2;5711:18;;;5698:32;;-1:-1:-1;5565:171:21:o;5741:385::-;;;;5898:2;5886:9;5877:7;5873:23;5869:32;5866:2;;;5919:6;5911;5904:22;5866:2;5956:9;5950:16;5975:33;6002:5;5975:33;:::i;:::-;6072:2;6057:18;;6051:25;6116:2;6101:18;;;6095:25;6027:5;;6051:25;;-1:-1:-1;6095:25:21;5856:270;-1:-1:-1;;;5856:270:21:o;6326:194::-;;6449:2;6437:9;6428:7;6424:23;6420:32;6417:2;;;6470:6;6462;6455:22;6417:2;-1:-1:-1;6498:16:21;;6407:113;-1:-1:-1;6407:113:21:o;6857:361::-;;;6983:2;6971:9;6962:7;6958:23;6954:32;6951:2;;;7004:6;6996;6989:22;6951:2;7045:9;7032:23;7022:33;;7105:2;7094:9;7090:18;7077:32;7152:5;7145:13;7138:21;7131:5;7128:32;7118:2;;7179:6;7171;7164:22;7223:464;;;;;7386:3;7374:9;7365:7;7361:23;7357:33;7354:2;;;7408:6;7400;7393:22;7354:2;7449:9;7436:23;7426:33;;7509:2;7498:9;7494:18;7481:32;7522:33;7549:5;7522:33;:::i;7692:447::-;;;;;7866:3;7854:9;7845:7;7841:23;7837:33;7834:2;;;7888:6;7880;7873:22;7834:2;7922:9;7916:16;7906:26;;7975:2;7964:9;7960:18;7954:25;7988:33;8015:5;7988:33;:::i;:::-;8085:2;8070:18;;8064:25;8129:2;8114:18;;;8108:25;7824:315;;8040:5;;-1:-1:-1;7824:315:21;-1:-1:-1;;;7824:315:21:o;8144:255::-;;;8284:2;8272:9;8263:7;8259:23;8255:32;8252:2;;;8305:6;8297;8290:22;8252:2;-1:-1:-1;;8333:16:21;;8389:2;8374:18;;;8368:25;8333:16;;8368:25;;-1:-1:-1;8242:157:21:o;8404:326::-;;;;8550:2;8538:9;8529:7;8525:23;8521:32;8518:2;;;8571:6;8563;8556:22;8518:2;-1:-1:-1;;8599:23:21;;;8669:2;8654:18;;8641:32;;-1:-1:-1;8720:2:21;8705:18;;;8692:32;;8508:222;-1:-1:-1;8508:222:21:o;8735:464::-;;;;;;8915:3;8903:9;8894:7;8890:23;8886:33;8883:2;;;8937:6;8929;8922:22;8883:2;-1:-1:-1;;8965:23:21;;;9035:2;9020:18;;9007:32;;-1:-1:-1;9086:2:21;9071:18;;9058:32;;9137:2;9122:18;;9109:32;;-1:-1:-1;9188:3:21;9173:19;9160:33;;-1:-1:-1;8873:326:21;-1:-1:-1;8873:326:21:o;9204:1224::-;;;;;;;;;;;;;9510:3;9498:9;9489:7;9485:23;9481:33;9478:2;;;9532:6;9524;9517:22;9478:2;9569:9;9563:16;9619:26;9612:5;9608:38;9601:5;9598:49;9588:2;;9666:6;9658;9651:22;9588:2;9694:5;-1:-1:-1;9718:51:21;9765:2;9750:18;;9718:51;:::i;:::-;9708:61;;9788:51;9835:2;9824:9;9820:18;9788:51;:::i;:::-;9778:61;;9858:51;9905:2;9894:9;9890:18;9858:51;:::i;:::-;9848:61;;9928:51;9974:3;9963:9;9959:19;9928:51;:::i;:::-;9918:61;;9998:50;10043:3;10032:9;10028:19;9998:50;:::i;:::-;9988:60;;10067:50;10112:3;10101:9;10097:19;10067:50;:::i;:::-;10057:60;;10136:52;10183:3;10172:9;10168:19;10136:52;:::i;:::-;10126:62;;10228:3;10217:9;10213:19;10207:26;10197:36;;10273:3;10262:9;10258:19;10252:26;10242:36;;10298:52;10345:3;10334:9;10330:19;10298:52;:::i;:::-;10287:63;;10370:52;10417:3;10406:9;10402:19;10370:52;:::i;:::-;10359:63;;9468:960;;;;;;;;;;;;;;:::o;10433:106::-;-1:-1:-1;;;;;10501:31:21;10489:44;;10479:60::o;10544:93::-;10621:1;10610:20;10598:33;;10588:49::o;10642:591::-;10775:12;;-1:-1:-1;;;;;10771:21:21;;;10759:34;;10846:4;10835:16;;;10829:23;10825:32;;10809:14;;;10802:56;10911:4;10900:16;;;10894:23;10919:8;10890:38;10874:14;;;10867:62;10982:4;10971:16;;;10965:23;10961:32;;10945:14;;;10938:56;11043:4;11032:16;;;11026:23;11010:14;;;11003:47;10739:3;11088:16;;;11082:23;11066:14;;;11059:47;11155:4;11144:16;;;11138:23;11122:14;;;11115:47;11215:4;11204:16;;;11198:23;11194:32;11178:14;;11171:56;10711:522::o;11238:94::-;11316:8;11305:20;11293:33;;11283:49::o;11337:203::-;-1:-1:-1;;;;;11501:32:21;;;;11483:51;;11471:2;11456:18;;11438:102::o;11545:554::-;-1:-1:-1;;;;;11850:15:21;;;11832:34;;11902:15;;;;11897:2;11882:18;;11875:43;11966:8;11954:21;;;;11949:2;11934:18;;11927:49;12023:1;12012:21;;;12007:2;11992:18;;11985:49;12071:21;;;;12065:3;12050:19;;12043:50;11781:3;11766:19;;11748:351::o;12104:375::-;-1:-1:-1;;;;;12362:15:21;;;12344:34;;12414:15;;;;12409:2;12394:18;;12387:43;12461:2;12446:18;;12439:34;;;;12294:2;12279:18;;12261:218::o;12484:447::-;-1:-1:-1;;;;;12771:15:21;;;12753:34;;12823:15;;;;12818:2;12803:18;;12796:43;12870:2;12855:18;;12848:34;12913:2;12898:18;;12891:34;;;;12702:3;12687:19;;12669:262::o;12936:187::-;13101:14;;13094:22;13076:41;;13064:2;13049:18;;13031:92::o;13128:177::-;13274:25;;;13262:2;13247:18;;13229:76::o;13310:202::-;-1:-1:-1;;;;;;13472:33:21;;;;13454:52;;13442:2;13427:18;;13409:103::o;13989:332::-;14191:2;14173:21;;;14230:1;14210:18;;;14203:29;-1:-1:-1;;;14263:2:21;14248:18;;14241:39;14312:2;14297:18;;14163:158::o;14326:343::-;14528:2;14510:21;;;14567:2;14547:18;;;14540:30;-1:-1:-1;;;14601:2:21;14586:18;;14579:49;14660:2;14645:18;;14500:169::o;14674:332::-;14876:2;14858:21;;;14915:1;14895:18;;;14888:29;-1:-1:-1;;;14948:2:21;14933:18;;14926:39;14997:2;14982:18;;14848:158::o;15011:574::-;15238:13;;15220:32;;15312:4;15300:17;;;15294:24;-1:-1:-1;;;;;15290:50:21;15268:20;;;15261:80;15388:4;15376:17;;;15370:24;-1:-1:-1;;;;;15485:21:21;;;15463:20;;;15456:51;;;;15567:4;15555:17;;;15549:24;15545:33;15523:20;;;15516:63;;;;15207:3;15192:19;;15174:411::o;15590:560::-;;15806:3;15795:9;15791:19;15783:27;;15843:6;15837:13;15826:9;15819:32;-1:-1:-1;;;;;15911:4:21;15903:6;15899:17;15893:24;15889:65;15882:4;15871:9;15867:20;15860:95;16011:4;16003:6;15999:17;15993:24;15986:4;15975:9;15971:20;15964:54;16074:4;16066:6;16062:17;16056:24;16049:4;16038:9;16034:20;16027:54;16137:4;16129:6;16125:17;16119:24;16112:4;16101:9;16097:20;16090:54;15773:377;;;;:::o;16155:295::-;16369:3;16354:19;;16382:62;16358:9;16426:6;16382:62;:::i;16757:582::-;;16973:3;16962:9;16958:19;16950:27;;17010:6;17004:13;16993:9;16986:32;17074:4;17066:6;17062:17;17056:24;17049:4;17038:9;17034:20;17027:54;17137:4;17129:6;17125:17;17119:24;17112:4;17101:9;17097:20;17090:54;17200:4;17192:6;17188:17;17182:24;17175:4;17164:9;17160:20;17153:54;17263:4;17255:6;17251:17;17245:24;17238:4;17227:9;17223:20;17216:54;17326:4;17318:6;17314:17;17308:24;17301:4;17290:9;17286:20;17279:54;16940:399;;;;:::o;17344:1234::-;;17534:3;17523:9;17519:19;17511:27;;17547:46;17583:9;17574:6;17568:13;17547:46;:::i;:::-;17640:4;17632:6;17628:17;17622:24;17655:56;17705:4;17694:9;17690:20;17676:12;17655:56;:::i;:::-;;17760:4;17752:6;17748:17;17742:24;17775:57;17826:4;17815:9;17811:20;17795:14;17775:57;:::i;:::-;;17881:4;17873:6;17869:17;17863:24;17896:56;17946:4;17935:9;17931:20;17915:14;17896:56;:::i;:::-;;18001:4;17993:6;17989:17;17983:24;18016:56;18066:4;18055:9;18051:20;18035:14;18016:56;:::i;:::-;;18128:4;18120:6;18116:17;18110:24;18103:4;18092:9;18088:20;18081:54;18191:4;18183:6;18179:17;18173:24;18166:4;18155:9;18151:20;18144:54;18254:4;18246:6;18242:17;18236:24;18229:4;18218:9;18214:20;18207:54;18280:6;18340:2;18332:6;18328:15;18322:22;18317:2;18306:9;18302:18;18295:50;;18364:6;18419:2;18411:6;18407:15;18401:22;18432:56;18484:2;18473:9;18469:18;18453:14;18432:56;:::i;:::-;-1:-1:-1;;18507:6:21;18555:15;;;18549:22;18529:18;;;;18522:50;17501:1077;:::o;18583:360::-;-1:-1:-1;;;;;18803:47:21;;;;18785:66;;18882:2;18867:18;;18860:34;;;;18925:2;18910:18;;18903:34;18773:2;18758:18;;18740:203::o;19130:460::-;19359:25;;;-1:-1:-1;;;;;19458:15:21;;;19453:2;19438:18;;19431:43;19510:15;;19505:2;19490:18;;19483:43;19574:8;19562:21;19557:2;19542:18;;19535:49;19346:3;19331:19;;19313:277::o;19595:432::-;19826:25;;;-1:-1:-1;;;;;19887:47:21;;;;19882:2;19867:18;;19860:75;19966:2;19951:18;;19944:34;20009:2;19994:18;;19987:34;19813:3;19798:19;;19780:247::o;20032:248::-;20206:25;;;20262:2;20247:18;;20240:34;20194:2;20179:18;;20161:119::o;20285:401::-;20510:25;;;20566:2;20551:18;;20544:34;;;;20609:2;20594:18;;20587:34;20664:14;20657:22;20652:2;20637:18;;20630:50;20497:3;20482:19;;20464:222::o;20691:432::-;20922:25;;;20978:2;20963:18;;20956:34;;;;21021:2;21006:18;;20999:34;-1:-1:-1;;;;;21069:47:21;21064:2;21049:18;;21042:75;20909:3;20894:19;;20876:247::o;21128:133::-;-1:-1:-1;;;;;21205:31:21;;21195:42;;21185:2;;21251:1;21248;21241:12;21185:2;21175:86;:::o;21266:120::-;21355:5;21352:1;21341:20;21334:5;21331:31;21321:2;;21376:1;21373;21366:12;21391:148;-1:-1:-1;;;;;21472:5:21;21468:46;21461:5;21458:57;21448:2;;21529:1;21526;21519:12;21544:121;21631:8;21624:5;21620:20;21613:5;21610:31;21600:2;;21655:1;21652;21645:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2073000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "273",
								"EXECUTOR_ROLE()": "infinite",
								"approve(address,address,uint256)": "infinite",
								"approveInfinity(address,address)": "infinite",
								"approveManager(address,address,uint256,uint256)": "infinite",
								"approveRouter(address,address,uint256,uint256)": "infinite",
								"collectFees(uint256,bool)": "infinite",
								"decreaseLiquidity(uint256,uint128,uint256,uint256)": "infinite",
								"deposits(uint256)": "2347",
								"getRoleAdmin(bytes32)": "1254",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"increaseLiquidity(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"mintNewPosition(address,address,uint24,int24,int24,uint256,uint256,uint256,uint256)": "infinite",
								"nonfungiblePositionManager()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"redeemNFT(uint256,address)": "infinite",
								"redeemOwnership(address,address)": "infinite",
								"redeemToken(address,address,uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"swapExactInputSingle(address,address,uint24,uint256,uint256,uint160)": "infinite",
								"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint160)": "infinite",
								"swapRouter()": "infinite",
								"transferForDeposit(uint256,uint256,uint256)": "infinite",
								"transferForTokens(address,address,uint256,uint256)": "infinite"
							},
							"internal": {
								"_createDeposit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "C0"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSHSIZE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "CODESIZE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSHSIZE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "JUMP",
									"source": 20,
									"value": "[in]"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "tag",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 2240,
									"end": 2296,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 2300,
									"end": 2324,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2329,
									"end": 2366,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 585,
									"end": 608,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2329,
									"end": 2342,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "7"
								},
								{
									"begin": 2329,
									"end": 2366,
									"name": "JUMP",
									"source": 20,
									"value": "[in]"
								},
								{
									"begin": 2329,
									"end": 2366,
									"name": "tag",
									"source": 20,
									"value": "6"
								},
								{
									"begin": 2329,
									"end": 2366,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2370,
									"end": 2410,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2370,
									"end": 2383,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "7"
								},
								{
									"begin": 2370,
									"end": 2410,
									"name": "JUMP",
									"source": 20,
									"value": "[in]"
								},
								{
									"begin": 2370,
									"end": 2410,
									"name": "tag",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 2370,
									"end": 2410,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2415,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2415,
									"end": 2425,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 2415,
									"end": 2445,
									"name": "JUMP",
									"source": 20,
									"value": "[in]"
								},
								{
									"begin": 2415,
									"end": 2445,
									"name": "tag",
									"source": 20,
									"value": "9"
								},
								{
									"begin": 2415,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2449,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "11"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2475,
									"end": 2480,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2449,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 2449,
									"end": 2481,
									"name": "JUMP",
									"source": 20,
									"value": "[in]"
								},
								{
									"begin": 2449,
									"end": 2481,
									"name": "tag",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 2449,
									"end": 2481,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2100,
									"end": 2485,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "34"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6823,
									"end": 7019,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6823,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6946,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6956,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6934,
									"end": 6956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6956,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6911,
									"end": 6968,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6911,
									"end": 6968,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6958,
									"end": 6967,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6958,
									"end": 6967,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6941,
									"end": 6945,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6941,
									"end": 6945,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6911,
									"end": 6968,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 6911,
									"end": 6968,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 6940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6911,
									"end": 6968,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 6990,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 7000,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6978,
									"end": 7000,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6978,
									"end": 7012,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6823,
									"end": 7019,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6683,
									"end": 6690,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7123,
									"end": 7130,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7123,
									"end": 7130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551780"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7170,
									"end": 7177,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6499,
									"end": 6503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6527,
									"end": 6530,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2022,
									"end": 2027,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 3882,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 742,
									"name": "tag",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 742,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 14,
									"end": 742,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 742,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 14,
									"end": 742,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 742,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 244,
									"end": 247,
									"name": "PUSH",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 241,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 223,
									"end": 230,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 219,
									"end": 242,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 215,
									"end": 248,
									"name": "SLT",
									"source": 21
								},
								{
									"begin": 212,
									"end": 214,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 212,
									"end": 214,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "36"
								},
								{
									"begin": 212,
									"end": 214,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 266,
									"end": 272,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 258,
									"end": 264,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 251,
									"end": 273,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 212,
									"end": 214,
									"name": "tag",
									"source": 21,
									"value": "36"
								},
								{
									"begin": 212,
									"end": 214,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 303,
									"end": 312,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 297,
									"end": 313,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 322,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 349,
									"end": 354,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 322,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 322,
									"end": 355,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 322,
									"end": 355,
									"name": "tag",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 322,
									"end": 355,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 424,
									"end": 426,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 409,
									"end": 427,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 409,
									"end": 427,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 403,
									"end": 428,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 374,
									"end": 379,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 374,
									"end": 379,
									"name": "SWAP5",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 437,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "39"
								},
								{
									"begin": 403,
									"end": 428,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 437,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 437,
									"end": 472,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 437,
									"end": 472,
									"name": "tag",
									"source": 21,
									"value": "39"
								},
								{
									"begin": 437,
									"end": 472,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 543,
									"end": 545,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 546,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 528,
									"end": 546,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 522,
									"end": 547,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 491,
									"end": 498,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 491,
									"end": 498,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 556,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 547,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 556,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 556,
									"end": 591,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 556,
									"end": 591,
									"name": "tag",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 556,
									"end": 591,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 662,
									"end": 664,
									"name": "PUSH",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 647,
									"end": 665,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 647,
									"end": 665,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 641,
									"end": 666,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 610,
									"end": 617,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 610,
									"end": 617,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 675,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "41"
								},
								{
									"begin": 641,
									"end": 666,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 675,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 675,
									"end": 710,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 675,
									"end": 710,
									"name": "tag",
									"source": 21,
									"value": "41"
								},
								{
									"begin": 675,
									"end": 710,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP7",
									"source": 21
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP6",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 202,
									"end": 742,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 202,
									"end": 742,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 747,
									"end": 880,
									"name": "tag",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 747,
									"end": 880,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 824,
									"end": 855,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 824,
									"end": 855,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 814,
									"end": 856,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 814,
									"end": 856,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 804,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "43"
								},
								{
									"begin": 804,
									"end": 806,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 870,
									"end": 871,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 868,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 860,
									"end": 872,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 804,
									"end": 806,
									"name": "tag",
									"source": 21,
									"value": "43"
								},
								{
									"begin": 804,
									"end": 806,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 794,
									"end": 880,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 794,
									"end": 880,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 794,
									"end": 880,
									"name": "tag",
									"source": 21,
									"value": "34"
								},
								{
									"begin": 794,
									"end": 880,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2176"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2174"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 11034,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bc20b42fdadeaaa814715bc956fc34198550bedbb946c2a55bf2662efa65b5864736f6c63430007060033",
									".code": [
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "8E5F5977"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "B4580507"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "DCE008AF"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "DD37019D"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "E1F21C67"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "B4580507"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "C31C9C07"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "C691B0A1"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "CA15C873"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "A8243558"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "B02C43D0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "B44A2722"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "8E5F5977"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "9010D07C"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "4C8C7314"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "4C8C7314"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "57706E74"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "75B238FC"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "7D42C461"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "3A483CB0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "3EF4C3D4"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "1C8C9980"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "1C8C9980"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "25EB6E6F"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "2F2FF15D"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "7BD0265"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "D71BDC3"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "150B7A02"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 482,
											"end": 11034,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "tag",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "tag",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "tag",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "tag",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "50"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "tag",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "tag",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "54"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "tag",
											"source": 20,
											"value": "54"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "tag",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "tag",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "tag",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "tag",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "68"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "tag",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "82"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "tag",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "tag",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "86"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "90"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "tag",
											"source": 20,
											"value": "90"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "91"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "93"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "tag",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "97"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "tag",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "tag",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "tag",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "102"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 681,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "tag",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "tag",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 755,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "136"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "tag",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "tag",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "tag",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "153"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "tag",
											"source": 20,
											"value": "153"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "tag",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "155"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "tag",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "tag",
											"source": 20,
											"value": "155"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "tag",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "tag",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 611,
											"end": 677,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "tag",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "166"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3727,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3727,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 3727,
											"end": 3772,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3772,
											"name": "tag",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 3727,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3640,
											"end": 3776,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "tag",
											"source": 20,
											"value": "50"
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 2801,
											"end": 2808,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "tag",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 2786,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2854,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "177"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "178"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "178"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2FDE38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3629,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3629,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3629,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3629,
											"name": "PUSH",
											"source": 20,
											"value": "F2FDE38B"
										},
										{
											"begin": 3592,
											"end": 3629,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "181"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3630,
											"end": 3632,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3630,
											"end": 3632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 20,
											"value": "181"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3511,
											"end": 3637,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "tag",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "187"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "188"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "188"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5250,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 5322,
											"end": 5329,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5250,
											"end": 5330,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5250,
											"end": 5330,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 5250,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5334,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 5361,
											"end": 5367,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5377,
											"end": 5403,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5334,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5334,
											"end": 5414,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5414,
											"name": "tag",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 5334,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5136,
											"end": 5418,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4759,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH data",
											"source": 0,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5915,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH data",
											"source": 0,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7112,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "207"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "209"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "209"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7134,
											"end": 7138,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7122,
											"end": 7138,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7118,
											"end": 7258,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7118,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 7118,
											"end": 7258,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7200,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7230,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 7200,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 7200,
											"end": 7231,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7200,
											"end": 7231,
											"name": "tag",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 7200,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7235,
											"end": 7239,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "tag",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 7192,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7387,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7446,
											"end": 7453,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7469,
											"end": 7477,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7501,
											"end": 7505,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "tag",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7480,
											"end": 7490,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "tag",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 7469,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7390,
											"end": 7632,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC6F7865"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7632,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7632,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7658,
											"end": 7684,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 7658,
											"end": 7692,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7692,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7692,
											"name": "PUSH",
											"source": 20,
											"value": "FC6F7865"
										},
										{
											"begin": 7658,
											"end": 7692,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7632,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7632,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "tag",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "tag",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "tag",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "tag",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "PUSH",
											"source": 20,
											"value": "EAA34316C1AC0AC2B8445632FEF75DAD91F846CC69C40A558CCFD6E5700BB79A"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7723,
											"end": 7730,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7723,
											"end": 7730,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7750,
											"end": 7758,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 7750,
											"end": 7758,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "tag",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7709,
											"end": 7759,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6980,
											"end": 7763,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "tag",
											"source": 20,
											"value": "82"
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "230"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "PUSH",
											"source": 20,
											"value": "42842E0E"
										},
										{
											"begin": 3851,
											"end": 3894,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3914,
											"end": 3921,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3914,
											"end": 3921,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "tag",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "tag",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "tag",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 3851,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3950,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3779,
											"end": 3954,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "tag",
											"source": 20,
											"value": "86"
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10550,
											"end": 10566,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "242"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "243"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "243"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10734,
											"end": 10738,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10754,
											"end": 10769,
											"name": "TIMESTAMP",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B67C433"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10951,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": 10941,
											"end": 10969,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10969,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10969,
											"name": "PUSH",
											"source": 20,
											"value": "DB3E2198"
										},
										{
											"begin": 10941,
											"end": 10969,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "tag",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "tag",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "tag",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "tag",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 10941,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10930,
											"end": 10977,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10930,
											"end": 10977,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "PUSH",
											"source": 20,
											"value": "1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F"
										},
										{
											"begin": 10996,
											"end": 11000,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 11002,
											"end": 11006,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 11008,
											"end": 11016,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "tag",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10986,
											"end": 11028,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10353,
											"end": 11032,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "tag",
											"source": 20,
											"value": "91"
										},
										{
											"begin": 5421,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "256"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5534,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "260"
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5577,
											"end": 5587,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": 5590,
											"end": 5597,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5534,
											"end": 5598,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5534,
											"end": 5598,
											"name": "tag",
											"source": 20,
											"value": "260"
										},
										{
											"begin": 5534,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 5629,
											"end": 5635,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5645,
											"end": 5655,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": 5658,
											"end": 5665,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5602,
											"end": 5666,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "tag",
											"source": 20,
											"value": "93"
										},
										{
											"begin": 548,
											"end": 608,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 548,
											"end": 608,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 548,
											"end": 608,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "tag",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 4133,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4262,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4236,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 4236,
											"end": 4323,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4306,
											"end": 4313,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4315,
											"end": 4322,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 4236,
											"end": 4323,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "tag",
											"source": 20,
											"value": "102"
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8867,
											"end": 8882,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8884,
											"end": 8899,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "TIMESTAMP",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "624E65F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9391,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "PUSH",
											"source": 20,
											"value": "C49CCBE"
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9339,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "PUSH",
											"source": 20,
											"value": "C79CB6614F7BCC31F0121C4DB623A782836F42B2D8E5290A19340BDBC25032F7"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9445,
											"end": 9452,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 9445,
											"end": 9452,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9344,
											"end": 9417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9482,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 9486,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "tag",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 4744,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4825,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4868,
											"end": 4894,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 4825,
											"end": 4906,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4825,
											"end": 4906,
											"name": "tag",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 4825,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4910,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4953,
											"end": 4979,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 4910,
											"end": 4991,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 4991,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 4910,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4995,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5038,
											"end": 5048,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4995,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 4995,
											"end": 5060,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4995,
											"end": 5060,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 4995,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5064,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5107,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5064,
											"end": 5129,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "tag",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 681,
											"end": 752,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 681,
											"end": 752,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 681,
											"end": 752,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "tag",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 9581,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9777,
											"end": 9794,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9960,
											"end": 9964,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9980,
											"end": 9995,
											"name": "TIMESTAMP",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414BF389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10178,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": 10168,
											"end": 10195,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10195,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10195,
											"name": "PUSH",
											"source": 20,
											"value": "414BF389"
										},
										{
											"begin": 10168,
											"end": 10195,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9851,
											"end": 10103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "tag",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "tag",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 10168,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10156,
											"end": 10203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10156,
											"end": 10203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "PUSH",
											"source": 20,
											"value": "1F2C1DE040604EAF4A8C72B05BD7C16FAE213F15CBDE69ECF70DD3B97FEF1F2F"
										},
										{
											"begin": 10222,
											"end": 10226,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10234,
											"end": 10242,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10244,
											"end": 10253,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 10212,
											"end": 10254,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "tag",
											"source": 20,
											"value": "136"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 755,
											"end": 794,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2176"
										},
										{
											"begin": 755,
											"end": 794,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 755,
											"end": 794,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "tag",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8043,
											"end": 8060,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8077,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8079,
											"end": 8094,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "313"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8390,
											"end": 8405,
											"name": "TIMESTAMP",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "219F5D17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": 8497,
											"end": 8541,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8541,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8541,
											"name": "PUSH",
											"source": 20,
											"value": "219F5D17"
										},
										{
											"begin": 8497,
											"end": 8541,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "tag",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "tag",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "tag",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "tag",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 8497,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "PUSH",
											"source": 20,
											"value": "2D6EDBED0A944A56E78D8CED0BC4794533B38938655F47C5A423559A1163B104"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8577,
											"end": 8584,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 8577,
											"end": 8584,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8465,
											"end": 8549,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8558,
											"end": 8614,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7858,
											"end": 8618,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH data",
											"source": 0,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "tag",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 4330,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "336"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4445,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 4477,
											"end": 4483,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4485,
											"end": 4495,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 4505,
											"end": 4509,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 4445,
											"end": 4520,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 4445,
											"end": 4520,
											"name": "tag",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 4445,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4524,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 4556,
											"end": 4562,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4564,
											"end": 4574,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 4591,
											"end": 4598,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4524,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 4524,
											"end": 4599,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "tag",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6213,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "tag",
											"source": 20,
											"value": "344"
										},
										{
											"begin": 1881,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 1924,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "tag",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 1881,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 1869,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP16",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP15",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "DUP14",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6414,
											"end": 6423,
											"name": "DUP13",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6469,
											"end": 6483,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6562,
											"end": 6572,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6596,
											"end": 6600,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6616,
											"end": 6631,
											"name": "TIMESTAMP",
											"source": 20
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6616,
											"end": 6637,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6308,
											"end": 6642,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6253,
											"end": 6642,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6253,
											"end": 6642,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6818,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 6823,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6823,
											"name": "PUSH",
											"source": 20,
											"value": "88316456"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "tag",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "tag",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "tag",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 6792,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6858,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 6751,
											"end": 6831,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6858,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 6858,
											"end": 6881,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6858,
											"end": 6881,
											"name": "tag",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 6858,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP10",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP10",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP10",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP10",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5927,
											"end": 6885,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "tag",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 5699,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 1768,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 1760,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5783,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 5810,
											"end": 5815,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5783,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 5783,
											"end": 5828,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "tag",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2921,
											"end": 2937,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2961,
											"end": 2975,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2990,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3085,
											"name": "PUSHIMMUTABLE",
											"source": 20,
											"value": "2174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3095,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3095,
											"name": "PUSH",
											"source": 20,
											"value": "99FBAB88"
										},
										{
											"begin": 3096,
											"end": 3103,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "tag",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "STATICCALL",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 3059,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2911,
											"end": 3104,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3141,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3116,
											"end": 3124,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3141,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3116,
											"end": 3141,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 3108,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3179,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3167,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3175,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "1A"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SIGNEXTEND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3159,
											"end": 3293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "PUSH",
											"source": 20,
											"value": "C98B6CEF6BCB7A4F274AB1045EAD0065D8A07DF11B545D8DC8BD25F58B39D071"
										},
										{
											"begin": 3313,
											"end": 3320,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3338,
											"end": 3341,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "JUMP",
											"source": 20,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3302,
											"end": 3342,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2857,
											"end": 3346,
											"name": "JUMP",
											"source": 20,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 7373,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7358,
											"end": 7362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 713,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 701,
											"end": 713,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 701,
											"end": 713,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 870,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 859,
											"end": 875,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 859,
											"end": 875,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH data",
											"source": 10,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2464,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3622,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 156,
											"name": "tag",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 299,
											"name": "tag",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 161,
											"end": 299,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 240,
											"end": 253,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 240,
											"end": 253,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 240,
											"end": 253,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 446,
											"name": "tag",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 304,
											"end": 446,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 385,
											"end": 398,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 385,
											"end": 398,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 407,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 385,
											"end": 398,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 407,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 407,
											"end": 440,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 591,
											"name": "tag",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 451,
											"end": 591,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 531,
											"end": 544,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 531,
											"end": 544,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 553,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 531,
											"end": 544,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 553,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 553,
											"end": 585,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 998,
											"name": "tag",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 596,
											"end": 998,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 596,
											"end": 998,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 998,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 725,
											"end": 727,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 722,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 700,
											"end": 723,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 696,
											"end": 728,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 693,
											"end": 695,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 693,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 693,
											"end": 695,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 738,
											"end": 744,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 731,
											"end": 753,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 693,
											"end": 695,
											"name": "tag",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 693,
											"end": 695,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 790,
											"end": 799,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 777,
											"end": 800,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 809,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 809,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 809,
											"end": 842,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 809,
											"end": 842,
											"name": "tag",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 809,
											"end": 842,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 861,
											"end": 866,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 890,
											"end": 922,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 931,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 890,
											"end": 922,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 931,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 931,
											"end": 966,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 966,
											"name": "tag",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 931,
											"end": 966,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 985,
											"end": 992,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 975,
											"end": 992,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 975,
											"end": 992,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 975,
											"end": 992,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 683,
											"end": 998,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "tag",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1003,
											"end": 2102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1249,
											"name": "PUSH",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "DUP13",
											"source": 21
										},
										{
											"begin": 1221,
											"end": 1244,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1217,
											"end": 1250,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1214,
											"end": 1216,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1214,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 1214,
											"end": 1216,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1214,
											"end": 1216,
											"name": "tag",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 1214,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 1299,
											"end": 1322,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1331,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1331,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 1331,
											"end": 1364,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1364,
											"name": "tag",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 1331,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1383,
											"end": 1388,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1444,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 1412,
											"end": 1444,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1579,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1579,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 1579,
											"end": 1613,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1613,
											"name": "tag",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 1579,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1632,
											"end": 1639,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "tag",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1818,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 1800,
											"end": 1819,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 1787,
											"end": 1820,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP12",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP11",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 1935,
											"end": 1938,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 1920,
											"end": 1939,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1920,
											"end": 1939,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1907,
											"end": 1940,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1907,
											"end": 1940,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 1990,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1959,
											"end": 1992,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1959,
											"end": 1992,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2011,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2011,
											"end": 2044,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 2076,
											"end": 2095,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2063,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2063,
											"end": 2096,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 2102,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2932,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2303,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2282,
											"end": 2289,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2274,
											"end": 2307,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "483"
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2310,
											"end": 2332,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "tag",
											"source": 21,
											"value": "483"
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2356,
											"end": 2379,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2388,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2388,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 2388,
											"end": 2421,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 2421,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 2388,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2499,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2469,
											"end": 2501,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 2469,
											"end": 2501,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2595,
											"end": 2627,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2636,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 2595,
											"end": 2627,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2636,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 2636,
											"end": 2670,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 2670,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 2636,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2715,
											"end": 2747,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2715,
											"end": 2747,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2797,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 2836,
											"end": 2855,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 2855,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "tag",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2919,
											"end": 2926,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2261,
											"end": 2932,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2937,
											"end": 3407,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 2937,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2937,
											"end": 3407,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 3407,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2937,
											"end": 3407,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3062,
											"end": 3069,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3058,
											"end": 3081,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "489"
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3089,
											"end": 3111,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "tag",
											"source": 21,
											"value": "489"
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3135,
											"end": 3158,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3167,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3167,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 3167,
											"end": 3200,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3167,
											"end": 3200,
											"name": "tag",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 3167,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3219,
											"end": 3224,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3248,
											"end": 3280,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3289,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 3248,
											"end": 3280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3289,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 3289,
											"end": 3324,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3324,
											"name": "tag",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 3289,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3041,
											"end": 3407,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3041,
											"end": 3407,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3350,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3350,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3397,
											"end": 3399,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3041,
											"end": 3407,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3412,
											"end": 4402,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3597,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3601,
											"end": 3623,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "tag",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3647,
											"end": 3670,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3679,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3679,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 3679,
											"end": 3712,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3712,
											"name": "tag",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 3679,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3788,
											"end": 3790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3760,
											"end": 3792,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 3760,
											"end": 3792,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "tag",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3855,
											"end": 3862,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3881,
											"end": 3913,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3881,
											"end": 3913,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3936,
											"end": 3968,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4017,
											"end": 4031,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4017,
											"end": 4031,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4017,
											"end": 4031,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4041,
											"end": 4047,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "tag",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4077,
											"end": 4099,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4067,
											"end": 4099,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4067,
											"end": 4099,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4122,
											"end": 4135,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4118,
											"end": 4145,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4108,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 4108,
											"end": 4110,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4149,
											"end": 4171,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4108,
											"end": 4110,
											"name": "tag",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 4108,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4196,
											"end": 4212,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4235,
											"end": 4237,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4224,
											"end": 4238,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "tag",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4306,
											"end": 4313,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4284,
											"end": 4299,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4332,
											"end": 4338,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4317,
											"end": 4339,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "tag",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP10",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4371,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4360,
											"end": 4371,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3552,
											"end": 4402,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "tag",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4946,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4570,
											"end": 4573,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4549,
											"end": 4556,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4545,
											"end": 4568,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 4574,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "501"
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4592,
											"end": 4598,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4577,
											"end": 4599,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "tag",
											"source": 21,
											"value": "501"
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4636,
											"end": 4645,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4623,
											"end": 4646,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "502"
										},
										{
											"begin": 4682,
											"end": 4687,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "tag",
											"source": 21,
											"value": "502"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4707,
											"end": 4712,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4736,
											"end": 4768,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 4736,
											"end": 4768,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 4777,
											"end": 4812,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4777,
											"end": 4812,
											"name": "tag",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 4777,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4528,
											"end": 4946,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4528,
											"end": 4946,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4885,
											"end": 4887,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4857,
											"end": 4889,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4857,
											"end": 4889,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4936,
											"end": 4938,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4921,
											"end": 4939,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4528,
											"end": 4946,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4951,
											"end": 5141,
											"name": "tag",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 4951,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4951,
											"end": 5141,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5038,
											"end": 5061,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5034,
											"end": 5066,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5069,
											"end": 5091,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "tag",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5112,
											"end": 5135,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5112,
											"end": 5135,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5021,
											"end": 5141,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5021,
											"end": 5141,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5146,
											"end": 5473,
											"name": "tag",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 5146,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5146,
											"end": 5473,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5473,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5275,
											"end": 5277,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5254,
											"end": 5261,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5246,
											"end": 5278,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5296,
											"end": 5302,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5281,
											"end": 5303,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "tag",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5324,
											"end": 5347,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5347,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5347,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5369,
											"end": 5401,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5410,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5410,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 5410,
											"end": 5443,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5478,
											"end": 5736,
											"name": "tag",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 5478,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5478,
											"end": 5736,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5736,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5586,
											"end": 5593,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5582,
											"end": 5605,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "510"
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "tag",
											"source": 21,
											"value": "510"
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5698,
											"end": 5730,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5698,
											"end": 5730,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5565,
											"end": 5736,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5741,
											"end": 6126,
											"name": "tag",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 5741,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5741,
											"end": 6126,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 6126,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5741,
											"end": 6126,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5877,
											"end": 5884,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5873,
											"end": 5896,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5869,
											"end": 5901,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "512"
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5919,
											"end": 5925,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5911,
											"end": 5917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "tag",
											"source": 21,
											"value": "512"
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5950,
											"end": 5966,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5975,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "513"
										},
										{
											"begin": 6002,
											"end": 6007,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5975,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 5975,
											"end": 6008,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5975,
											"end": 6008,
											"name": "tag",
											"source": 21,
											"value": "513"
										},
										{
											"begin": 5975,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6072,
											"end": 6074,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6051,
											"end": 6076,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6095,
											"end": 6120,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6027,
											"end": 6032,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6027,
											"end": 6032,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 6051,
											"end": 6076,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6051,
											"end": 6076,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6095,
											"end": 6120,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5856,
											"end": 6126,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 6126,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 6326,
											"end": 6520,
											"name": "tag",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 6326,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6326,
											"end": 6520,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6428,
											"end": 6435,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6424,
											"end": 6447,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6420,
											"end": 6452,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "517"
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6455,
											"end": 6477,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "tag",
											"source": 21,
											"value": "517"
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6514,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6498,
											"end": 6514,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6407,
											"end": 6520,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6407,
											"end": 6520,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 6857,
											"end": 7218,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 6857,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6857,
											"end": 7218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 7218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6983,
											"end": 6985,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6971,
											"end": 6980,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6962,
											"end": 6969,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6958,
											"end": 6981,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6954,
											"end": 6986,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6989,
											"end": 7011,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "tag",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7045,
											"end": 7054,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7032,
											"end": 7055,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7022,
											"end": 7055,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7022,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7105,
											"end": 7107,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7103,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7077,
											"end": 7109,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7152,
											"end": 7157,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7145,
											"end": 7158,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7138,
											"end": 7159,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7131,
											"end": 7136,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7128,
											"end": 7160,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7171,
											"end": 7177,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7164,
											"end": 7186,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "tag",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7687,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 7374,
											"end": 7383,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7365,
											"end": 7372,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7361,
											"end": 7384,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7357,
											"end": 7390,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7408,
											"end": 7414,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7400,
											"end": 7406,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7393,
											"end": 7415,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "tag",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7436,
											"end": 7459,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7481,
											"end": 7513,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7522,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7522,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 7522,
											"end": 7555,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "tag",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 8139,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7866,
											"end": 7869,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 7854,
											"end": 7863,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7841,
											"end": 7864,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7837,
											"end": 7870,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7888,
											"end": 7894,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7873,
											"end": 7895,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "tag",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7916,
											"end": 7932,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7906,
											"end": 7932,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 7906,
											"end": 7932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7975,
											"end": 7977,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7964,
											"end": 7973,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7954,
											"end": 7979,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7988,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 8015,
											"end": 8020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7988,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 7988,
											"end": 8021,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7988,
											"end": 8021,
											"name": "tag",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 7988,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8064,
											"end": 8089,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8108,
											"end": 8133,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7824,
											"end": 8139,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 7824,
											"end": 8139,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 8040,
											"end": 8045,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8040,
											"end": 8045,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 8139,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 8139,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 8144,
											"end": 8399,
											"name": "tag",
											"source": 21,
											"value": "226"
										},
										{
											"begin": 8144,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8144,
											"end": 8399,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8399,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8272,
											"end": 8281,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8263,
											"end": 8270,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8259,
											"end": 8282,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8255,
											"end": 8287,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8305,
											"end": 8311,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8297,
											"end": 8303,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8290,
											"end": 8312,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "tag",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8399,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 8404,
											"end": 8730,
											"name": "tag",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 8404,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8404,
											"end": 8730,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8730,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8404,
											"end": 8730,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8550,
											"end": 8552,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8538,
											"end": 8547,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8529,
											"end": 8536,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8525,
											"end": 8548,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8521,
											"end": 8553,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8578,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "tag",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8599,
											"end": 8622,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8599,
											"end": 8622,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8641,
											"end": 8673,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8641,
											"end": 8673,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8720,
											"end": 8722,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8508,
											"end": 8730,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8730,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "tag",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8735,
											"end": 9199,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 8903,
											"end": 8912,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8894,
											"end": 8901,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8890,
											"end": 8913,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8886,
											"end": 8919,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8937,
											"end": 8943,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8922,
											"end": 8944,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "tag",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9007,
											"end": 9039,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9007,
											"end": 9039,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9058,
											"end": 9090,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9058,
											"end": 9090,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 9137,
											"end": 9139,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9122,
											"end": 9140,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9122,
											"end": 9140,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9109,
											"end": 9141,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9109,
											"end": 9141,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9188,
											"end": 9191,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9160,
											"end": 9193,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9160,
											"end": 9193,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8873,
											"end": 9199,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8873,
											"end": 9199,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "tag",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 10428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9510,
											"end": 9513,
											"name": "PUSH",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 9498,
											"end": 9507,
											"name": "DUP14",
											"source": 21
										},
										{
											"begin": 9489,
											"end": 9496,
											"name": "DUP16",
											"source": 21
										},
										{
											"begin": 9485,
											"end": 9508,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 9481,
											"end": 9514,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "537"
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9524,
											"end": 9530,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9517,
											"end": 9539,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "tag",
											"source": 21,
											"value": "537"
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9569,
											"end": 9578,
											"name": "DUP13",
											"source": 21
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9619,
											"end": 9645,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9612,
											"end": 9617,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9608,
											"end": 9646,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 9601,
											"end": 9606,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9598,
											"end": 9647,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 9651,
											"end": 9673,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "tag",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9694,
											"end": 9699,
											"name": "SWAP12",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9718,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9718,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 9718,
											"end": 9769,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9718,
											"end": 9769,
											"name": "tag",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 9718,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9708,
											"end": 9769,
											"name": "SWAP11",
											"source": 21
										},
										{
											"begin": 9708,
											"end": 9769,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 9835,
											"end": 9837,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "tag",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 9788,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9778,
											"end": 9839,
											"name": "SWAP10",
											"source": 21
										},
										{
											"begin": 9778,
											"end": 9839,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9858,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "541"
										},
										{
											"begin": 9905,
											"end": 9907,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9894,
											"end": 9903,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9858,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 9858,
											"end": 9909,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9858,
											"end": 9909,
											"name": "tag",
											"source": 21,
											"value": "541"
										},
										{
											"begin": 9858,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9848,
											"end": 9909,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 9848,
											"end": 9909,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9928,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "542"
										},
										{
											"begin": 9974,
											"end": 9977,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 9963,
											"end": 9972,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 9959,
											"end": 9978,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9928,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 9928,
											"end": 9979,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9928,
											"end": 9979,
											"name": "tag",
											"source": 21,
											"value": "542"
										},
										{
											"begin": 9928,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9918,
											"end": 9979,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 9918,
											"end": 9979,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9998,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 10043,
											"end": 10046,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 10028,
											"end": 10047,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9998,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 9998,
											"end": 10048,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 10048,
											"name": "tag",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 9998,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9988,
											"end": 10048,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 9988,
											"end": 10048,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10067,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 10112,
											"end": 10115,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 10097,
											"end": 10116,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10067,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 10067,
											"end": 10117,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10067,
											"end": 10117,
											"name": "tag",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 10067,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10057,
											"end": 10117,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 10057,
											"end": 10117,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10136,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 10172,
											"end": 10181,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 10168,
											"end": 10187,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10136,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 10136,
											"end": 10188,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10136,
											"end": 10188,
											"name": "tag",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 10136,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10126,
											"end": 10188,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 10126,
											"end": 10188,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10228,
											"end": 10231,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 10217,
											"end": 10226,
											"name": "DUP14",
											"source": 21
										},
										{
											"begin": 10213,
											"end": 10232,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10207,
											"end": 10233,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10197,
											"end": 10233,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 10197,
											"end": 10233,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10273,
											"end": 10276,
											"name": "PUSH",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 10262,
											"end": 10271,
											"name": "DUP14",
											"source": 21
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10252,
											"end": 10278,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10242,
											"end": 10278,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10242,
											"end": 10278,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10298,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 10345,
											"end": 10348,
											"name": "PUSH",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 10330,
											"end": 10349,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10298,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 10298,
											"end": 10350,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10350,
											"name": "tag",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 10298,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10287,
											"end": 10350,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10287,
											"end": 10350,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10370,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "PUSH",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 10406,
											"end": 10415,
											"name": "DUP15",
											"source": 21
										},
										{
											"begin": 10402,
											"end": 10421,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10370,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 10370,
											"end": 10422,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10370,
											"end": 10422,
											"name": "tag",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 10370,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10359,
											"end": 10422,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10359,
											"end": 10422,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP12",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP12",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "SWAP12",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 10428,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10433,
											"end": 10539,
											"name": "tag",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 10433,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10501,
											"end": 10532,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10489,
											"end": 10533,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10489,
											"end": 10533,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10479,
											"end": 10539,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10544,
											"end": 10637,
											"name": "tag",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 10544,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10621,
											"end": 10622,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "SIGNEXTEND",
											"source": 21
										},
										{
											"begin": 10598,
											"end": 10631,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10598,
											"end": 10631,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10588,
											"end": 10637,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10642,
											"end": 11233,
											"name": "tag",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 10642,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10771,
											"end": 10792,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10771,
											"end": 10792,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10771,
											"end": 10792,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10759,
											"end": 10793,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10759,
											"end": 10793,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10851,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10835,
											"end": 10851,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10835,
											"end": 10851,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10829,
											"end": 10852,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10825,
											"end": 10857,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10825,
											"end": 10857,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10802,
											"end": 10858,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10911,
											"end": 10915,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10900,
											"end": 10916,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10900,
											"end": 10916,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10900,
											"end": 10916,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10894,
											"end": 10917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10919,
											"end": 10927,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10874,
											"end": 10888,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10874,
											"end": 10888,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10874,
											"end": 10888,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10867,
											"end": 10929,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10982,
											"end": 10986,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 10971,
											"end": 10987,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10971,
											"end": 10987,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10971,
											"end": 10987,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10965,
											"end": 10988,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10961,
											"end": 10993,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10961,
											"end": 10993,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10938,
											"end": 10994,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11043,
											"end": 11047,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 11032,
											"end": 11048,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11032,
											"end": 11048,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11032,
											"end": 11048,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11026,
											"end": 11049,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11010,
											"end": 11024,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11010,
											"end": 11024,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11010,
											"end": 11024,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11003,
											"end": 11050,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10739,
											"end": 10742,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 11088,
											"end": 11104,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11088,
											"end": 11104,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11088,
											"end": 11104,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11082,
											"end": 11105,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11066,
											"end": 11080,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11066,
											"end": 11080,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11066,
											"end": 11080,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11059,
											"end": 11106,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11155,
											"end": 11159,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 11144,
											"end": 11160,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11144,
											"end": 11160,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11144,
											"end": 11160,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11138,
											"end": 11161,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11122,
											"end": 11136,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11122,
											"end": 11136,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11122,
											"end": 11136,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11115,
											"end": 11162,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11215,
											"end": 11219,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 11204,
											"end": 11220,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11204,
											"end": 11220,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11204,
											"end": 11220,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11198,
											"end": 11221,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11194,
											"end": 11226,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11178,
											"end": 11192,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11178,
											"end": 11192,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11171,
											"end": 11227,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10711,
											"end": 11233,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 11238,
											"end": 11332,
											"name": "tag",
											"source": 21,
											"value": "554"
										},
										{
											"begin": 11238,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11316,
											"end": 11324,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 11305,
											"end": 11325,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11326,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11326,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11283,
											"end": 11332,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 11337,
											"end": 11540,
											"name": "tag",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 11337,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11501,
											"end": 11533,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11501,
											"end": 11533,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11501,
											"end": 11533,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11501,
											"end": 11533,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11483,
											"end": 11534,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11483,
											"end": 11534,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11471,
											"end": 11473,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11438,
											"end": 11540,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 11545,
											"end": 12099,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 11545,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11850,
											"end": 11865,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 11850,
											"end": 11865,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11850,
											"end": 11865,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11832,
											"end": 11866,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11832,
											"end": 11866,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11875,
											"end": 11918,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11966,
											"end": 11974,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 11954,
											"end": 11975,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 11975,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 11975,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 11975,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 11934,
											"end": 11952,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11934,
											"end": 11952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11927,
											"end": 11976,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 12012,
											"end": 12033,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12012,
											"end": 12033,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12012,
											"end": 12033,
											"name": "SIGNEXTEND",
											"source": 21
										},
										{
											"begin": 12007,
											"end": 12009,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11985,
											"end": 12034,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12071,
											"end": 12092,
											"name": "SIGNEXTEND",
											"source": 21
										},
										{
											"begin": 12065,
											"end": 12068,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12043,
											"end": 12093,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11781,
											"end": 11784,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 11766,
											"end": 11785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11766,
											"end": 11785,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11748,
											"end": 12099,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12104,
											"end": 12479,
											"name": "tag",
											"source": 21,
											"value": "235"
										},
										{
											"begin": 12104,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12362,
											"end": 12377,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12362,
											"end": 12377,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12362,
											"end": 12377,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12344,
											"end": 12378,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12344,
											"end": 12378,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12409,
											"end": 12411,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12394,
											"end": 12412,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12394,
											"end": 12412,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12387,
											"end": 12430,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12439,
											"end": 12473,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12439,
											"end": 12473,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12439,
											"end": 12473,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12439,
											"end": 12473,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12296,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 12279,
											"end": 12297,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12279,
											"end": 12297,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12261,
											"end": 12479,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12484,
											"end": 12931,
											"name": "tag",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 12484,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12771,
											"end": 12786,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 12771,
											"end": 12786,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12771,
											"end": 12786,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12753,
											"end": 12787,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12753,
											"end": 12787,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12838,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12838,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12838,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12838,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12818,
											"end": 12820,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12796,
											"end": 12839,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12870,
											"end": 12872,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12848,
											"end": 12882,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12913,
											"end": 12915,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12702,
											"end": 12705,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 12687,
											"end": 12706,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12687,
											"end": 12706,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12669,
											"end": 12931,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12936,
											"end": 13123,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 12936,
											"end": 13123,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13101,
											"end": 13115,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13101,
											"end": 13115,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13094,
											"end": 13116,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13076,
											"end": 13117,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13076,
											"end": 13117,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13064,
											"end": 13066,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13031,
											"end": 13123,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13128,
											"end": 13305,
											"name": "tag",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 13128,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13274,
											"end": 13299,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13274,
											"end": 13299,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13274,
											"end": 13299,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13229,
											"end": 13305,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13310,
											"end": 13512,
											"name": "tag",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 13310,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13472,
											"end": 13505,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13505,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13505,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13505,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 13454,
											"end": 13506,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13454,
											"end": 13506,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13442,
											"end": 13444,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13409,
											"end": 13512,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13989,
											"end": 14321,
											"name": "tag",
											"source": 21,
											"value": "387"
										},
										{
											"begin": 13989,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14191,
											"end": 14193,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14203,
											"end": 14232,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD0813DDDB9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14263,
											"end": 14265,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14241,
											"end": 14280,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14163,
											"end": 14321,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 14326,
											"end": 14669,
											"name": "tag",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 14326,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14528,
											"end": 14530,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14510,
											"end": 14531,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14510,
											"end": 14531,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14510,
											"end": 14531,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14567,
											"end": 14569,
											"name": "PUSH",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14540,
											"end": 14570,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1020B236B4B727B922BC32B1BABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14601,
											"end": 14603,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14586,
											"end": 14604,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14586,
											"end": 14604,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14579,
											"end": 14628,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14660,
											"end": 14662,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 14645,
											"end": 14663,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14663,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14500,
											"end": 14669,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 14674,
											"end": 15006,
											"name": "tag",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 14674,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14876,
											"end": 14878,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14858,
											"end": 14879,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14858,
											"end": 14879,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14858,
											"end": 14879,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14915,
											"end": 14916,
											"name": "PUSH",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 14895,
											"end": 14913,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14895,
											"end": 14913,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14895,
											"end": 14913,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14888,
											"end": 14917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1020B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14933,
											"end": 14951,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14933,
											"end": 14951,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14926,
											"end": 14965,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14997,
											"end": 14999,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 14982,
											"end": 15000,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15000,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14848,
											"end": 15006,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 15011,
											"end": 15585,
											"name": "tag",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 15011,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15238,
											"end": 15251,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15238,
											"end": 15251,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15220,
											"end": 15252,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15220,
											"end": 15252,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15294,
											"end": 15318,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15290,
											"end": 15340,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15268,
											"end": 15288,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15268,
											"end": 15288,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15268,
											"end": 15288,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15261,
											"end": 15341,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15388,
											"end": 15392,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15376,
											"end": 15393,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15376,
											"end": 15393,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15376,
											"end": 15393,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15370,
											"end": 15394,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15463,
											"end": 15483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15463,
											"end": 15483,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15463,
											"end": 15483,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15456,
											"end": 15507,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15456,
											"end": 15507,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15456,
											"end": 15507,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15456,
											"end": 15507,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15567,
											"end": 15571,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15555,
											"end": 15572,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15555,
											"end": 15572,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15555,
											"end": 15572,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15549,
											"end": 15573,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15545,
											"end": 15578,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15523,
											"end": 15543,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15523,
											"end": 15543,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15523,
											"end": 15543,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15579,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15579,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15579,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15579,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15207,
											"end": 15210,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 15192,
											"end": 15211,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15192,
											"end": 15211,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15174,
											"end": 15585,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 15590,
											"end": 16150,
											"name": "tag",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 15590,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15590,
											"end": 16150,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15806,
											"end": 15809,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 15795,
											"end": 15804,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15791,
											"end": 15810,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15783,
											"end": 15810,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15783,
											"end": 15810,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15843,
											"end": 15849,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15837,
											"end": 15850,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15826,
											"end": 15835,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15819,
											"end": 15851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15911,
											"end": 15915,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15893,
											"end": 15917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15889,
											"end": 15954,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15871,
											"end": 15880,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15867,
											"end": 15887,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15860,
											"end": 15955,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16011,
											"end": 16015,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 16003,
											"end": 16009,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15999,
											"end": 16016,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15993,
											"end": 16017,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15975,
											"end": 15984,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15971,
											"end": 15991,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15964,
											"end": 16018,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16074,
											"end": 16078,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 16066,
											"end": 16072,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16062,
											"end": 16079,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16056,
											"end": 16080,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16049,
											"end": 16053,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 16038,
											"end": 16047,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16034,
											"end": 16054,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16027,
											"end": 16081,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16137,
											"end": 16141,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 16129,
											"end": 16135,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16125,
											"end": 16142,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16119,
											"end": 16143,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16112,
											"end": 16116,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 16101,
											"end": 16110,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16097,
											"end": 16117,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16090,
											"end": 16144,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15773,
											"end": 16150,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15773,
											"end": 16150,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15773,
											"end": 16150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15773,
											"end": 16150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15773,
											"end": 16150,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 16155,
											"end": 16450,
											"name": "tag",
											"source": 21,
											"value": "306"
										},
										{
											"begin": 16155,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16369,
											"end": 16372,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 16354,
											"end": 16373,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16354,
											"end": 16373,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16382,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 16358,
											"end": 16367,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16426,
											"end": 16432,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16382,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 16382,
											"end": 16444,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 16757,
											"end": 17339,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 16757,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16757,
											"end": 17339,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16976,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 16962,
											"end": 16971,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16958,
											"end": 16977,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16950,
											"end": 16977,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16950,
											"end": 16977,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17010,
											"end": 17016,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17004,
											"end": 17017,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16993,
											"end": 17002,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17074,
											"end": 17078,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17066,
											"end": 17072,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17062,
											"end": 17079,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17056,
											"end": 17080,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17049,
											"end": 17053,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17038,
											"end": 17047,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17034,
											"end": 17054,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17027,
											"end": 17081,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17137,
											"end": 17141,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17129,
											"end": 17135,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17119,
											"end": 17143,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17112,
											"end": 17116,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17101,
											"end": 17110,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17097,
											"end": 17117,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17090,
											"end": 17144,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17200,
											"end": 17204,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17192,
											"end": 17198,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17188,
											"end": 17205,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17182,
											"end": 17206,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17175,
											"end": 17179,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17164,
											"end": 17173,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17153,
											"end": 17207,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17263,
											"end": 17267,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17255,
											"end": 17261,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17251,
											"end": 17268,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17245,
											"end": 17269,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17238,
											"end": 17242,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17227,
											"end": 17236,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17223,
											"end": 17243,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17216,
											"end": 17270,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17326,
											"end": 17330,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 17318,
											"end": 17324,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17314,
											"end": 17331,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17301,
											"end": 17305,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 17290,
											"end": 17299,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17286,
											"end": 17306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17279,
											"end": 17333,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16940,
											"end": 17339,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16940,
											"end": 17339,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16940,
											"end": 17339,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16940,
											"end": 17339,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16940,
											"end": 17339,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 17344,
											"end": 18578,
											"name": "tag",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 17344,
											"end": 18578,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17344,
											"end": 18578,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 17537,
											"name": "PUSH",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 17523,
											"end": 17532,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17519,
											"end": 17538,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17511,
											"end": 17538,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17511,
											"end": 17538,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17547,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "576"
										},
										{
											"begin": 17583,
											"end": 17592,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17568,
											"end": 17581,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17547,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 17547,
											"end": 17593,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17547,
											"end": 17593,
											"name": "tag",
											"source": 21,
											"value": "576"
										},
										{
											"begin": 17547,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17632,
											"end": 17638,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17628,
											"end": 17645,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17622,
											"end": 17646,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "577"
										},
										{
											"begin": 17705,
											"end": 17709,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17694,
											"end": 17703,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17690,
											"end": 17710,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17676,
											"end": 17688,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "tag",
											"source": 21,
											"value": "577"
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17655,
											"end": 17711,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17760,
											"end": 17764,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17752,
											"end": 17758,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17748,
											"end": 17765,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17742,
											"end": 17766,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 17826,
											"end": 17830,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17815,
											"end": 17824,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17811,
											"end": 17831,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17795,
											"end": 17809,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "554"
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "tag",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17775,
											"end": 17832,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17881,
											"end": 17885,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17873,
											"end": 17879,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17869,
											"end": 17886,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17863,
											"end": 17887,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "579"
										},
										{
											"begin": 17946,
											"end": 17950,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17935,
											"end": 17944,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17931,
											"end": 17951,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17915,
											"end": 17929,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "tag",
											"source": 21,
											"value": "579"
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17896,
											"end": 17952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18001,
											"end": 18005,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17993,
											"end": 17999,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17983,
											"end": 18007,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 18066,
											"end": 18070,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 18055,
											"end": 18064,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18051,
											"end": 18071,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18035,
											"end": 18049,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "tag",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18016,
											"end": 18072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18128,
											"end": 18132,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 18120,
											"end": 18126,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18116,
											"end": 18133,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18110,
											"end": 18134,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18103,
											"end": 18107,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 18092,
											"end": 18101,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18088,
											"end": 18108,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18081,
											"end": 18135,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18191,
											"end": 18195,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 18183,
											"end": 18189,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18179,
											"end": 18196,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18173,
											"end": 18197,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18166,
											"end": 18170,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 18155,
											"end": 18164,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18151,
											"end": 18171,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18144,
											"end": 18198,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18254,
											"end": 18258,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18242,
											"end": 18259,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18236,
											"end": 18260,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18229,
											"end": 18233,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 18218,
											"end": 18227,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18214,
											"end": 18234,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18207,
											"end": 18261,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18280,
											"end": 18286,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 18340,
											"end": 18342,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 18332,
											"end": 18338,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18328,
											"end": 18343,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18322,
											"end": 18344,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18317,
											"end": 18319,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18302,
											"end": 18320,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18295,
											"end": 18345,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18295,
											"end": 18345,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18364,
											"end": 18370,
											"name": "PUSH",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 18419,
											"end": 18421,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 18411,
											"end": 18417,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18407,
											"end": 18422,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18401,
											"end": 18423,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18432,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 18484,
											"end": 18486,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18473,
											"end": 18482,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18453,
											"end": 18467,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18432,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 18432,
											"end": 18488,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 18432,
											"end": 18488,
											"name": "tag",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 18432,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18507,
											"end": 18513,
											"name": "PUSH",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 18555,
											"end": 18570,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 18555,
											"end": 18570,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18555,
											"end": 18570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18549,
											"end": 18571,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18522,
											"end": 18572,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17501,
											"end": 18578,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17501,
											"end": 18578,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 18583,
											"end": 18943,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 18583,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 18785,
											"end": 18851,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18785,
											"end": 18851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18882,
											"end": 18884,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18867,
											"end": 18885,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18867,
											"end": 18885,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18860,
											"end": 18894,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18860,
											"end": 18894,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18860,
											"end": 18894,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18860,
											"end": 18894,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18925,
											"end": 18927,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 18910,
											"end": 18928,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18910,
											"end": 18928,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18903,
											"end": 18937,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18773,
											"end": 18775,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 18758,
											"end": 18776,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18758,
											"end": 18776,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18740,
											"end": 18943,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19130,
											"end": 19590,
											"name": "tag",
											"source": 21,
											"value": "389"
										},
										{
											"begin": 19130,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19359,
											"end": 19384,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 19359,
											"end": 19384,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 19359,
											"end": 19384,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19458,
											"end": 19473,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19458,
											"end": 19473,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19458,
											"end": 19473,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 19453,
											"end": 19455,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19431,
											"end": 19474,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19510,
											"end": 19525,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19510,
											"end": 19525,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 19505,
											"end": 19507,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 19490,
											"end": 19508,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19490,
											"end": 19508,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19483,
											"end": 19526,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19574,
											"end": 19582,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 19562,
											"end": 19583,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 19557,
											"end": 19559,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 19542,
											"end": 19560,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19542,
											"end": 19560,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19584,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19346,
											"end": 19349,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 19331,
											"end": 19350,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19331,
											"end": 19350,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19313,
											"end": 19590,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19595,
											"end": 20027,
											"name": "tag",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 19595,
											"end": 20027,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19826,
											"end": 19851,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 19826,
											"end": 19851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 19826,
											"end": 19851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19887,
											"end": 19934,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19887,
											"end": 19934,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19887,
											"end": 19934,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19887,
											"end": 19934,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 19882,
											"end": 19884,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19860,
											"end": 19935,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19966,
											"end": 19968,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 19951,
											"end": 19969,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19951,
											"end": 19969,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19944,
											"end": 19978,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20009,
											"end": 20011,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 19994,
											"end": 20012,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19994,
											"end": 20012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19987,
											"end": 20021,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19813,
											"end": 19816,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 19798,
											"end": 19817,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19798,
											"end": 19817,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19780,
											"end": 20027,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20032,
											"end": 20280,
											"name": "tag",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 20032,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20206,
											"end": 20231,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20206,
											"end": 20231,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20206,
											"end": 20231,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20262,
											"end": 20264,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20247,
											"end": 20265,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20247,
											"end": 20265,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20240,
											"end": 20274,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20194,
											"end": 20196,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 20179,
											"end": 20197,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20179,
											"end": 20197,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20161,
											"end": 20280,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20285,
											"end": 20686,
											"name": "tag",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 20285,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20510,
											"end": 20535,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 20510,
											"end": 20535,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20510,
											"end": 20535,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20566,
											"end": 20568,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20551,
											"end": 20569,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20551,
											"end": 20569,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20544,
											"end": 20578,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20544,
											"end": 20578,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20544,
											"end": 20578,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20544,
											"end": 20578,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20609,
											"end": 20611,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 20594,
											"end": 20612,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 20594,
											"end": 20612,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20587,
											"end": 20621,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20664,
											"end": 20678,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 20657,
											"end": 20679,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 20652,
											"end": 20654,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 20637,
											"end": 20655,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20637,
											"end": 20655,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20630,
											"end": 20680,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20497,
											"end": 20500,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 20482,
											"end": 20501,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20482,
											"end": 20501,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20464,
											"end": 20686,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20691,
											"end": 21123,
											"name": "tag",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 20691,
											"end": 21123,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20922,
											"end": 20947,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 20922,
											"end": 20947,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20922,
											"end": 20947,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20978,
											"end": 20980,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20963,
											"end": 20981,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20963,
											"end": 20981,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 20990,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 20990,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 20990,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 20990,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21021,
											"end": 21023,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 21006,
											"end": 21024,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21006,
											"end": 21024,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20999,
											"end": 21033,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21069,
											"end": 21116,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21064,
											"end": 21066,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 21049,
											"end": 21067,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21049,
											"end": 21067,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21042,
											"end": 21117,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20909,
											"end": 20912,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20876,
											"end": 21123,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21128,
											"end": 21261,
											"name": "tag",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 21128,
											"end": 21261,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21205,
											"end": 21236,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21205,
											"end": 21236,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21195,
											"end": 21237,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21195,
											"end": 21237,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 21185,
											"end": 21187,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 21185,
											"end": 21187,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21251,
											"end": 21252,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21248,
											"end": 21249,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21241,
											"end": 21253,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 21185,
											"end": 21187,
											"name": "tag",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 21185,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21175,
											"end": 21261,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21175,
											"end": 21261,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21266,
											"end": 21386,
											"name": "tag",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 21266,
											"end": 21386,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21355,
											"end": 21360,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21352,
											"end": 21353,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 21341,
											"end": 21361,
											"name": "SIGNEXTEND",
											"source": 21
										},
										{
											"begin": 21334,
											"end": 21339,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21331,
											"end": 21362,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21323,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 21321,
											"end": 21323,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21376,
											"end": 21377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21373,
											"end": 21374,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21366,
											"end": 21378,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 21391,
											"end": 21539,
											"name": "tag",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 21391,
											"end": 21539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21472,
											"end": 21477,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21468,
											"end": 21514,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21461,
											"end": 21466,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21458,
											"end": 21515,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 21448,
											"end": 21450,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 21448,
											"end": 21450,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21529,
											"end": 21530,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21526,
											"end": 21527,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21519,
											"end": 21531,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 21544,
											"end": 21665,
											"name": "tag",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 21544,
											"end": 21665,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21631,
											"end": 21639,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 21624,
											"end": 21629,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21620,
											"end": 21640,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21613,
											"end": 21618,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 21600,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 21600,
											"end": 21602,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21655,
											"end": 21656,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21652,
											"end": 21653,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21645,
											"end": 21657,
											"name": "REVERT",
											"source": 21
										}
									],
									".data": {
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A": "d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								},
								"C690EE39C61CD2467CA78047546D7D01E837EB538AB70DAC257590F3599B654A": "d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
								"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
							}
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EXECUTOR_ROLE()": "07bd0265",
							"approve(address,address,uint256)": "e1f21c67",
							"approveInfinity(address,address)": "a8243558",
							"approveManager(address,address,uint256,uint256)": "25eb6e6f",
							"approveRouter(address,address,uint256,uint256)": "57706e74",
							"collectFees(uint256,bool)": "3a483cb0",
							"decreaseLiquidity(uint256,uint128,uint256,uint256)": "8e5f5977",
							"deposits(uint256)": "b02c43d0",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseLiquidity(uint256,uint256,uint256,uint256,uint256)": "c691b0a1",
							"mintNewPosition(address,address,uint24,int24,int24,uint256,uint256,uint256,uint256)": "dd37019d",
							"nonfungiblePositionManager()": "b44a2722",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"redeemNFT(uint256,address)": "3ef4c3d4",
							"redeemOwnership(address,address)": "1c8c9980",
							"redeemToken(address,address,uint256)": "0d71bdc3",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"swapExactInputSingle(address,address,uint24,uint256,uint256,uint160)": "b4580507",
							"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint160)": "4c8c7314",
							"swapRouter()": "c31c9c07",
							"transferForDeposit(uint256,uint256,uint256)": "7d42c461",
							"transferForTokens(address,address,uint256,uint256)": "dce008af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"_nonfungiblePositionManager\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exec\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withdrawal\",\"type\":\"bool\"}],\"name\":\"CollectedFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXECUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"approveInfinity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"approveManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"approveRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdraw\",\"type\":\"bool\"}],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"}],\"name\":\"mintNewPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"redeemNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTransfer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"redeemOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"redeemToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tkn0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tkn1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tkn0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tkn1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"transferForDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"transferForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityController.sol\":\"LiquidityController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/LiquidityController.sol\":{\"keccak256\":\"0x48e92528cf03c21a1ad6985c155e4982b11e70cbc5490dc0804e9e92ac01aea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fac9f6d214a5265ddd2de5c5ffa7405c3cd92dd1cf23b4c24a1b9a16b037b9db\",\"dweb:/ipfs/QmP564HpGjakmAqYaF4Gp6yHstopAiidCLe5Li2WKD6iRn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/LiquidityController.sol:LiquidityController",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)18_storage)"
							},
							{
								"astId": 2191,
								"contract": "contracts/LiquidityController.sol:LiquidityController",
								"label": "deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Deposit)2187_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)18_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)18_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Deposit)2187_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LiquidityController.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)2187_storage"
							},
							"t_struct(AddressSet)1269_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1268,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1004_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Deposit)2187_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityController.Deposit",
								"members": [
									{
										"astId": 2178,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "token0",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2180,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "token1",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2182,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "fee",
										"offset": 20,
										"slot": "1",
										"type": "t_uint24"
									},
									{
										"astId": 2184,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "tickLower",
										"offset": 23,
										"slot": "1",
										"type": "t_int24"
									},
									{
										"astId": 2186,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "tickUpper",
										"offset": 26,
										"slot": "1",
										"type": "t_int24"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)18_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 15,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1269_storage"
									},
									{
										"astId": 17,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1004_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 999,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1003,
										"contract": "contracts/LiquidityController.sol:LiquidityController",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1009,
					"file": "@openzeppelin/contracts/access/Ownable.sol",
					"start": 850
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							282
						],
						"Address": [
							970
						],
						"Context": [
							993
						],
						"EnumerableSet": [
							1485
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1486,
							"src": "66:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 971,
							"src": "103:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 994,
							"src": "134:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 993,
										"src": "1478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$993",
											"typeString": "contract Context"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"contractDependencies": [
								993
							],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "166:1276:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								993
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 10,
									"libraryName": {
										"id": 8,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1485,
										"src": "1498:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$1485",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1492:49:0",
									"typeName": {
										"id": 9,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1269,
										"src": "1516:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 970,
										"src": "1552:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$970",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1546:26:0",
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 18,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"scope": 18,
											"src": "1604:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 14,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1269,
												"src": "1604:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"scope": 18,
											"src": "1646:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 16,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1646:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 282,
									"src": "1578:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "1676:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1685:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1676:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 20,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 18,
											"src": "1696:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$18_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 25,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "1727:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 23,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1783:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 34,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2103:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2125:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2160:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:87:0"
									},
									"src": "2080:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2196:198:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 43,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2417:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2439:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "2464:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:71:0"
									},
									"src": "2399:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "2494:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 52,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2792:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2814:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2839:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:71:0"
									},
									"src": "2774:89:0"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "3025:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 62,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "3042:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 64,
																"indexExpression": {
																	"id": 63,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "3049:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3042:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3042:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1269_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1347,
														"src": "3042:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1269_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1269_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 69,
												"nodeType": "Return",
												"src": "3035:45:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2869:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2967:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2966:31:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:6:0"
									},
									"scope": 282,
									"src": "2950:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3327:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 79,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "3344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 81,
																"indexExpression": {
																	"id": 80,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3351:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3344:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3344:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1269_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1361,
														"src": "3344:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1269_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1269_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3337:36:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3093:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:14:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3318:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:9:0"
									},
									"scope": 282,
									"src": "3255:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "4047:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4088:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 97,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "4064:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 99,
																"indexExpression": {
																	"id": 98,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "4071:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4064:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "4064:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1269_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "4064:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1269_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1269_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 104,
												"nodeType": "Return",
												"src": "4057:37:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3386:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3988:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4002:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3987:29:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:9:0"
									},
									"scope": 282,
									"src": "3965:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4348:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 114,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "4365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 116,
														"indexExpression": {
															"id": 115,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "4372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4365:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$18_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 17,
													"src": "4365:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 113,
												"id": 118,
												"nodeType": "Return",
												"src": "4358:29:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "4107:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4304:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:14:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:9:0"
									},
									"scope": 282,
									"src": "4282:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4709:158:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 130,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "4735:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 132,
																		"indexExpression": {
																			"id": 131,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "4742:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4735:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$18_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "4735:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 134,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "4759:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 129,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "4727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4727:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4774:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "4719:105:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "4846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "4852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4835:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "4835:25:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "4400:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4663:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4662:31:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4709:0:0"
									},
									"scope": 282,
									"src": "4644:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "5167:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 156,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "5193:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 158,
																		"indexExpression": {
																			"id": 157,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "5200:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5193:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$18_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "5193:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 160,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "5217:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5217:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 155,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "5185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5185:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5232:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5177:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "5177:106:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5306:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 168,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 166,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5294:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5294:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "5294:26:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4873:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5121:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5135:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5120:31:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:0"
									},
									"scope": 282,
									"src": "5101:226:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5886:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "5915:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5915:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5904:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5896:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5990:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "5990:26:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5333:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5886:0:0"
									},
									"scope": 282,
									"src": "5818:205:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6656:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 202,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "6666:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "6666:25:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "6029:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6622:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6607:31:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6656:0:0"
									},
									"scope": 282,
									"src": "6588:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6896:123:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 217,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "6928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 218,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "6934:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 220,
																"indexExpression": {
																	"id": 219,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6941:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6934:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "6934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 222,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6958:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 216,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "6911:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "EmitStatement",
												"src": "6906:62:0"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 225,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "6978:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 227,
															"indexExpression": {
																"id": 226,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6978:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$18_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "6978:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 229,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "7003:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6978:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "6978:34:0"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "6704:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6860:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6845:33:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6896:0:0"
									},
									"scope": 282,
									"src": "6823:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "7084:125:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 245,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7123:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 240,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "7098:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 242,
																"indexExpression": {
																	"id": 241,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "7105:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7098:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7098:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1269_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1295,
														"src": "7098:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1269_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1269_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "7094:109:0",
												"trueBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "7133:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 248,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "7164:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 249,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "7170:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 250,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "7179:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7179:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 247,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7152:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7152:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 253,
															"nodeType": "EmitStatement",
															"src": "7147:45:0"
														}
													]
												}
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7044:31:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:0:0"
									},
									"scope": 282,
									"src": "7025:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "7275:128:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "7317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 264,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "7289:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$18_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 266,
																"indexExpression": {
																	"id": 265,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7296:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7289:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$18_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7289:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1269_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1321,
														"src": "7289:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1269_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1269_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "7285:112:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7327:70:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 272,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "7358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 273,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "7364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 274,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "7373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 271,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "7346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "7341:45:0"
														}
													]
												}
											}
										]
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "7236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "7250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:31:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7275:0:0"
									},
									"scope": 282,
									"src": "7215:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 283,
							"src": "1443:5962:0"
						}
					],
					"src": "33:7373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							993
						],
						"Ownable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 285,
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 994,
							"src": "66:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 287,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 993,
										"src": "621:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$993",
											"typeString": "contract Context"
										}
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:1"
								}
							],
							"contractDependencies": [
								993
							],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								993
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "635:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 289,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 296,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "691:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "722:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:57:1"
									},
									"src": "664:84:1"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "874:135:1",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "884:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 300,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 302,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "904:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:1"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "926:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "935:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "926:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 310,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 314,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "992:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 309,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "959:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "EmitStatement",
												"src": "954:48:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 318,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:1"
									},
									"scope": 392,
									"src": "850:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1140:30:1",
										"statements": [
											{
												"expression": {
													"id": 324,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1157:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "1150:13:1"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:9:1"
									},
									"scope": 392,
									"src": "1085:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1279:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 331,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1297:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 333,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1308:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:1"
											},
											{
												"id": 339,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 341,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:1"
									},
									"src": "1258:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1771:91:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 348,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1807:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 347,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1786:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "EmitStatement",
												"src": "1781:45:1"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 355,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1836:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 345,
											"modifierName": {
												"id": 344,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 341,
												"src": "1761:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:1"
									},
									"scope": 392,
									"src": "1717:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2081:170:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2099:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 373,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 382,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2200:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2179:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2174:43:1"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2227:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 369,
											"modifierName": {
												"id": 368,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 341,
												"src": "2071:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2038:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2037:18:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:1"
									},
									"scope": 392,
									"src": "2011:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 393,
							"src": "592:1661:1"
						}
					],
					"src": "33:2221:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						]
					},
					"id": 405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "66:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 404,
							"linearizedBaseContracts": [
								404
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "370:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "742:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 397,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:20:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "785:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:6:2"
									},
									"scope": 404,
									"src": "715:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 405,
							"src": "346:447:2"
						}
					],
					"src": "33:761:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 406,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 482,
							"linearizedBaseContracts": [
								482
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 482,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 482,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 482,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 482,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 482,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 482,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 472,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 481,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 483,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						],
						"IERC721": [
							598
						]
					},
					"id": 599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 484,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
							"file": "../../introspection/IERC165.sol",
							"id": 485,
							"nodeType": "ImportDirective",
							"scope": 599,
							"sourceUnit": 405,
							"src": "66:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 487,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "198:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$404",
											"typeString": "contract IERC165"
										}
									},
									"id": 488,
									"nodeType": "InheritanceSpecifier",
									"src": "198:7:4"
								}
							],
							"contractDependencies": [
								404
							],
							"contractKind": "interface",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "109:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 598,
							"linearizedBaseContracts": [
								598,
								404
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "212:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 497,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "320:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "342:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "362:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:67:4"
									},
									"src": "305:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "393:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 506,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "507:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "530:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "556:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:74:4"
									},
									"src": "492:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "587:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 515,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "730:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "753:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "779:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:64:4"
									},
									"src": "709:85:4"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "800:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "900:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:15:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "938:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:17:4"
									},
									"scope": 598,
									"src": "881:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "961:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1114:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:17:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1154:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:15:4"
									},
									"scope": 598,
									"src": "1097:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1175:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1896:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1910:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1922:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:43:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:4"
									},
									"scope": 598,
									"src": "1870:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "1954:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2485:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2499:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:43:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2536:0:4"
									},
									"scope": 598,
									"src": "2463:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "2543:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3017:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3017:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3029:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3016:29:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3054:0:4"
									},
									"scope": 598,
									"src": "3000:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "3061:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3226:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:17:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3266:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3265:18:4"
									},
									"scope": 598,
									"src": "3205:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3290:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3631:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3649:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3649:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:34:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3673:0:4"
									},
									"scope": 598,
									"src": "3604:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3680:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3864:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:33:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3905:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3905:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:6:4"
									},
									"scope": 598,
									"src": "3823:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3917:568:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4516:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4530:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4542:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4559:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4559:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:64:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4588:0:4"
									},
									"scope": 598,
									"src": "4490:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 599,
							"src": "177:4414:4"
						}
					],
					"src": "33:4559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						],
						"IERC721": [
							598
						],
						"IERC721Enumerable": [
							629
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 600,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 601,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 599,
							"src": "66:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 603,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 598,
										"src": "259:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$598",
											"typeString": "contract IERC721"
										}
									},
									"id": 604,
									"nodeType": "InheritanceSpecifier",
									"src": "259:7:5"
								}
							],
							"contractDependencies": [
								404,
								598
							],
							"contractKind": "interface",
							"documentation": {
								"id": 602,
								"nodeType": "StructuredDocumentation",
								"src": "91:136:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								598,
								404
							],
							"name": "IERC721Enumerable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "274:82:5",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:5"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:5"
									},
									"scope": 629,
									"src": "361:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "422:171:5",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "627:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "642:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:30:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "680:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:17:5"
									},
									"scope": 629,
									"src": "598:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "703:164:5",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "894:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:15:5"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "932:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:9:5"
									},
									"scope": 629,
									"src": "872:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 630,
							"src": "228:715:5"
						}
					],
					"src": "33:911:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						],
						"IERC721": [
							598
						],
						"IERC721Metadata": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 632,
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 599,
							"src": "66:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 634,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 598,
										"src": "254:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$598",
											"typeString": "contract IERC721"
										}
									},
									"id": 635,
									"nodeType": "InheritanceSpecifier",
									"src": "254:7:6"
								}
							],
							"contractDependencies": [
								404,
								598
							],
							"contractKind": "interface",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "91:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 656,
							"linearizedBaseContracts": [
								656,
								598,
								404
							],
							"name": "IERC721Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "269:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "371:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "371:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:15:6"
									},
									"scope": 656,
									"src": "332:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "392:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:6"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "498:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:6"
									},
									"scope": 656,
									"src": "457:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "519:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "632:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:17:6"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "672:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "672:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:6"
									},
									"scope": 656,
									"src": "614:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 657,
							"src": "225:464:6"
						}
					],
					"src": "33:657:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 659,
								"nodeType": "StructuredDocumentation",
								"src": "66:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 674,
							"linearizedBaseContracts": [
								674
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "251:485:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "767:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "785:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "799:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "816:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "816:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:70:7"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "855:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 670,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "855:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:8:7"
									},
									"scope": 674,
									"src": "741:122:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 675,
							"src": "219:646:7"
						}
					],
					"src": "33:833:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "792:347:8",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "989:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 680,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:8",
														"valueSize": 1
													},
													{
														"declaration": 686,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:8",
														"valueSize": 1
													}
												],
												"id": 688,
												"nodeType": "InlineAssembly",
												"src": "1067:41:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "1124:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 684,
												"id": 692,
												"nodeType": "Return",
												"src": "1117:15:8"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "746:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:8"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "786:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:8"
									},
									"scope": 970,
									"src": "726:413:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2127:320:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 705,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2153:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$970",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$970",
																				"typeString": "library Address"
																			}
																		],
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 703,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 708,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2170:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:8"
											},
											{
												"assignments": [
													714,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2299:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 713,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 721,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 715,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2317:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2340:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2370:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2362:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:8"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2075:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2102:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:8"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:8"
									},
									"scope": 970,
									"src": "2056:391:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "3277:82:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3305:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 738,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															745,
															765
														],
														"referencedDeclaration": 765,
														"src": "3292:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 737,
												"id": 743,
												"nodeType": "Return",
												"src": "3285:67:8"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "3210:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "3226:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:8"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "3263:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:8"
									},
									"scope": 970,
									"src": "3188:171:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3698:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3737:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "3745:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 761,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3754:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 757,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															785,
															835
														],
														"referencedDeclaration": 835,
														"src": "3715:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 756,
												"id": 763,
												"nodeType": "Return",
												"src": "3708:59:8"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3603:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3619:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3638:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 751,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3684:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:8"
									},
									"scope": 970,
									"src": "3581:193:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "4249:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "4288:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 780,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4302:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 777,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															785,
															835
														],
														"referencedDeclaration": 835,
														"src": "4266:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 776,
												"id": 783,
												"nodeType": "Return",
												"src": "4259:94:8"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4167:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4183:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4202:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:8"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4235:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:8"
									},
									"scope": 970,
									"src": "4136:224:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "4749:382:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 802,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4775:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$970",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$970",
																				"typeString": "library Address"
																			}
																		],
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 800,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 805,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "4792:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4759:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 812,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4869:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 811,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "4858:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4850:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:8"
											},
											{
												"assignments": [
													818,
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "4981:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 817,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "4995:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 819,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"id": 825,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "5050:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 821,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "5022:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 823,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "5042:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "5090:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 830,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5099:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 831,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "5111:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 828,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "5072:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 798,
												"id": 833,
												"nodeType": "Return",
												"src": "5065:59:8"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4639:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4655:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4674:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4689:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:8"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4735:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:8"
									},
									"scope": 970,
									"src": "4608:523:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "5408:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "5444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "5452:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 845,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															852,
															887
														],
														"referencedDeclaration": 887,
														"src": "5425:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 844,
												"id": 850,
												"nodeType": "Return",
												"src": "5418:80:8"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5352:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:8"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5394:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:8"
									},
									"scope": 970,
									"src": "5308:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "5817:288:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 866,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "5846:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 865,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "5835:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5827:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:8"
											},
											{
												"assignments": [
													872,
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "5965:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 871,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "5979:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 873,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"id": 877,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "6024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 875,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "6006:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "6064:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 882,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "6073:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 883,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "6085:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 880,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "6046:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 863,
												"id": 885,
												"nodeType": "Return",
												"src": "6039:59:8"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "5717:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "5733:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "5752:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:8"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "5803:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:8"
									},
									"scope": 970,
									"src": "5689:416:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "6381:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "6419:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "6427:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 897,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															939
														],
														"referencedDeclaration": 939,
														"src": "6398:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 896,
												"id": 902,
												"nodeType": "Return",
												"src": "6391:84:8"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6314:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6330:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:8"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6367:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:8"
									},
									"scope": 970,
									"src": "6284:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "6793:292:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 918,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "6822:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 917,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "6811:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:8"
											},
											{
												"assignments": [
													924,
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 938,
														"src": "6943:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 923,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 938,
														"src": "6957:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 925,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [
														{
															"id": 929,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7004:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 927,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "6984:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "7044:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 934,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "7053:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 935,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7065:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 932,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "7026:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 915,
												"id": 937,
												"nodeType": "Return",
												"src": "7019:59:8"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "6698:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "6714:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "6733:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "6779:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:8"
									},
									"scope": 970,
									"src": "6668:417:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "7220:596:8",
										"statements": [
											{
												"condition": {
													"id": 950,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 941,
													"src": "7234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "7291:519:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 954,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7375:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 964,
																"nodeType": "Block",
																"src": "7747:53:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 961,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 945,
																					"src": "7772:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 960,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7765:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 963,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:8"
																	}
																]
															},
															"id": 965,
															"nodeType": "IfStatement",
															"src": "7371:429:8",
															"trueBody": {
																"id": 959,
																"nodeType": "Block",
																"src": "7398:343:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:8"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 943,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 943,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 958,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "7230:580:8",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "7243:42:8",
													"statements": [
														{
															"expression": {
																"id": 951,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "7264:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 949,
															"id": 952,
															"nodeType": "Return",
															"src": "7257:17:8"
														}
													]
												}
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7118:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7132:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7157:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7206:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:8"
									},
									"scope": 970,
									"src": "7091:725:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 971,
							"src": "134:7684:8"
						}
					],
					"src": "33:7786:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 993,
							"linearizedBaseContracts": [
								993
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "668:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 977,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "685:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 976,
												"id": 979,
												"nodeType": "Return",
												"src": "678:17:9"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:9"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "651:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:9"
									},
									"scope": 993,
									"src": "598:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "773:165:9",
										"statements": [
											{
												"expression": {
													"id": 986,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "783:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$993",
														"typeString": "contract Context"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "783:4:9"
											},
											{
												"expression": {
													"expression": {
														"id": 988,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "923:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 985,
												"id": 990,
												"nodeType": "Return",
												"src": "916:15:9"
											}
										]
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:9"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "759:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:9"
									},
									"scope": 993,
									"src": "708:230:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 994,
							"src": "566:374:9"
						}
					],
					"src": "33:908:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1485
						]
					},
					"id": 1486,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 996,
								"nodeType": "StructuredDocumentation",
								"src": "66:686:10",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1485,
							"linearizedBaseContracts": [
								1485
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1004,
									"members": [
										{
											"constant": false,
											"id": 999,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"scope": 1004,
											"src": "1275:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 998,
												"nodeType": "ArrayTypeName",
												"src": "1275:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1003,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"scope": 1004,
											"src": "1426:37:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1002,
												"keyType": {
													"id": 1000,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1426:28:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1485,
									"src": "1221:249:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "1709:335:10",
										"statements": [
											{
												"condition": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1723:22:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1015,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "1734:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1016,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "1739:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1014,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "1724:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1724:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1042,
													"nodeType": "Block",
													"src": "2001:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1013,
															"id": 1041,
															"nodeType": "Return",
															"src": "2015:12:10"
														}
													]
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "1719:319:10",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "1747:248:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1024,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "1778:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1019,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1761:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 999,
																		"src": "1761:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1761:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "ExpressionStatement",
															"src": "1761:23:10"
														},
														{
															"expression": {
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1027,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1919:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1003,
																		"src": "1919:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1031,
																	"indexExpression": {
																		"id": 1029,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "1932:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1919:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1032,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1941:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 999,
																		"src": "1941:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1941:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1919:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1036,
															"nodeType": "ExpressionStatement",
															"src": "1919:40:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1013,
															"id": 1038,
															"nodeType": "Return",
															"src": "1973:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1476:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1654:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1006,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1004,
													"src": "1654:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1671:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:32:10"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1703:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:10"
									},
									"scope": 1485,
									"src": "1640:404:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2284:1440:10",
										"statements": [
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "2394:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2394:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1057,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "2415:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1003,
														"src": "2415:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1060,
													"indexExpression": {
														"id": 1059,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2428:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2415:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2394:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2449:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2449:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "3681:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3702:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1054,
															"id": 1121,
															"nodeType": "Return",
															"src": "3695:12:10"
														}
													]
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "2445:1273:10",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "2466:1209:10",
													"statements": [
														{
															"assignments": [
																1066
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1066,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1119,
																	"src": "2806:21:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2806:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1070,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1067,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2830:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2843:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2830:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2806:38:10"
														},
														{
															"assignments": [
																1072
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1072,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1119,
																	"src": "2858:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2858:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1078,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1073,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "2878:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 999,
																		"src": "2878:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2878:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2878:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2858:42:10"
														},
														{
															"assignments": [
																1080
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1080,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"scope": 1119,
																	"src": "3140:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1079,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3140:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1085,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1081,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "3160:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 999,
																	"src": "3160:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1084,
																"indexExpression": {
																	"id": 1083,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "3172:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3160:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3140:42:10"
														},
														{
															"expression": {
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1086,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "3274:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 999,
																		"src": "3274:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1090,
																	"indexExpression": {
																		"id": 1088,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "3286:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3274:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1091,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "3303:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3274:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1093,
															"nodeType": "ExpressionStatement",
															"src": "3274:38:10"
														},
														{
															"expression": {
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1094,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "3378:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1003,
																		"src": "3378:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1098,
																	"indexExpression": {
																		"id": 1096,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "3391:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3378:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1099,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "3404:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3420:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3404:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3378:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"nodeType": "ExpressionStatement",
															"src": "3378:43:10"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1104,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "3527:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 999,
																		"src": "3527:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3527:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1110,
															"nodeType": "ExpressionStatement",
															"src": "3527:17:10"
														},
														{
															"expression": {
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3612:26:10",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1111,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "3619:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1003,
																		"src": "3619:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1114,
																	"indexExpression": {
																		"id": 1113,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "3632:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3619:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "3612:26:10"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1054,
															"id": 1118,
															"nodeType": "Return",
															"src": "3653:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "2050:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2229:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1047,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1004,
													"src": "2229:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:32:10"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2278:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:6:10"
									},
									"scope": 1485,
									"src": "2212:1512:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "3884:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1135,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "3901:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1003,
															"src": "3901:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1138,
														"indexExpression": {
															"id": 1137,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "3914:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3924:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3901:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1141,
												"nodeType": "Return",
												"src": "3894:31:10"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "3730:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3824:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1127,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1004,
													"src": "3824:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3841:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:32:10"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3878:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:6:10"
									},
									"scope": 1485,
									"src": "3805:127:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "4078:42:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1151,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "4095:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 999,
														"src": "4095:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4095:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1154,
												"nodeType": "Return",
												"src": "4088:25:10"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "3938:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4030:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1145,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1004,
													"src": "4030:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:17:10"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "4069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:9:10"
									},
									"scope": 1485,
									"src": "4013:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "4528:125:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1167,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "4546:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 999,
																	"src": "4546:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4546:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1170,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "4567:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4546:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4574:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4538:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "4538:73:10"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1175,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4628:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 999,
														"src": "4628:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1178,
													"indexExpression": {
														"id": 1177,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4640:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4628:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1179,
												"nodeType": "Return",
												"src": "4621:25:10"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "4125:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4465:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1158,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1004,
													"src": "4465:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4482:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:32:10"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4519:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:9:10"
									},
									"scope": 1485,
									"src": "4452:201:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1184,
									"members": [
										{
											"constant": false,
											"id": 1183,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1184,
											"src": "4706:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1182,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1004,
												"src": "4706:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 1485,
									"src": "4678:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "4969:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1195,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "4991:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "4991:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1197,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "5003:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1194,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "4986:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1199,
												"nodeType": "Return",
												"src": "4979:30:10"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "4729:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "4906:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1186,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1184,
													"src": "4906:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "4930:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:39:10"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "4963:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4962:6:10"
									},
									"scope": 1485,
									"src": "4893:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "5263:50:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1212,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "5288:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "5288:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1214,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "5300:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1211,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "5280:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1216,
												"nodeType": "Return",
												"src": "5273:33:10"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "5022:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5200:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1203,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1184,
													"src": "5200:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5199:39:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5257:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5257:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5256:6:10"
									},
									"scope": 1485,
									"src": "5184:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "5480:52:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1229,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "5507:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "5507:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1231,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "5519:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1228,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "5497:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1233,
												"nodeType": "Return",
												"src": "5490:35:10"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "5319:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5412:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1220,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1184,
													"src": "5412:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5436:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:39:10"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5474:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5474:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5473:6:10"
									},
									"scope": 1485,
									"src": "5394:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "5685:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1244,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "5710:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "5710:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1243,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "5702:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1247,
												"nodeType": "Return",
												"src": "5695:26:10"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "5538:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5629:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1237,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1184,
													"src": "5629:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:24:10"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5675:9:10"
									},
									"scope": 1485,
									"src": "5613:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "6143:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1260,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "6164:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "6164:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1262,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "6176:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "6160:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1264,
												"nodeType": "Return",
												"src": "6153:29:10"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "5733:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6072:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1251,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1184,
													"src": "6072:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1184_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6096:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6071:39:10"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6134:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:9:10"
									},
									"scope": 1485,
									"src": "6060:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1269,
									"members": [
										{
											"constant": false,
											"id": 1268,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1269,
											"src": "6242:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1267,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1004,
												"src": "6242:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1485,
									"src": "6214:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "6505:74:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "6527:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "6527:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1288,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1274,
																					"src": "6563:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6555:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1286,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6555:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6547:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6547:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6547:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6539:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6539:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6539:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1279,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "6522:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1293,
												"nodeType": "Return",
												"src": "6515:57:10"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "6265:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6442:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1271,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1269,
													"src": "6442:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6466:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:39:10"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6499:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6499:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:6:10"
									},
									"scope": 1485,
									"src": "6429:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "6826:77:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1306,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "6851:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "6851:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1314,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1300,
																					"src": "6887:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6879:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1312,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6879:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6879:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6871:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1310,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6871:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6871:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6863:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1308,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6863:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1305,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "6843:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1319,
												"nodeType": "Return",
												"src": "6836:60:10"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "6585:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6763:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1297,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1269,
													"src": "6763:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6787:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6762:39:10"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6820:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6820:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:6:10"
									},
									"scope": 1485,
									"src": "6747:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "7070:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1332,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "7097:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "7097:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1340,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "7133:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7125:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1338,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7125:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7125:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7117:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1336,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7117:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7117:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7109:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1334,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7109:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7109:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1331,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "7087:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1345,
												"nodeType": "Return",
												"src": "7080:62:10"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "6909:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7002:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1323,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1269,
													"src": "7002:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7001:39:10"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7064:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7064:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:6:10"
									},
									"scope": 1485,
									"src": "6984:165:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "7302:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1356,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "7327:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "7327:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1355,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "7319:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1359,
												"nodeType": "Return",
												"src": "7312:26:10"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "7155:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "7246:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1349,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1269,
													"src": "7246:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7245:24:10"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "7293:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7292:9:10"
									},
									"scope": 1485,
									"src": "7230:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "7760:73:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1378,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1364,
																						"src": "7805:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1379,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1268,
																					"src": "7805:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1004_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1380,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "7817:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1004_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1377,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "7801:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7801:22:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7793:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1375,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7793:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7793:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7785:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1373,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "7785:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7785:40:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7777:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1371,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7777:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1385,
												"nodeType": "Return",
												"src": "7770:56:10"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "7350:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "7689:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1363,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1269,
													"src": "7689:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1269_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "7713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7688:39:10"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "7751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:9:10"
									},
									"scope": 1485,
									"src": "7677:156:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1390,
									"members": [
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1390,
											"src": "7881:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1388,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1004,
												"src": "7881:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1004_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1485,
									"src": "7856:42:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "8141:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1401,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "8163:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "8163:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "8183:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8175:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1403,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8175:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8175:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1400,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "8158:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1408,
												"nodeType": "Return",
												"src": "8151:39:10"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "7904:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "8081:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1392,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1390,
													"src": "8081:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "8102:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8102:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8080:36:10"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "8135:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8135:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:6:10"
									},
									"scope": 1485,
									"src": "8068:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "8441:59:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1421,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "8466:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "8466:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1425,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8486:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8478:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1423,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8478:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8478:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1420,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "8458:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1428,
												"nodeType": "Return",
												"src": "8451:42:10"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "8203:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "8381:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1412,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1390,
													"src": "8381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "8402:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:36:10"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "8435:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8435:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:6:10"
									},
									"scope": 1485,
									"src": "8365:135:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "8664:61:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1441,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "8691:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "8691:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1445,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "8711:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8703:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1443,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8703:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8703:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1440,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "8681:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8681:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1448,
												"nodeType": "Return",
												"src": "8674:44:10"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "8506:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "8599:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1432,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1390,
													"src": "8599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "8620:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:36:10"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "8658:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:6:10"
									},
									"scope": 1485,
									"src": "8581:144:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "8875:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1459,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "8900:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1389,
															"src": "8900:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1004_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1458,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "8892:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8892:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1457,
												"id": 1462,
												"nodeType": "Return",
												"src": "8885:26:10"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "8731:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "8822:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1452,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1390,
													"src": "8822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8821:21:10"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "8866:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8865:9:10"
									},
									"scope": 1485,
									"src": "8806:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "9330:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1477,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "9359:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1389,
																	"src": "9359:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1004_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1479,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "9371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1004_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1476,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "9355:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1004_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9355:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9347:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1474,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9347:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1482,
												"nodeType": "Return",
												"src": "9340:38:10"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "8923:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "9262:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1466,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1390,
													"src": "9262:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1390_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "9283:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9261:36:10"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "9321:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:10"
									},
									"scope": 1485,
									"src": "9250:135:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1486,
							"src": "753:8634:10"
						}
					],
					"src": "33:9355:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							1499
						]
					},
					"id": 1500,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1487,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1488,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:11",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1499,
							"linearizedBaseContracts": [
								1499
							],
							"name": "IUniswapV3SwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:11",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1197:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1490,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1226:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1492,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1255:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:11"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:11"
									},
									"scope": 1499,
									"src": "1157:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1500,
							"src": "215:1077:11"
						}
					],
					"src": "45:1248:11"
				},
				"id": 11
			},
			"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						],
						"IERC721": [
							598
						],
						"IERC721Permit": [
							1534
						]
					},
					"id": 1535,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1501,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1502,
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 599,
							"src": "71:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1504,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 598,
										"src": "282:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$598",
											"typeString": "contract IERC721"
										}
									},
									"id": 1505,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:12"
								}
							],
							"contractDependencies": [
								404,
								598
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "131:124:12",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1534,
							"linearizedBaseContracts": [
								1534,
								598,
								404
							],
							"name": "IERC721Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "296:104:12",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:12"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "455:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:12"
									},
									"scope": 1534,
									"src": "405:59:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "470:135:12",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:12"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "661:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:12"
									},
									"scope": 1534,
									"src": "610:60:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "676:605:12",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1311:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1336:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1361:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1387:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1525,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1387:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1404:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1423:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:137:12"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:0:12"
									},
									"scope": 1534,
									"src": "1286:170:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1535,
							"src": "255:1203:12"
						}
					],
					"src": "45:1414:12"
				},
				"id": 12
			},
			"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							404
						],
						"IERC721": [
							598
						],
						"IERC721Enumerable": [
							629
						],
						"IERC721Metadata": [
							656
						],
						"IERC721Permit": [
							1534
						],
						"INonfungiblePositionManager": [
							1729
						],
						"IPeripheryImmutableState": [
							1745
						],
						"IPeripheryPayments": [
							1771
						],
						"IPoolInitializer": [
							1790
						],
						"PoolAddress": [
							1978
						]
					},
					"id": 1730,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"id": 1537,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"id": 1538,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 657,
							"src": "91:66:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"id": 1539,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 630,
							"src": "158:68:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1540,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 1791,
							"src": "228:32:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1541,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 1535,
							"src": "261:29:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1542,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 1772,
							"src": "291:34:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1543,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 1746,
							"src": "326:40:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "../libraries/PoolAddress.sol",
							"id": 1544,
							"nodeType": "ImportDirective",
							"scope": 1730,
							"sourceUnit": 1979,
							"src": "367:38:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1546,
										"name": "IPoolInitializer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1790,
										"src": "629:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolInitializer_$1790",
											"typeString": "contract IPoolInitializer"
										}
									},
									"id": 1547,
									"nodeType": "InheritanceSpecifier",
									"src": "629:16:13"
								},
								{
									"baseName": {
										"id": 1548,
										"name": "IPeripheryPayments",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1771,
										"src": "651:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryPayments_$1771",
											"typeString": "contract IPeripheryPayments"
										}
									},
									"id": 1549,
									"nodeType": "InheritanceSpecifier",
									"src": "651:18:13"
								},
								{
									"baseName": {
										"id": 1550,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1745,
										"src": "675:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$1745",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 1551,
									"nodeType": "InheritanceSpecifier",
									"src": "675:24:13"
								},
								{
									"baseName": {
										"id": 1552,
										"name": "IERC721Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 656,
										"src": "705:15:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Metadata_$656",
											"typeString": "contract IERC721Metadata"
										}
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "705:15:13"
								},
								{
									"baseName": {
										"id": 1554,
										"name": "IERC721Enumerable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 629,
										"src": "726:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Enumerable_$629",
											"typeString": "contract IERC721Enumerable"
										}
									},
									"id": 1555,
									"nodeType": "InheritanceSpecifier",
									"src": "726:17:13"
								},
								{
									"baseName": {
										"id": 1556,
										"name": "IERC721Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1534,
										"src": "749:13:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Permit_$1534",
											"typeString": "contract IERC721Permit"
										}
									},
									"id": 1557,
									"nodeType": "InheritanceSpecifier",
									"src": "749:13:13"
								}
							],
							"contractDependencies": [
								404,
								598,
								629,
								656,
								1534,
								1745,
								1771,
								1790
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "407:177:13",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1729,
							"linearizedBaseContracts": [
								1729,
								1534,
								629,
								656,
								598,
								404,
								1745,
								1771,
								1790
							],
							"name": "INonfungiblePositionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "769:458:13",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 1568,
									"name": "IncreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1256:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1281:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1561,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1300:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1317:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:78:13"
									},
									"src": "1232:102:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "1339:419:13",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 1579,
									"name": "DecreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1787:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1812:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1572,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1831:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1848:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:78:13"
									},
									"src": "1763:102:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1870:522:13",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 1590,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2411:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2436:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2455:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2472:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:78:13"
									},
									"src": "2397:92:13"
								},
								{
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "2495:1157:13",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3676:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:17:13"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3753:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1595,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3779:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3779:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3809:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3837:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3837:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3865:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1603,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3865:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3889:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1605,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3889:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3918:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1607,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3918:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3947:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1609,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3978:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4024:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4070:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1615,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4103:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1617,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:393:13"
									},
									"scope": 1729,
									"src": "3657:476:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1643,
									"members": [
										{
											"constant": false,
											"id": 1622,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4167:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1621,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4167:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1624,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4191:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1623,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4191:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1626,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4215:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1625,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4215:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1628,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4235:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1627,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4235:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1630,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4260:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1629,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4260:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1632,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4285:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1631,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4285:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1634,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4317:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1633,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4317:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1636,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4349:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1635,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4349:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1638,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4377:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1637,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4377:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1640,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4405:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1639,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4405:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1642,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "4432:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1641,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4432:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nodeType": "StructDefinition",
									"scope": 1729,
									"src": "4139:316:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "4461:586:13",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5066:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1643_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1645,
													"name": "MintParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1643,
													"src": "5066:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1643_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5065:28:13"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5157:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5186:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1650,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5217:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5246:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:128:13"
									},
									"scope": 1729,
									"src": "5052:220:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1670,
									"members": [
										{
											"constant": false,
											"id": 1659,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5319:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1658,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5319:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1661,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5344:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1660,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5344:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1663,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5376:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1662,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5376:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1665,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5408:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1664,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5408:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1667,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5436:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1666,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5436:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1669,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "5464:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1668,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5464:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1729,
									"src": "5278:209:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "5493:821:13",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6346:39:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1672,
													"name": "IncreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1670,
													"src": "6346:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6345:41:13"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6450:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1675,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6450:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6481:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6510:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6436:99:13"
									},
									"scope": 1729,
									"src": "6319:217:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1693,
									"members": [
										{
											"constant": false,
											"id": 1684,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "6583:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1683,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6583:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1686,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "6608:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1685,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6608:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1688,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "6635:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1687,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6635:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1690,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "6663:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6663:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1692,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "6691:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6691:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1729,
									"src": "6542:172:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "6720:702:13",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7454:39:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1695,
													"name": "DecreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1693,
													"src": "7454:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:41:13"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7545:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7562:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:34:13"
									},
									"scope": 1729,
									"src": "7427:152:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1712,
									"members": [
										{
											"constant": false,
											"id": 1705,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1712,
											"src": "7616:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1704,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7616:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1707,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1712,
											"src": "7641:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1706,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7641:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1709,
											"mutability": "mutable",
											"name": "amount0Max",
											"nodeType": "VariableDeclaration",
											"scope": 1712,
											"src": "7668:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1708,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7668:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "amount1Max",
											"nodeType": "VariableDeclaration",
											"scope": 1712,
											"src": "7696:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1710,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7696:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nodeType": "StructDefinition",
									"scope": 1729,
									"src": "7585:136:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "7727:489:13",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "8238:29:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1712_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1714,
													"name": "CollectParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1712,
													"src": "8238:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1712_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8237:31:13"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "8295:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "8312:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8312:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8294:34:13"
									},
									"scope": 1729,
									"src": "8221:108:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "8335:213:13",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "8567:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8567:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8566:17:13"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8600:0:13"
									},
									"scope": 1729,
									"src": "8553:48:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1730,
							"src": "584:8019:13"
						}
					],
					"src": "45:8559:13"
				},
				"id": 13
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1745
						]
					},
					"id": 1746,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1731,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1732,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:14",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "IPeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:14",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:14"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "307:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:14"
									},
									"scope": 1745,
									"src": "265:51:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:14",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:14"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "407:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:14"
									},
									"scope": 1745,
									"src": "367:49:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1746,
							"src": "162:256:14"
						}
					],
					"src": "45:374:14"
				},
				"id": 14
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1771
						]
					},
					"id": 1772,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1747,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1748,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:15",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1771,
							"linearizedBaseContracts": [
								1771
							],
							"name": "IPeripheryPayments",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:15",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "526:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "549:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:15"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:15"
									},
									"scope": 1771,
									"src": "505:80:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:15",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:15"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:15"
									},
									"scope": 1771,
									"src": "821:38:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:15",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1326:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1349:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1380:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:15"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:15"
									},
									"scope": 1771,
									"src": "1297:124:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1772,
							"src": "163:1260:15"
						}
					],
					"src": "45:1379:15"
				},
				"id": 15
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							1790
						]
					},
					"id": 1791,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1773,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"id": 1774,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:16",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1790,
							"linearizedBaseContracts": [
								1790
							],
							"name": "IPoolInitializer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:16",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1024:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1048:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1072:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1781,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1092:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1783,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:16"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1145:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:16"
									},
									"scope": 1790,
									"src": "971:188:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1791,
							"src": "285:876:16"
						}
					],
					"src": "45:1117:16"
				},
				"id": 16
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1886
						],
						"IUniswapV3SwapCallback": [
							1499
						]
					},
					"id": 1887,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1792,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"id": 1793,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:17"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 1794,
							"nodeType": "ImportDirective",
							"scope": 1887,
							"sourceUnit": 1500,
							"src": "91:83:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1796,
										"name": "IUniswapV3SwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1499,
										"src": "305:22:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$1499",
											"typeString": "contract IUniswapV3SwapCallback"
										}
									},
									"id": 1797,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:17"
								}
							],
							"contractDependencies": [
								1499
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1795,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:17",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1886,
							"linearizedBaseContracts": [
								1886,
								1499
							],
							"name": "ISwapRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1814,
									"members": [
										{
											"constant": false,
											"id": 1799,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "374:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1798,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1801,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "399:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1800,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1803,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "425:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1802,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1805,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "445:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1804,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1807,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "472:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1806,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1809,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "498:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1808,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1811,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "524:24:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1810,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1813,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 1814,
											"src": "558:25:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1812,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 1886,
									"src": "334:256:17",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:17",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "877:38:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1816,
													"name": "ExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1814,
													"src": "877:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:17"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "943:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:17"
									},
									"scope": 1886,
									"src": "851:111:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1833,
									"members": [
										{
											"constant": false,
											"id": 1824,
											"mutability": "mutable",
											"name": "path",
											"nodeType": "VariableDeclaration",
											"scope": 1833,
											"src": "1002:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1823,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1826,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1833,
											"src": "1022:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1825,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1828,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1833,
											"src": "1049:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1830,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 1833,
											"src": "1075:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1829,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1832,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nodeType": "VariableDeclaration",
											"scope": 1833,
											"src": "1101:24:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1831,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nodeType": "StructDefinition",
									"scope": 1886,
									"src": "968:164:17",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:17",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1436:32:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1833_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1835,
													"name": "ExactInputParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1833,
													"src": "1436:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1833_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:17"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1496:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:17"
									},
									"scope": 1886,
									"src": "1416:99:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1858,
									"members": [
										{
											"constant": false,
											"id": 1843,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1562:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1842,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1845,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1587:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1844,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1847,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1613:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1846,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1849,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1633:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1848,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1851,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1660:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1850,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1853,
											"mutability": "mutable",
											"name": "amountOut",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1686:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1852,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1855,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1713:23:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1854,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1857,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 1858,
											"src": "1746:25:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1856,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 1886,
									"src": "1521:257:17",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:17",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2066:39:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1860,
													"name": "ExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1858,
													"src": "2066:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:17"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2133:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:17"
									},
									"scope": 1886,
									"src": "2039:112:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1877,
									"members": [
										{
											"constant": false,
											"id": 1868,
											"mutability": "mutable",
											"name": "path",
											"nodeType": "VariableDeclaration",
											"scope": 1877,
											"src": "2192:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1867,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1870,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1877,
											"src": "2212:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1869,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1872,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1877,
											"src": "2239:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1871,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1874,
											"mutability": "mutable",
											"name": "amountOut",
											"nodeType": "VariableDeclaration",
											"scope": 1877,
											"src": "2265:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1876,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nodeType": "VariableDeclaration",
											"scope": 1877,
											"src": "2292:23:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1875,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nodeType": "StructDefinition",
									"scope": 1886,
									"src": "2157:165:17",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:17",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2638:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1877_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1879,
													"name": "ExactOutputParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1877,
													"src": "2638:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1877_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:17"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2699:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:17"
									},
									"scope": 1886,
									"src": "2617:100:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1887,
							"src": "280:2439:17"
						}
					],
					"src": "45:2675:17"
				},
				"id": 17
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							1978
						]
					},
					"id": 1979,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1888,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1889,
								"nodeType": "StructuredDocumentation",
								"src": "71:96:18",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1978,
							"linearizedBaseContracts": [
								1978
							],
							"name": "PoolAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1892,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "193:114:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1890,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 1891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:66:18",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 1899,
									"members": [
										{
											"constant": false,
											"id": 1894,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "387:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1893,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1896,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "411:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1895,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1898,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "435:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1897,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "435:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nodeType": "StructDefinition",
									"scope": 1978,
									"src": "362:90:18",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "917:141:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1911,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "931:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1912,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "940:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1922,
												"nodeType": "IfStatement",
												"src": "927:56:18",
												"trueBody": {
													"expression": {
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1914,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "949:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1915,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "957:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "948:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1917,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "968:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1918,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "976:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1919,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "967:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "948:35:18",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1921,
													"nodeType": "ExpressionStatement",
													"src": "948:35:18"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1924,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "1017:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1925,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "1033:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1926,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1046:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1923,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "1000:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1899_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1000:51:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1910,
												"id": 1928,
												"nodeType": "Return",
												"src": "993:58:18"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "458:321:18",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "813:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "837:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "861:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1905,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "861:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:74:18"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "901:14:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1908,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1899,
													"src": "901:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1899_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:16:18"
									},
									"scope": 1978,
									"src": "784:274:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "1403:414:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1941,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1421:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1894,
																"src": "1421:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1943,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1434:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1896,
																"src": "1434:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1413:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "1413:32:18"
											},
											{
												"expression": {
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1948,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "1455:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 1956,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1581:7:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 1957,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1933,
																						"src": "1614:7:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 1961,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1935,
																											"src": "1668:3:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1962,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1894,
																										"src": "1668:10:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1963,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1935,
																											"src": "1680:3:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1964,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1896,
																										"src": "1680:10:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1965,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1935,
																											"src": "1692:3:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1966,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "fee",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1898,
																										"src": "1692:7:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									],
																									"expression": {
																										"id": 1959,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "1657:3:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 1960,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encode",
																									"nodeType": "MemberAccess",
																									"src": "1657:10:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 1967,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1657:43:18",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1958,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "1647:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 1968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1647:54:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 1969,
																						"name": "POOL_INIT_CODE_HASH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1892,
																						"src": "1727:19:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"id": 1954,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "1539:3:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "1539:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1539:229:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1953,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1508:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1508:278:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1483:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1951,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1483:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1483:317:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1462:7:18",
																"typeDescriptions": {}
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1462:348:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1455:355:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "1455:355:18"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "1064:236:18",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1329:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1346:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1899_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1934,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1899,
													"src": "1346:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1899_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:37:18"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "1389:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:14:18"
									},
									"scope": 1978,
									"src": "1305:512:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1979,
							"src": "167:1652:18"
						}
					],
					"src": "45:1775:18"
				},
				"id": 18
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							482
						],
						"TransferHelper": [
							2149
						]
					},
					"id": 2150,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1980,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1981,
							"nodeType": "ImportDirective",
							"scope": 2150,
							"sourceUnit": 483,
							"src": "71:56:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2149,
							"linearizedBaseContracts": [
								2149
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "690:229:19",
										"statements": [
											{
												"assignments": [
													1994,
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1994,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "701:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1993,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "715:17:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1995,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2009,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2001,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "782:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$482_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 463,
																		"src": "782:19:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2004,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "812:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2005,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "818:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1990,
																	"src": "822:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1999,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1997,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "748:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "847:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2012,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "859:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2018,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "890:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2020,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2019,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:19",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2021,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2016,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 2010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "839:73:19"
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:19",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "596:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "619:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "641:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "661:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:19"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:19"
									},
									"scope": 2149,
									"src": "561:358:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "1314:206:19",
										"statements": [
											{
												"assignments": [
													2041,
													2043
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2075,
														"src": "1325:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2040,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2075,
														"src": "1339:17:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2042,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2055,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2048,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "1394:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$482_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 431,
																		"src": "1394:15:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2051,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "1420:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "1424:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2046,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2044,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "1360:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "1449:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2058,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2043,
																					"src": "1461:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2064,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2043,
																					"src": "1492:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2066,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2065,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:19",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2067,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2062,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 2056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:19"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:19",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1242:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1265:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1285:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:19"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:19"
									},
									"scope": 2149,
									"src": "1211:309:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "1975:205:19",
										"statements": [
											{
												"assignments": [
													2087,
													2089
												],
												"declarations": [
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "1986:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2086,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2089,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "2000:17:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2088,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2094,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "2055:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$482_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 451,
																		"src": "2055:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2097,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "2080:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "2084:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2092,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2090,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "2021:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2103,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "2109:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2104,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2089,
																					"src": "2121:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2110,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2089,
																					"src": "2152:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2111,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:19",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2113,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2108,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 2102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:19"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:19",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1903:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1926:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1946:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:19"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:19"
									},
									"scope": 2149,
									"src": "1873:307:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "2431:104:19",
										"statements": [
											{
												"assignments": [
													2131,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2131,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "2442:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2130,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2141,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2136,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2132,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "2460:2:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2134,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "2475:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2143,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "2513:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 2142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2146,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:19"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:19",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2395:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2407:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:19"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:19"
									},
									"scope": 2149,
									"src": "2370:165:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2150,
							"src": "129:2408:19"
						}
					],
					"src": "45:2493:19"
				},
				"id": 19
			},
			"contracts/LiquidityController.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityController.sol",
					"exportedSymbols": {
						"AccessControl": [
							282
						],
						"Address": [
							970
						],
						"Context": [
							993
						],
						"EnumerableSet": [
							1485
						],
						"IERC165": [
							404
						],
						"IERC20": [
							482
						],
						"IERC721": [
							598
						],
						"IERC721Enumerable": [
							629
						],
						"IERC721Metadata": [
							656
						],
						"IERC721Permit": [
							1534
						],
						"IERC721Receiver": [
							674
						],
						"INonfungiblePositionManager": [
							1729
						],
						"IPeripheryImmutableState": [
							1745
						],
						"IPeripheryPayments": [
							1771
						],
						"IPoolInitializer": [
							1790
						],
						"ISwapRouter": [
							1886
						],
						"IUniswapV3SwapCallback": [
							1499
						],
						"LiquidityController": [
							3032
						],
						"Ownable": [
							392
						],
						"PoolAddress": [
							1978
						],
						"TransferHelper": [
							2149
						]
					},
					"id": 3033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2151,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:20"
						},
						{
							"id": 2152,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:19:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 2153,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 675,
							"src": "77:66:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2154,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 283,
							"src": "144:58:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2155,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 393,
							"src": "203:52:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 2156,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 1730,
							"src": "256:84:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 2157,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 2150,
							"src": "341:70:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 2158,
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 1887,
							"src": "412:68:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2159,
										"name": "IERC721Receiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 674,
										"src": "514:15:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Receiver_$674",
											"typeString": "contract IERC721Receiver"
										}
									},
									"id": 2160,
									"nodeType": "InheritanceSpecifier",
									"src": "514:15:20"
								},
								{
									"baseName": {
										"id": 2161,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 282,
										"src": "531:13:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$282",
											"typeString": "contract AccessControl"
										}
									},
									"id": 2162,
									"nodeType": "InheritanceSpecifier",
									"src": "531:13:20"
								}
							],
							"contractDependencies": [
								282,
								674,
								993
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3032,
							"linearizedBaseContracts": [
								3032,
								282,
								993,
								674
							],
							"name": "LiquidityController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 2167,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "548:60:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2163,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "548:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 2165,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "595:12:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 2164,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "585:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "585:23:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "07bd0265",
									"id": 2172,
									"mutability": "constant",
									"name": "EXECUTOR_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "611:66:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2168,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4558454355544f525f524f4c45",
												"id": 2170,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "661:15:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
													"typeString": "literal_string \"EXECUTOR_ROLE\""
												},
												"value": "EXECUTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
													"typeString": "literal_string \"EXECUTOR_ROLE\""
												}
											],
											"id": 2169,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "651:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "651:26:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b44a2722",
									"id": 2174,
									"mutability": "immutable",
									"name": "nonfungiblePositionManager",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "681:71:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
										"typeString": "contract INonfungiblePositionManager"
									},
									"typeName": {
										"id": 2173,
										"name": "INonfungiblePositionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1729,
										"src": "681:27:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 2176,
									"mutability": "immutable",
									"name": "swapRouter",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "755:39:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$1886",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 2175,
										"name": "ISwapRouter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1886,
										"src": "755:11:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$1886",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityController.Deposit",
									"id": 2187,
									"members": [
										{
											"constant": false,
											"id": 2178,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "896:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2177,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2180,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "914:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "914:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2182,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "932:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2181,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "932:6:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2184,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "946:15:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2183,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "946:5:20",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2186,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 2187,
											"src": "965:15:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2185,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "965:5:20",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nodeType": "StructDefinition",
									"scope": 3032,
									"src": "877:107:20",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b02c43d0",
									"id": 2191,
									"mutability": "mutable",
									"name": "deposits",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "1048:43:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
										"typeString": "mapping(uint256 => struct LiquidityController.Deposit)"
									},
									"typeName": {
										"id": 2190,
										"keyType": {
											"id": 2188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1056:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1048:27:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
											"typeString": "mapping(uint256 => struct LiquidityController.Deposit)"
										},
										"valueType": {
											"id": 2189,
											"name": "Deposit",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2187,
											"src": "1067:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$2187_storage_ptr",
												"typeString": "struct LiquidityController.Deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2201,
									"name": "NewDeposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1204:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1221:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1237:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1253:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2198,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:61:20"
									},
									"src": "1187:78:20"
								},
								{
									"anonymous": false,
									"id": 2211,
									"name": "CollectedFees",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1287:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1304:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1321:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawal",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1338:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:68:20"
									},
									"src": "1267:88:20"
								},
								{
									"anonymous": false,
									"id": 2221,
									"name": "LiquidityIncreased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1382:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1399:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1416:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1433:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:70:20"
									},
									"src": "1357:95:20"
								},
								{
									"anonymous": false,
									"id": 2231,
									"name": "LiquidityDecreased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1479:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1496:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1513:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1530:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1478:70:20"
									},
									"src": "1454:95:20"
								},
								{
									"anonymous": false,
									"id": 2241,
									"name": "TokenSwap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "1567:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "1584:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "1602:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "1620:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:72:20"
									},
									"src": "1551:88:20"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "1756:74:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "ADMIN_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "1776:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"id": 2246,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1788:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1788:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 2244,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1768:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1768:31:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1803:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1768:39:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742041646d696e",
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1809:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5",
																"typeString": "literal_string \"Not Admin\""
															},
															"value": "Not Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5",
																"typeString": "literal_string \"Not Admin\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1760:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:61:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "1760:61:20"
											},
											{
												"id": 2254,
												"nodeType": "PlaceholderStatement",
												"src": "1825:1:20"
											}
										]
									},
									"id": 2256,
									"name": "onlyAdmins",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:2:20"
									},
									"src": "1734:96:20",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "1865:140:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2260,
																			"name": "ADMIN_ROLE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "1889:10:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 2261,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1901:3:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1901:10:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 2259,
																		"name": "hasRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1881:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (bytes32,address) view returns (bool)"
																		}
																	},
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1881:31:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1916:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1881:39:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2267,
																			"name": "EXECUTOR_ROLE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "1932:13:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 2268,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1947:3:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1947:10:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 2266,
																		"name": "hasRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1924:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (bytes32,address) view returns (bool)"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1924:34:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1962:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1924:42:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1881:85:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742041646d696e4f724578656375746f72",
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1971:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2da0c8b10c8cd2f201bc2961a0ac20ee9174533f73329d1e80a590d4a5662fb4",
																"typeString": "literal_string \"Not AdminOrExecutor\""
															},
															"value": "Not AdminOrExecutor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2da0c8b10c8cd2f201bc2961a0ac20ee9174533f73329d1e80a590d4a5662fb4",
																"typeString": "literal_string \"Not AdminOrExecutor\""
															}
														],
														"id": 2258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1869:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:127:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "1869:127:20"
											},
											{
												"id": 2277,
												"nodeType": "PlaceholderStatement",
												"src": "2000:1:20"
											}
										]
									},
									"id": 2279,
									"name": "onlyAdminsOrExecutors",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:2:20"
									},
									"src": "1832:173:20",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "2236:249:20",
										"statements": [
											{
												"expression": {
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2290,
														"name": "nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "2240:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2291,
														"name": "_nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "2269:27:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"src": "2240:56:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "2240:56:20"
											},
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2294,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "2300:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1886",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2295,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2283,
														"src": "2313:11:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1886",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "2300:24:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1886",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "2300:24:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2299,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2343:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2300,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2355:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2298,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2329:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2329:37:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "2329:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2304,
															"name": "EXECUTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "2384:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2305,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2399:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2303,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2370:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "2370:40:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2309,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2426:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2310,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "2438:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2308,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2415:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "2415:30:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2314,
															"name": "EXECUTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "2460:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2315,
															"name": "_exec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "2475:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2313,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2449:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2449:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "2449:32:20"
											}
										]
									},
									"id": 2319,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "_nonfungiblePositionManager",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2115:55:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
													"typeString": "contract INonfungiblePositionManager"
												},
												"typeName": {
													"id": 2280,
													"name": "INonfungiblePositionManager",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1729,
													"src": "2115:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2174:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$1886",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 2282,
													"name": "ISwapRouter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1886,
													"src": "2174:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1886",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2201:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "_exec",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "2219:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:124:20"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:20"
									},
									"scope": 3032,
									"src": "2100:385:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										673
									],
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "2782:72:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "2801:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2333,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "2786:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:23:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "2786:23:20"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2337,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2820:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LiquidityController_$3032",
																"typeString": "contract LiquidityController"
															}
														},
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2342,
														"src": "2820:21:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "2820:30:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2332,
												"id": 2340,
												"nodeType": "Return",
												"src": "2813:37:20"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2329,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2756:8:20"
									},
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "2696:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "2705:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "2714:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "2731:14:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2731:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:51:20"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "2774:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2774:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:8:20"
									},
									"scope": 3032,
									"src": "2670:184:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "2907:439:20",
										"statements": [
											{
												"assignments": [
													null,
													2348,
													2350,
													2352,
													2354,
													2356,
													2358,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2348,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "2921:16:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2347,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2921:7:20",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2350,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "2942:14:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2349,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2942:7:20",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "2961:14:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2961:7:20",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2354,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "2980:10:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2353,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "2980:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2356,
														"mutability": "mutable",
														"name": "tickLower",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "2995:15:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2355,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2995:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2358,
														"mutability": "mutable",
														"name": "tickUpper",
														"nodeType": "VariableDeclaration",
														"scope": 2393,
														"src": "3015:15:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2357,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3015:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 2363,
												"initialValue": {
													"arguments": [
														{
															"id": 2361,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "3096:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2359,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "3059:26:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "3059:36:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:45:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2911:193:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2365,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "3116:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2368,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3136:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityController_$3032",
																			"typeString": "contract LiquidityController"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityController_$3032",
																			"typeString": "contract LiquidityController"
																		}
																	],
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3128:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2366,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3128:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3128:13:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3116:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74204f776e6564",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3143:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10a1711e2cc56296c925a8fee2383475d5618b7ba5c6e9eefba3914e4d33600e",
																"typeString": "literal_string \"Not Owned\""
															},
															"value": "Not Owned"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10a1711e2cc56296c925a8fee2383475d5618b7ba5c6e9eefba3914e4d33600e",
																"typeString": "literal_string \"Not Owned\""
															}
														],
														"id": 2364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3108:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3108:47:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "3108:47:20"
											},
											{
												"expression": {
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2374,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "3159:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityController.Deposit storage ref)"
															}
														},
														"id": 2376,
														"indexExpression": {
															"id": 2375,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "3168:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3159:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$2187_storage",
															"typeString": "struct LiquidityController.Deposit storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2378,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "3200:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2379,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "3219:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2380,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "3235:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															{
																"id": 2381,
																"name": "tickLower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "3254:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 2382,
																"name": "tickUpper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "3279:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 2377,
															"name": "Deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "3179:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Deposit_$2187_storage_ptr_$",
																"typeString": "type(struct LiquidityController.Deposit storage pointer)"
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"token0",
															"token1",
															"fee",
															"tickLower",
															"tickUpper"
														],
														"nodeType": "FunctionCall",
														"src": "3179:114:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$2187_memory_ptr",
															"typeString": "struct LiquidityController.Deposit memory"
														}
													},
													"src": "3159:134:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$2187_storage",
														"typeString": "struct LiquidityController.Deposit storage ref"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "3159:134:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "3313:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2388,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "3322:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2389,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "3330:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2390,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "3338:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2386,
														"name": "NewDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "3302:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint24_$returns$__$",
															"typeString": "function (uint256,address,address,uint24)"
														}
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2392,
												"nodeType": "EmitStatement",
												"src": "3297:45:20"
											}
										]
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "2881:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:17:20"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2907:0:20"
									},
									"scope": 3032,
									"src": "2857:489:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "3588:49:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2407,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "3630:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2404,
																	"name": "toTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "3600:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2403,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "3592:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$392_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3592:19:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ownable_$392",
																"typeString": "contract Ownable"
															}
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 391,
														"src": "3592:37:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3592:41:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2409,
												"nodeType": "ExpressionStatement",
												"src": "3592:41:20"
											}
										]
									},
									"functionSelector": "1c8c9980",
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2401,
											"modifierName": {
												"id": 2400,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "3577:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3577:10:20"
										}
									],
									"name": "redeemOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "toTransfer",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "3536:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "3556:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:32:20"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3588:0:20"
									},
									"scope": 3032,
									"src": "3511:126:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "3723:53:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2425,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "3755:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2426,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "3762:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2427,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "3766:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2422,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3727:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "3727:27:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:45:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "3727:45:20"
											}
										]
									},
									"functionSelector": "0d71bdc3",
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2420,
											"modifierName": {
												"id": 2419,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "3712:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3712:10:20"
										}
									],
									"name": "redeemToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "3661:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "3676:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "3688:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3660:42:20"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:0:20"
									},
									"scope": 3032,
									"src": "3640:136:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "3847:107:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2445,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2443,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3910:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2448,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "3914:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2440,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "3851:26:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 541,
														"src": "3851:43:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:71:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "3851:71:20"
											},
											{
												"expression": {
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3926:24:20",
													"subExpression": {
														"baseExpression": {
															"id": 2451,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "3933:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityController.Deposit storage ref)"
															}
														},
														"id": 2453,
														"indexExpression": {
															"id": 2452,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "3942:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3933:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$2187_storage",
															"typeString": "struct LiquidityController.Deposit storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2455,
												"nodeType": "ExpressionStatement",
												"src": "3926:24:20"
											}
										]
									},
									"functionSelector": "3ef4c3d4",
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2438,
											"modifierName": {
												"id": 2437,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "3836:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3836:10:20"
										}
									],
									"name": "redeemNFT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "3798:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "3815:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:29:20"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:0:20"
									},
									"scope": 3032,
									"src": "3779:175:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "4232:95:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2469,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "4254:8:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
																		"typeString": "mapping(uint256 => struct LiquidityController.Deposit storage ref)"
																	}
																},
																"id": 2471,
																"indexExpression": {
																	"id": 2470,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2459,
																	"src": "4263:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4254:17:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$2187_storage",
																	"typeString": "struct LiquidityController.Deposit storage ref"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2178,
															"src": "4254:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2473,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "4280:8:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2187_storage_$",
																		"typeString": "mapping(uint256 => struct LiquidityController.Deposit storage ref)"
																	}
																},
																"id": 2475,
																"indexExpression": {
																	"id": 2474,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2459,
																	"src": "4289:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4280:17:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$2187_storage",
																	"typeString": "struct LiquidityController.Deposit storage ref"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2180,
															"src": "4280:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2477,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "4306:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2478,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "4315:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2468,
														"name": "transferForTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2522,
														"src": "4236:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:87:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "4236:87:20"
											}
										]
									},
									"functionSelector": "7d42c461",
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2466,
											"modifierName": {
												"id": 2465,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "4221:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4221:10:20"
										}
									],
									"name": "transferForDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "4161:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "4178:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "4195:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:51:20"
									},
									"returnParameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4232:0:20"
									},
									"scope": 3032,
									"src": "4133:194:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "4441:162:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2498,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "4477:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4485:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4485:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2503,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4505:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4497:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4497:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4497:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2505,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "4512:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2495,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4445:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2030,
														"src": "4445:31:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4445:75:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "4445:75:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2511,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "4556:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2512,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4564:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4564:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2516,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4584:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4576:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4576:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4576:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2518,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "4591:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2508,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4524:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2030,
														"src": "4524:31:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:75:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "4524:75:20"
											}
										]
									},
									"functionSelector": "dce008af",
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2493,
											"modifierName": {
												"id": 2492,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "4430:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4430:10:20"
										}
									],
									"name": "transferForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "4357:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4357:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "4373:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4373:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "4389:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "4406:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4356:66:20"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4441:0:20"
									},
									"scope": 3032,
									"src": "4330:273:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "4821:312:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2534,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "4852:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2537,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "4868:26:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4860:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4860:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4860:35:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4897:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "323535",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4902:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "4897:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														],
														"expression": {
															"id": 2531,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4825:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "4825:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4825:81:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "4825:81:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2547,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "4937:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2550,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "4953:26:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4945:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4945:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4945:35:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4982:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "323535",
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4987:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "4982:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														],
														"expression": {
															"id": 2544,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4910:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "4910:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:81:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2556,
												"nodeType": "ExpressionStatement",
												"src": "4910:81:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2560,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "5022:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2563,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5038:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5030:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5030:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5030:19:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5051:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "323535",
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5056:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "5051:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														],
														"expression": {
															"id": 2557,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4995:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "4995:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4995:65:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2569,
												"nodeType": "ExpressionStatement",
												"src": "4995:65:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2573,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "5091:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2576,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5107:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5099:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5099:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5099:19:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5120:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "323535",
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5125:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "5120:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																"typeString": "int_const 5789...(69 digits omitted)...9968"
															}
														],
														"expression": {
															"id": 2570,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5064:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5064:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:65:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "5064:65:20"
											}
										]
									},
									"functionSelector": "a8243558",
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2529,
											"modifierName": {
												"id": 2528,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "4810:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4810:10:20"
										}
									],
									"name": "approveInfinity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "4769:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "4785:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:32:20"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4821:0:20"
									},
									"scope": 3032,
									"src": "4744:389:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "5246:172:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2600,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "5277:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2603,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "5293:26:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5285:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5285:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5285:35:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2605,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "5322:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2597,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5250:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5250:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5250:80:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2607,
												"nodeType": "ExpressionStatement",
												"src": "5250:80:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2611,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "5361:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2614,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "5377:26:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5369:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2612,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5369:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5369:35:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2616,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "5406:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2608,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5334:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5334:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:80:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "5334:80:20"
											}
										]
									},
									"functionSelector": "25eb6e6f",
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2595,
											"modifierName": {
												"id": 2594,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "5235:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5235:10:20"
										}
									],
									"name": "approveManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5160:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5160:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5176:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5192:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "5209:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:66:20"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:20"
									},
									"scope": 3032,
									"src": "5136:282:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "5530:140:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2636,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "5561:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2639,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5577:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5569:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5569:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5569:19:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2641,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "5590:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2633,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5534:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5534:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5534:64:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "5534:64:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2647,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "5629:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2650,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5645:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5637:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5637:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5637:19:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2652,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "5658:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2644,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5602:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5602:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5602:64:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "5602:64:20"
											}
										]
									},
									"functionSelector": "57706e74",
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2631,
											"modifierName": {
												"id": 2630,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "5519:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5519:10:20"
										}
									],
									"name": "approveRouter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "5444:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "5460:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5460:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "5476:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "5493:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:66:20"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5530:0:20"
									},
									"scope": 3032,
									"src": "5421:249:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2675,
										"nodeType": "Block",
										"src": "5779:53:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "5810:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "5817:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2672,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "5821:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2667,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5783:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2149_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2122,
														"src": "5783:26:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5783:45:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "5783:45:20"
											}
										]
									},
									"functionSelector": "e1f21c67",
									"id": 2676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2665,
											"modifierName": {
												"id": 2664,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2256,
												"src": "5768:10:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5768:10:20"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "5716:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "5731:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5731:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "5743:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5715:43:20"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5779:0:20"
									},
									"scope": 3032,
									"src": "5699:133:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "6249:636:20",
										"statements": [
											{
												"assignments": [
													2710
												],
												"declarations": [
													{
														"constant": false,
														"id": 2710,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "6253:52:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1643_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.MintParams"
														},
														"typeName": {
															"id": 2709,
															"name": "INonfungiblePositionManager.MintParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1643,
															"src": "6253:38:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1643_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2731,
												"initialValue": {
													"arguments": [
														{
															"id": 2713,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "6360:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2714,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "6379:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2715,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "6395:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 2716,
															"name": "tickLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "6414:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 2717,
															"name": "tickUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "6439:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 2718,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "6469:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2719,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "6504:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2720,
															"name": "amount0Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "6535:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2721,
															"name": "amount1Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "6562:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2724,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6596:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6588:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2722,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6588:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6588:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2726,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6616:5:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6616:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6634:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "6616:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2711,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "6308:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1729_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "MintParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1643,
														"src": "6308:38:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MintParams_$1643_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
														}
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee",
														"tickLower",
														"tickUpper",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"recipient",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "6308:334:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1643_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6253:389:20"
											},
											{
												"expression": {
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2732,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2699,
																"src": "6752:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2733,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2701,
																"src": "6761:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2734,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "6772:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2735,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "6781:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2736,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6751:38:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2739,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "6824:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintParams_$1643_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_MintParams_$1643_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															],
															"expression": {
																"id": 2737,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "6792:26:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1657,
															"src": "6792:31:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1643_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
															}
														},
														"id": 2740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6792:39:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"src": "6751:80:20",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2742,
												"nodeType": "ExpressionStatement",
												"src": "6751:80:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "6873:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2743,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "6858:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:23:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "6858:23:20"
											}
										]
									},
									"functionSelector": "dd37019d",
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2697,
											"modifierName": {
												"id": 2696,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "6148:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6148:21:20"
										}
									],
									"name": "mintNewPosition",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "5955:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "5973:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5973:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "5991:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2681,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5991:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6005:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2683,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6005:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6024:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2685,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "amount0Desired",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6043:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "amount1Desired",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6069:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "amount0Min",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6095:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "amount1Min",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6117:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6117:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5951:187:20"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6179:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6196:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2700,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6196:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6215:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6215:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "6232:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6178:70:20"
									},
									"scope": 3032,
									"src": "5927:958:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "7114:649:20",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2761,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "7122:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7134:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7122:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2776,
												"nodeType": "IfStatement",
												"src": "7118:140:20",
												"trueBody": {
													"id": 2775,
													"nodeType": "Block",
													"src": "7140:118:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2766,
																					"name": "ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "7208:10:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"expression": {
																						"id": 2767,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7220:3:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "7220:10:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 2765,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 71,
																				"src": "7200:7:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7200:31:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7235:4:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "7200:39:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f742041646d696e",
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7241:11:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5",
																			"typeString": "literal_string \"Not Admin\""
																		},
																		"value": "Not Admin"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5885e2eef167d86533945215993c68b709997426f673cf64b6b0df809c173de5",
																			"typeString": "literal_string \"Not Admin\""
																		}
																	],
																	"id": 2764,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7192:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7192:61:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2774,
															"nodeType": "ExpressionStatement",
															"src": "7192:61:20"
														}
													]
												}
											},
											{
												"assignments": [
													2780
												],
												"declarations": [
													{
														"constant": false,
														"id": 2780,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 2820,
														"src": "7332:55:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectParams_$1712_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.CollectParams"
														},
														"typeName": {
															"id": 2779,
															"name": "INonfungiblePositionManager.CollectParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1712,
															"src": "7332:41:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1712_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2803,
												"initialValue": {
													"arguments": [
														{
															"id": 2783,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "7446:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"condition": {
																"id": 2784,
																"name": "withdraw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2752,
																"src": "7469:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"arguments": [
																	{
																		"id": 2789,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7501:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityController_$3032",
																			"typeString": "contract LiquidityController"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityController_$3032",
																			"typeString": "contract LiquidityController"
																		}
																	],
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7493:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2787,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7493:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7493:13:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "7469:37:20",
															"trueExpression": {
																"expression": {
																	"id": 2785,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7480:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7480:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7581:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 2793,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "7581:7:20",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 2792,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "7576:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7576:13:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "7576:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7615:7:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 2798,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "7615:7:20",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 2797,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "7610:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7610:13:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "7610:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 2781,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "7390:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1729_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 2782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "CollectParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1712,
														"src": "7390:41:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CollectParams_$1712_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
														}
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"recipient",
														"amount0Max",
														"amount1Max"
													],
													"nodeType": "FunctionCall",
													"src": "7390:242:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1712_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:300:20"
											},
											{
												"expression": {
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2804,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "7638:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2805,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2759,
																"src": "7647:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2806,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7637:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2809,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2780,
																"src": "7693:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectParams_$1712_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_CollectParams_$1712_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															],
															"expression": {
																"id": 2807,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "7658:26:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "collect",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "7658:34:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$1712_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7658:42:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "7637:63:20",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2812,
												"nodeType": "ExpressionStatement",
												"src": "7637:63:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "7723:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2815,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "7732:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2816,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2759,
															"src": "7741:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2817,
															"name": "withdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "7750:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2813,
														"name": "CollectedFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "7709:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,bool)"
														}
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7709:50:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2819,
												"nodeType": "EmitStatement",
												"src": "7704:55:20"
											}
										]
									},
									"functionSelector": "3a483cb0",
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2755,
											"modifierName": {
												"id": 2754,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "7049:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7049:21:20"
										}
									],
									"name": "collectFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "7004:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7004:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "withdraw",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "7023:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7023:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7000:39:20"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "7080:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7080:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "7097:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:34:20"
									},
									"scope": 3032,
									"src": "6980:783:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "8096:522:20",
										"statements": [
											{
												"assignments": [
													2845
												],
												"declarations": [
													{
														"constant": false,
														"id": 2845,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "8100:65:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
														},
														"typeName": {
															"id": 2844,
															"name": "INonfungiblePositionManager.IncreaseLiquidityParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1670,
															"src": "8100:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2856,
												"initialValue": {
													"arguments": [
														{
															"id": 2848,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "8239:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2849,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2825,
															"src": "8268:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2850,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2827,
															"src": "8304:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2851,
															"name": "amount0Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "8336:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2852,
															"name": "amount1Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2831,
															"src": "8364:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2853,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8390:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8390:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2846,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "8168:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1729_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "IncreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "8168:55:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$1670_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
														}
													},
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "8168:243:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8100:311:20"
											},
											{
												"expression": {
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2857,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2836,
																"src": "8466:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2858,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "8477:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2859,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "8486:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2860,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8465:29:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2863,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2845,
																"src": "8542:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1670_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 2861,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "8497:26:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "increaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1682,
															"src": "8497:44:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$1670_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
															}
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8497:52:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"src": "8465:84:20",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2866,
												"nodeType": "ExpressionStatement",
												"src": "8465:84:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "8577:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2869,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2838,
															"src": "8586:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2870,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "8595:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2871,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "8604:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 2867,
														"name": "LiquidityIncreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "8558:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8558:56:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2873,
												"nodeType": "EmitStatement",
												"src": "8553:61:20"
											}
										]
									},
									"functionSelector": "c691b0a1",
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2834,
											"modifierName": {
												"id": 2833,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "8012:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8012:21:20"
										}
									],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7888:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7888:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "amount0Desired",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7907:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7907:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "amount1Desired",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7933:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7933:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "amount0Min",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7959:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "amount1Min",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7981:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7981:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7884:118:20"
									},
									"returnParameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8043:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2835,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8043:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8062:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8062:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8079:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8079:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:53:20"
									},
									"scope": 3032,
									"src": "7858:760:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2922,
										"nodeType": "Block",
										"src": "8901:585:20",
										"statements": [
											{
												"assignments": [
													2895
												],
												"declarations": [
													{
														"constant": false,
														"id": 2895,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 2922,
														"src": "9074:65:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
														},
														"typeName": {
															"id": 2894,
															"name": "INonfungiblePositionManager.DecreaseLiquidityParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1693,
															"src": "9074:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2905,
												"initialValue": {
													"arguments": [
														{
															"id": 2898,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "9213:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2899,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "9237:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 2900,
															"name": "amount0Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "9264:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2901,
															"name": "amount1Min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2883,
															"src": "9292:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2902,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9318:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9318:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2896,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "9142:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1729_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 2897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "DecreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1693,
														"src": "9142:55:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$1693_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
														}
													},
													"id": 2904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"liquidity",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "9142:197:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9074:265:20"
											},
											{
												"expression": {
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2906,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2888,
																"src": "9345:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2907,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "9354:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2908,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9344:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2911,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "9410:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1693_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 2909,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9365:26:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1729",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decreaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1703,
															"src": "9365:44:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$1693_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9365:52:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "9344:73:20",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2914,
												"nodeType": "ExpressionStatement",
												"src": "9344:73:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2916,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "9445:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2917,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "9454:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2918,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "9463:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2919,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "9472:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 2915,
														"name": "LiquidityDecreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "9426:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:56:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2921,
												"nodeType": "EmitStatement",
												"src": "9421:61:20"
											}
										]
									},
									"functionSelector": "8e5f5977",
									"id": 2923,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2886,
											"modifierName": {
												"id": 2885,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "8836:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8836:21:20"
										}
									],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8743:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8743:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8762:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2878,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8762:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "amount0Min",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8783:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8783:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "amount1Min",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8805:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8805:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8739:87:20"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8867:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "8884:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8866:34:20"
									},
									"scope": 3032,
									"src": "8713:773:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2976,
										"nodeType": "Block",
										"src": "9796:462:20",
										"statements": [
											{
												"assignments": [
													2945
												],
												"declarations": [
													{
														"constant": false,
														"id": 2945,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 2976,
														"src": "9800:48:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 2944,
															"name": "ISwapRouter.ExactInputSingleParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1814,
															"src": "9800:34:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2961,
												"initialValue": {
													"arguments": [
														{
															"id": 2948,
															"name": "tkn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "9900:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2949,
															"name": "tkn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "9919:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2950,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "9933:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 2953,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9960:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9952:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9952:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9952:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2955,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9980:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9980:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2957,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "10010:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2958,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "10041:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2959,
															"name": "sqrtPriceLimitX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "10081:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 2946,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "9851:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1886_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 2947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1814,
														"src": "9851:34:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$1814_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "9851:252:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9800:303:20"
											},
											{
												"expression": {
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2962,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2940,
														"src": "10156:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2965,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "10196:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$1814_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 2963,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10168:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1822,
															"src": "10168:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$1814_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 2966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10168:35:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10156:47:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2968,
												"nodeType": "ExpressionStatement",
												"src": "10156:47:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2970,
															"name": "tkn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "10222:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2971,
															"name": "tkn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "10228:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2972,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "10234:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2973,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2940,
															"src": "10244:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2969,
														"name": "TokenSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "10212:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10212:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2975,
												"nodeType": "EmitStatement",
												"src": "10207:47:20"
											}
										]
									},
									"functionSelector": "b4580507",
									"id": 2977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2938,
											"modifierName": {
												"id": 2937,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "9746:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9746:21:20"
										}
									],
									"name": "swapExactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "tkn0",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9614:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9614:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "tkn1",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9630:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9630:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9646:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2928,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "9646:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9660:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9660:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9680:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9680:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9708:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2934,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9708:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:126:20"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "9777:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9776:19:20"
									},
									"scope": 3032,
									"src": "9581:677:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "10568:464:20",
										"statements": [
											{
												"assignments": [
													2999
												],
												"declarations": [
													{
														"constant": false,
														"id": 2999,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "10572:49:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 2998,
															"name": "ISwapRouter.ExactOutputSingleParams",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1858,
															"src": "10572:35:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3015,
												"initialValue": {
													"arguments": [
														{
															"id": 3002,
															"name": "tkn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "10674:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3003,
															"name": "tkn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "10693:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3004,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2983,
															"src": "10707:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 3007,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10734:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityController_$3032",
																		"typeString": "contract LiquidityController"
																	}
																],
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10726:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3005,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10726:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10726:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3009,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10754:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10754:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3011,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "10785:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3012,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2987,
															"src": "10816:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3013,
															"name": "sqrtPriceLimitX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2989,
															"src": "10855:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"id": 3000,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "10624:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1886_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 3001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1858,
														"src": "10624:35:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$1858_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "10624:253:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10572:305:20"
											},
											{
												"expression": {
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3016,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2994,
														"src": "10930:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3019,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "10970:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1858_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 3017,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10941:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$1886",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1866,
															"src": "10941:28:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$1858_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10941:36:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10930:47:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3022,
												"nodeType": "ExpressionStatement",
												"src": "10930:47:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3024,
															"name": "tkn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "10996:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3025,
															"name": "tkn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "11002:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3026,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "11008:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3027,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "11018:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3023,
														"name": "TokenSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "10986:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10986:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3029,
												"nodeType": "EmitStatement",
												"src": "10981:47:20"
											}
										]
									},
									"functionSelector": "4c8c7314",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2992,
											"modifierName": {
												"id": 2991,
												"name": "onlyAdminsOrExecutors",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2279,
												"src": "10519:21:20",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10519:21:20"
										}
									],
									"name": "swapExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "tkn0",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10387:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10387:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "tkn1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10403:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10403:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10419:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2982,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "10419:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10433:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10433:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10454:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10454:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10481:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2988,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10383:126:20"
									},
									"returnParameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "10550:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10549:18:20"
									},
									"scope": 3032,
									"src": "10353:679:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3033,
							"src": "482:10552:20"
						}
					],
					"src": "32:11003:20"
				},
				"id": 20
			}
		}
	}
}